
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Tenant
 * 
 */
export type Tenant = $Result.DefaultSelection<Prisma.$TenantPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model VarianteProducto
 * 
 */
export type VarianteProducto = $Result.DefaultSelection<Prisma.$VarianteProductoPayload>
/**
 * Model MovimientoStock
 * 
 */
export type MovimientoStock = $Result.DefaultSelection<Prisma.$MovimientoStockPayload>
/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Venta
 * 
 */
export type Venta = $Result.DefaultSelection<Prisma.$VentaPayload>
/**
 * Model Transaccion
 * 
 */
export type Transaccion = $Result.DefaultSelection<Prisma.$TransaccionPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TipoMovimiento: {
  ENTRADA: 'ENTRADA',
  SALIDA: 'SALIDA'
};

export type TipoMovimiento = (typeof TipoMovimiento)[keyof typeof TipoMovimiento]


export const TipoTransaccion: {
  VENTA: 'VENTA',
  COMPRA: 'COMPRA',
  AJUSTE: 'AJUSTE'
};

export type TipoTransaccion = (typeof TipoTransaccion)[keyof typeof TipoTransaccion]

}

export type TipoMovimiento = $Enums.TipoMovimiento

export const TipoMovimiento: typeof $Enums.TipoMovimiento

export type TipoTransaccion = $Enums.TipoTransaccion

export const TipoTransaccion: typeof $Enums.TipoTransaccion

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tenants
 * const tenants = await prisma.tenant.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tenants
   * const tenants = await prisma.tenant.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.tenant`: Exposes CRUD operations for the **Tenant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tenants
    * const tenants = await prisma.tenant.findMany()
    * ```
    */
  get tenant(): Prisma.TenantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.varianteProducto`: Exposes CRUD operations for the **VarianteProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VarianteProductos
    * const varianteProductos = await prisma.varianteProducto.findMany()
    * ```
    */
  get varianteProducto(): Prisma.VarianteProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.movimientoStock`: Exposes CRUD operations for the **MovimientoStock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MovimientoStocks
    * const movimientoStocks = await prisma.movimientoStock.findMany()
    * ```
    */
  get movimientoStock(): Prisma.MovimientoStockDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **Venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.VentaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaccion`: Exposes CRUD operations for the **Transaccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaccions
    * const transaccions = await prisma.transaccion.findMany()
    * ```
    */
  get transaccion(): Prisma.TransaccionDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Tenant: 'Tenant',
    User: 'User',
    Producto: 'Producto',
    VarianteProducto: 'VarianteProducto',
    MovimientoStock: 'MovimientoStock',
    Cliente: 'Cliente',
    Venta: 'Venta',
    Transaccion: 'Transaccion'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "tenant" | "user" | "producto" | "varianteProducto" | "movimientoStock" | "cliente" | "venta" | "transaccion"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Tenant: {
        payload: Prisma.$TenantPayload<ExtArgs>
        fields: Prisma.TenantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TenantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TenantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          findFirst: {
            args: Prisma.TenantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TenantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          findMany: {
            args: Prisma.TenantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>[]
          }
          create: {
            args: Prisma.TenantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          createMany: {
            args: Prisma.TenantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TenantCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>[]
          }
          delete: {
            args: Prisma.TenantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          update: {
            args: Prisma.TenantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          deleteMany: {
            args: Prisma.TenantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TenantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TenantUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>[]
          }
          upsert: {
            args: Prisma.TenantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          aggregate: {
            args: Prisma.TenantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTenant>
          }
          groupBy: {
            args: Prisma.TenantGroupByArgs<ExtArgs>
            result: $Utils.Optional<TenantGroupByOutputType>[]
          }
          count: {
            args: Prisma.TenantCountArgs<ExtArgs>
            result: $Utils.Optional<TenantCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      VarianteProducto: {
        payload: Prisma.$VarianteProductoPayload<ExtArgs>
        fields: Prisma.VarianteProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VarianteProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VarianteProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>
          }
          findFirst: {
            args: Prisma.VarianteProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VarianteProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>
          }
          findMany: {
            args: Prisma.VarianteProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>[]
          }
          create: {
            args: Prisma.VarianteProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>
          }
          createMany: {
            args: Prisma.VarianteProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VarianteProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>[]
          }
          delete: {
            args: Prisma.VarianteProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>
          }
          update: {
            args: Prisma.VarianteProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>
          }
          deleteMany: {
            args: Prisma.VarianteProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VarianteProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VarianteProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>[]
          }
          upsert: {
            args: Prisma.VarianteProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VarianteProductoPayload>
          }
          aggregate: {
            args: Prisma.VarianteProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVarianteProducto>
          }
          groupBy: {
            args: Prisma.VarianteProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VarianteProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VarianteProductoCountArgs<ExtArgs>
            result: $Utils.Optional<VarianteProductoCountAggregateOutputType> | number
          }
        }
      }
      MovimientoStock: {
        payload: Prisma.$MovimientoStockPayload<ExtArgs>
        fields: Prisma.MovimientoStockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MovimientoStockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MovimientoStockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>
          }
          findFirst: {
            args: Prisma.MovimientoStockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MovimientoStockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>
          }
          findMany: {
            args: Prisma.MovimientoStockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>[]
          }
          create: {
            args: Prisma.MovimientoStockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>
          }
          createMany: {
            args: Prisma.MovimientoStockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MovimientoStockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>[]
          }
          delete: {
            args: Prisma.MovimientoStockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>
          }
          update: {
            args: Prisma.MovimientoStockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>
          }
          deleteMany: {
            args: Prisma.MovimientoStockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MovimientoStockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MovimientoStockUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>[]
          }
          upsert: {
            args: Prisma.MovimientoStockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoStockPayload>
          }
          aggregate: {
            args: Prisma.MovimientoStockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovimientoStock>
          }
          groupBy: {
            args: Prisma.MovimientoStockGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovimientoStockGroupByOutputType>[]
          }
          count: {
            args: Prisma.MovimientoStockCountArgs<ExtArgs>
            result: $Utils.Optional<MovimientoStockCountAggregateOutputType> | number
          }
        }
      }
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Venta: {
        payload: Prisma.$VentaPayload<ExtArgs>
        fields: Prisma.VentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findFirst: {
            args: Prisma.VentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findMany: {
            args: Prisma.VentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          create: {
            args: Prisma.VentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          createMany: {
            args: Prisma.VentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          delete: {
            args: Prisma.VentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          update: {
            args: Prisma.VentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          deleteMany: {
            args: Prisma.VentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VentaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          upsert: {
            args: Prisma.VentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.VentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
      Transaccion: {
        payload: Prisma.$TransaccionPayload<ExtArgs>
        fields: Prisma.TransaccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransaccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransaccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          findFirst: {
            args: Prisma.TransaccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransaccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          findMany: {
            args: Prisma.TransaccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>[]
          }
          create: {
            args: Prisma.TransaccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          createMany: {
            args: Prisma.TransaccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransaccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>[]
          }
          delete: {
            args: Prisma.TransaccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          update: {
            args: Prisma.TransaccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          deleteMany: {
            args: Prisma.TransaccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransaccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransaccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>[]
          }
          upsert: {
            args: Prisma.TransaccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          aggregate: {
            args: Prisma.TransaccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaccion>
          }
          groupBy: {
            args: Prisma.TransaccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransaccionCountArgs<ExtArgs>
            result: $Utils.Optional<TransaccionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    tenant?: TenantOmit
    user?: UserOmit
    producto?: ProductoOmit
    varianteProducto?: VarianteProductoOmit
    movimientoStock?: MovimientoStockOmit
    cliente?: ClienteOmit
    venta?: VentaOmit
    transaccion?: TransaccionOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type TenantCountOutputType
   */

  export type TenantCountOutputType = {
    usuarios: number
    productos: number
    clientes: number
    variantesProducto: number
    transacciones: number
    ventas: number
    movimientosStock: number
  }

  export type TenantCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | TenantCountOutputTypeCountUsuariosArgs
    productos?: boolean | TenantCountOutputTypeCountProductosArgs
    clientes?: boolean | TenantCountOutputTypeCountClientesArgs
    variantesProducto?: boolean | TenantCountOutputTypeCountVariantesProductoArgs
    transacciones?: boolean | TenantCountOutputTypeCountTransaccionesArgs
    ventas?: boolean | TenantCountOutputTypeCountVentasArgs
    movimientosStock?: boolean | TenantCountOutputTypeCountMovimientosStockArgs
  }

  // Custom InputTypes
  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantCountOutputType
     */
    select?: TenantCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountVariantesProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VarianteProductoWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountTransaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountMovimientosStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoStockWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    productos: number
    transacciones: number
    movimientos: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | UserCountOutputTypeCountProductosArgs
    transacciones?: boolean | UserCountOutputTypeCountTransaccionesArgs
    movimientos?: boolean | UserCountOutputTypeCountMovimientosArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMovimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoStockWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    variantes: number
    movimientos: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variantes?: boolean | ProductoCountOutputTypeCountVariantesArgs
    movimientos?: boolean | ProductoCountOutputTypeCountMovimientosArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountVariantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VarianteProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountMovimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoStockWhereInput
  }


  /**
   * Count Type VarianteProductoCountOutputType
   */

  export type VarianteProductoCountOutputType = {
    ventas: number
    movimientos: number
  }

  export type VarianteProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | VarianteProductoCountOutputTypeCountVentasArgs
    movimientos?: boolean | VarianteProductoCountOutputTypeCountMovimientosArgs
  }

  // Custom InputTypes
  /**
   * VarianteProductoCountOutputType without action
   */
  export type VarianteProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProductoCountOutputType
     */
    select?: VarianteProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VarianteProductoCountOutputType without action
   */
  export type VarianteProductoCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }

  /**
   * VarianteProductoCountOutputType without action
   */
  export type VarianteProductoCountOutputTypeCountMovimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoStockWhereInput
  }


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    ventas: number
    transacciones: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | ClienteCountOutputTypeCountVentasArgs
    transacciones?: boolean | ClienteCountOutputTypeCountTransaccionesArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountTransaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
  }


  /**
   * Count Type TransaccionCountOutputType
   */

  export type TransaccionCountOutputType = {
    ventas: number
    movimientos: number
  }

  export type TransaccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | TransaccionCountOutputTypeCountVentasArgs
    movimientos?: boolean | TransaccionCountOutputTypeCountMovimientosArgs
  }

  // Custom InputTypes
  /**
   * TransaccionCountOutputType without action
   */
  export type TransaccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransaccionCountOutputType
     */
    select?: TransaccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransaccionCountOutputType without action
   */
  export type TransaccionCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }

  /**
   * TransaccionCountOutputType without action
   */
  export type TransaccionCountOutputTypeCountMovimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoStockWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Tenant
   */

  export type AggregateTenant = {
    _count: TenantCountAggregateOutputType | null
    _avg: TenantAvgAggregateOutputType | null
    _sum: TenantSumAggregateOutputType | null
    _min: TenantMinAggregateOutputType | null
    _max: TenantMaxAggregateOutputType | null
  }

  export type TenantAvgAggregateOutputType = {
    id: number | null
  }

  export type TenantSumAggregateOutputType = {
    id: number | null
  }

  export type TenantMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    createdAt: Date | null
  }

  export type TenantMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    createdAt: Date | null
  }

  export type TenantCountAggregateOutputType = {
    id: number
    nombre: number
    createdAt: number
    _all: number
  }


  export type TenantAvgAggregateInputType = {
    id?: true
  }

  export type TenantSumAggregateInputType = {
    id?: true
  }

  export type TenantMinAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
  }

  export type TenantMaxAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
  }

  export type TenantCountAggregateInputType = {
    id?: true
    nombre?: true
    createdAt?: true
    _all?: true
  }

  export type TenantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tenant to aggregate.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tenants
    **/
    _count?: true | TenantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TenantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TenantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TenantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TenantMaxAggregateInputType
  }

  export type GetTenantAggregateType<T extends TenantAggregateArgs> = {
        [P in keyof T & keyof AggregateTenant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTenant[P]>
      : GetScalarType<T[P], AggregateTenant[P]>
  }




  export type TenantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TenantWhereInput
    orderBy?: TenantOrderByWithAggregationInput | TenantOrderByWithAggregationInput[]
    by: TenantScalarFieldEnum[] | TenantScalarFieldEnum
    having?: TenantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TenantCountAggregateInputType | true
    _avg?: TenantAvgAggregateInputType
    _sum?: TenantSumAggregateInputType
    _min?: TenantMinAggregateInputType
    _max?: TenantMaxAggregateInputType
  }

  export type TenantGroupByOutputType = {
    id: number
    nombre: string
    createdAt: Date
    _count: TenantCountAggregateOutputType | null
    _avg: TenantAvgAggregateOutputType | null
    _sum: TenantSumAggregateOutputType | null
    _min: TenantMinAggregateOutputType | null
    _max: TenantMaxAggregateOutputType | null
  }

  type GetTenantGroupByPayload<T extends TenantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TenantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TenantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TenantGroupByOutputType[P]>
            : GetScalarType<T[P], TenantGroupByOutputType[P]>
        }
      >
    >


  export type TenantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
    usuarios?: boolean | Tenant$usuariosArgs<ExtArgs>
    productos?: boolean | Tenant$productosArgs<ExtArgs>
    clientes?: boolean | Tenant$clientesArgs<ExtArgs>
    variantesProducto?: boolean | Tenant$variantesProductoArgs<ExtArgs>
    transacciones?: boolean | Tenant$transaccionesArgs<ExtArgs>
    ventas?: boolean | Tenant$ventasArgs<ExtArgs>
    movimientosStock?: boolean | Tenant$movimientosStockArgs<ExtArgs>
    _count?: boolean | TenantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tenant"]>

  export type TenantSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["tenant"]>

  export type TenantSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["tenant"]>

  export type TenantSelectScalar = {
    id?: boolean
    nombre?: boolean
    createdAt?: boolean
  }

  export type TenantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "createdAt", ExtArgs["result"]["tenant"]>
  export type TenantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Tenant$usuariosArgs<ExtArgs>
    productos?: boolean | Tenant$productosArgs<ExtArgs>
    clientes?: boolean | Tenant$clientesArgs<ExtArgs>
    variantesProducto?: boolean | Tenant$variantesProductoArgs<ExtArgs>
    transacciones?: boolean | Tenant$transaccionesArgs<ExtArgs>
    ventas?: boolean | Tenant$ventasArgs<ExtArgs>
    movimientosStock?: boolean | Tenant$movimientosStockArgs<ExtArgs>
    _count?: boolean | TenantCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TenantIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type TenantIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TenantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tenant"
    objects: {
      usuarios: Prisma.$UserPayload<ExtArgs>[]
      productos: Prisma.$ProductoPayload<ExtArgs>[]
      clientes: Prisma.$ClientePayload<ExtArgs>[]
      variantesProducto: Prisma.$VarianteProductoPayload<ExtArgs>[]
      transacciones: Prisma.$TransaccionPayload<ExtArgs>[]
      ventas: Prisma.$VentaPayload<ExtArgs>[]
      movimientosStock: Prisma.$MovimientoStockPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      createdAt: Date
    }, ExtArgs["result"]["tenant"]>
    composites: {}
  }

  type TenantGetPayload<S extends boolean | null | undefined | TenantDefaultArgs> = $Result.GetResult<Prisma.$TenantPayload, S>

  type TenantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TenantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TenantCountAggregateInputType | true
    }

  export interface TenantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tenant'], meta: { name: 'Tenant' } }
    /**
     * Find zero or one Tenant that matches the filter.
     * @param {TenantFindUniqueArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TenantFindUniqueArgs>(args: SelectSubset<T, TenantFindUniqueArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tenant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TenantFindUniqueOrThrowArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TenantFindUniqueOrThrowArgs>(args: SelectSubset<T, TenantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tenant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindFirstArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TenantFindFirstArgs>(args?: SelectSubset<T, TenantFindFirstArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tenant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindFirstOrThrowArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TenantFindFirstOrThrowArgs>(args?: SelectSubset<T, TenantFindFirstOrThrowArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tenants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tenants
     * const tenants = await prisma.tenant.findMany()
     * 
     * // Get first 10 Tenants
     * const tenants = await prisma.tenant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tenantWithIdOnly = await prisma.tenant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TenantFindManyArgs>(args?: SelectSubset<T, TenantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tenant.
     * @param {TenantCreateArgs} args - Arguments to create a Tenant.
     * @example
     * // Create one Tenant
     * const Tenant = await prisma.tenant.create({
     *   data: {
     *     // ... data to create a Tenant
     *   }
     * })
     * 
     */
    create<T extends TenantCreateArgs>(args: SelectSubset<T, TenantCreateArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tenants.
     * @param {TenantCreateManyArgs} args - Arguments to create many Tenants.
     * @example
     * // Create many Tenants
     * const tenant = await prisma.tenant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TenantCreateManyArgs>(args?: SelectSubset<T, TenantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tenants and returns the data saved in the database.
     * @param {TenantCreateManyAndReturnArgs} args - Arguments to create many Tenants.
     * @example
     * // Create many Tenants
     * const tenant = await prisma.tenant.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tenants and only return the `id`
     * const tenantWithIdOnly = await prisma.tenant.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TenantCreateManyAndReturnArgs>(args?: SelectSubset<T, TenantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tenant.
     * @param {TenantDeleteArgs} args - Arguments to delete one Tenant.
     * @example
     * // Delete one Tenant
     * const Tenant = await prisma.tenant.delete({
     *   where: {
     *     // ... filter to delete one Tenant
     *   }
     * })
     * 
     */
    delete<T extends TenantDeleteArgs>(args: SelectSubset<T, TenantDeleteArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tenant.
     * @param {TenantUpdateArgs} args - Arguments to update one Tenant.
     * @example
     * // Update one Tenant
     * const tenant = await prisma.tenant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TenantUpdateArgs>(args: SelectSubset<T, TenantUpdateArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tenants.
     * @param {TenantDeleteManyArgs} args - Arguments to filter Tenants to delete.
     * @example
     * // Delete a few Tenants
     * const { count } = await prisma.tenant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TenantDeleteManyArgs>(args?: SelectSubset<T, TenantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tenants
     * const tenant = await prisma.tenant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TenantUpdateManyArgs>(args: SelectSubset<T, TenantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants and returns the data updated in the database.
     * @param {TenantUpdateManyAndReturnArgs} args - Arguments to update many Tenants.
     * @example
     * // Update many Tenants
     * const tenant = await prisma.tenant.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tenants and only return the `id`
     * const tenantWithIdOnly = await prisma.tenant.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TenantUpdateManyAndReturnArgs>(args: SelectSubset<T, TenantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tenant.
     * @param {TenantUpsertArgs} args - Arguments to update or create a Tenant.
     * @example
     * // Update or create a Tenant
     * const tenant = await prisma.tenant.upsert({
     *   create: {
     *     // ... data to create a Tenant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tenant we want to update
     *   }
     * })
     */
    upsert<T extends TenantUpsertArgs>(args: SelectSubset<T, TenantUpsertArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantCountArgs} args - Arguments to filter Tenants to count.
     * @example
     * // Count the number of Tenants
     * const count = await prisma.tenant.count({
     *   where: {
     *     // ... the filter for the Tenants we want to count
     *   }
     * })
    **/
    count<T extends TenantCountArgs>(
      args?: Subset<T, TenantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TenantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tenant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TenantAggregateArgs>(args: Subset<T, TenantAggregateArgs>): Prisma.PrismaPromise<GetTenantAggregateType<T>>

    /**
     * Group by Tenant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TenantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TenantGroupByArgs['orderBy'] }
        : { orderBy?: TenantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TenantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tenant model
   */
  readonly fields: TenantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tenant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TenantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Tenant$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productos<T extends Tenant$productosArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientes<T extends Tenant$clientesArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variantesProducto<T extends Tenant$variantesProductoArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$variantesProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transacciones<T extends Tenant$transaccionesArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$transaccionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ventas<T extends Tenant$ventasArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimientosStock<T extends Tenant$movimientosStockArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$movimientosStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tenant model
   */
  interface TenantFieldRefs {
    readonly id: FieldRef<"Tenant", 'Int'>
    readonly nombre: FieldRef<"Tenant", 'String'>
    readonly createdAt: FieldRef<"Tenant", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tenant findUnique
   */
  export type TenantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant findUniqueOrThrow
   */
  export type TenantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant findFirst
   */
  export type TenantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tenants.
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tenants.
     */
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * Tenant findFirstOrThrow
   */
  export type TenantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tenants.
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tenants.
     */
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * Tenant findMany
   */
  export type TenantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenants to fetch.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tenants.
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * Tenant create
   */
  export type TenantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * The data needed to create a Tenant.
     */
    data: XOR<TenantCreateInput, TenantUncheckedCreateInput>
  }

  /**
   * Tenant createMany
   */
  export type TenantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tenants.
     */
    data: TenantCreateManyInput | TenantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tenant createManyAndReturn
   */
  export type TenantCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * The data used to create many Tenants.
     */
    data: TenantCreateManyInput | TenantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tenant update
   */
  export type TenantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * The data needed to update a Tenant.
     */
    data: XOR<TenantUpdateInput, TenantUncheckedUpdateInput>
    /**
     * Choose, which Tenant to update.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant updateMany
   */
  export type TenantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tenants.
     */
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyInput>
    /**
     * Filter which Tenants to update
     */
    where?: TenantWhereInput
    /**
     * Limit how many Tenants to update.
     */
    limit?: number
  }

  /**
   * Tenant updateManyAndReturn
   */
  export type TenantUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * The data used to update Tenants.
     */
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyInput>
    /**
     * Filter which Tenants to update
     */
    where?: TenantWhereInput
    /**
     * Limit how many Tenants to update.
     */
    limit?: number
  }

  /**
   * Tenant upsert
   */
  export type TenantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * The filter to search for the Tenant to update in case it exists.
     */
    where: TenantWhereUniqueInput
    /**
     * In case the Tenant found by the `where` argument doesn't exist, create a new Tenant with this data.
     */
    create: XOR<TenantCreateInput, TenantUncheckedCreateInput>
    /**
     * In case the Tenant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TenantUpdateInput, TenantUncheckedUpdateInput>
  }

  /**
   * Tenant delete
   */
  export type TenantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter which Tenant to delete.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant deleteMany
   */
  export type TenantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tenants to delete
     */
    where?: TenantWhereInput
    /**
     * Limit how many Tenants to delete.
     */
    limit?: number
  }

  /**
   * Tenant.usuarios
   */
  export type Tenant$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Tenant.productos
   */
  export type Tenant$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Tenant.clientes
   */
  export type Tenant$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Tenant.variantesProducto
   */
  export type Tenant$variantesProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    where?: VarianteProductoWhereInput
    orderBy?: VarianteProductoOrderByWithRelationInput | VarianteProductoOrderByWithRelationInput[]
    cursor?: VarianteProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VarianteProductoScalarFieldEnum | VarianteProductoScalarFieldEnum[]
  }

  /**
   * Tenant.transacciones
   */
  export type Tenant$transaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    cursor?: TransaccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Tenant.ventas
   */
  export type Tenant$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Tenant.movimientosStock
   */
  export type Tenant$movimientosStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    where?: MovimientoStockWhereInput
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    cursor?: MovimientoStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * Tenant without action
   */
  export type TenantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    tenantId: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    tenantId: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
    tenantId: number | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
    tenantId: number | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    role: number
    createdAt: number
    updatedAt: number
    tenantId: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    tenantId?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    tenantId?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    email: string
    password: string
    role: string
    createdAt: Date
    updatedAt: Date
    tenantId: number
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    productos?: boolean | User$productosArgs<ExtArgs>
    transacciones?: boolean | User$transaccionesArgs<ExtArgs>
    movimientos?: boolean | User$movimientosArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "role" | "createdAt" | "updatedAt" | "tenantId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    productos?: boolean | User$productosArgs<ExtArgs>
    transacciones?: boolean | User$transaccionesArgs<ExtArgs>
    movimientos?: boolean | User$movimientosArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      tenant: Prisma.$TenantPayload<ExtArgs>
      productos: Prisma.$ProductoPayload<ExtArgs>[]
      transacciones: Prisma.$TransaccionPayload<ExtArgs>[]
      movimientos: Prisma.$MovimientoStockPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      password: string
      role: string
      createdAt: Date
      updatedAt: Date
      tenantId: number
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productos<T extends User$productosArgs<ExtArgs> = {}>(args?: Subset<T, User$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transacciones<T extends User$transaccionesArgs<ExtArgs> = {}>(args?: Subset<T, User$transaccionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimientos<T extends User$movimientosArgs<ExtArgs> = {}>(args?: Subset<T, User$movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly tenantId: FieldRef<"User", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.productos
   */
  export type User$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * User.transacciones
   */
  export type User$transaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    cursor?: TransaccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * User.movimientos
   */
  export type User$movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    where?: MovimientoStockWhereInput
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    cursor?: MovimientoStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id: number | null
    precio: number | null
    costo: number | null
    tenantId: number | null
    creadoPorId: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id: number | null
    precio: number | null
    costo: number | null
    tenantId: number | null
    creadoPorId: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id: number | null
    codigoBarra: string | null
    nombre: string | null
    descripcion: string | null
    precio: number | null
    costo: number | null
    categoria: string | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
    tenantId: number | null
    creadoPorId: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id: number | null
    codigoBarra: string | null
    nombre: string | null
    descripcion: string | null
    precio: number | null
    costo: number | null
    categoria: string | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
    tenantId: number | null
    creadoPorId: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id: number
    codigoBarra: number
    nombre: number
    descripcion: number
    precio: number
    costo: number
    categoria: number
    fechaCreacion: number
    fechaActualizacion: number
    tenantId: number
    creadoPorId: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id?: true
    precio?: true
    costo?: true
    tenantId?: true
    creadoPorId?: true
  }

  export type ProductoSumAggregateInputType = {
    id?: true
    precio?: true
    costo?: true
    tenantId?: true
    creadoPorId?: true
  }

  export type ProductoMinAggregateInputType = {
    id?: true
    codigoBarra?: true
    nombre?: true
    descripcion?: true
    precio?: true
    costo?: true
    categoria?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    tenantId?: true
    creadoPorId?: true
  }

  export type ProductoMaxAggregateInputType = {
    id?: true
    codigoBarra?: true
    nombre?: true
    descripcion?: true
    precio?: true
    costo?: true
    categoria?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    tenantId?: true
    creadoPorId?: true
  }

  export type ProductoCountAggregateInputType = {
    id?: true
    codigoBarra?: true
    nombre?: true
    descripcion?: true
    precio?: true
    costo?: true
    categoria?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    tenantId?: true
    creadoPorId?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id: number
    codigoBarra: string | null
    nombre: string
    descripcion: string | null
    precio: number
    costo: number
    categoria: string | null
    fechaCreacion: Date
    fechaActualizacion: Date
    tenantId: number
    creadoPorId: number | null
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoBarra?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    costo?: boolean
    categoria?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    tenantId?: boolean
    creadoPorId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    creadoPor?: boolean | Producto$creadoPorArgs<ExtArgs>
    variantes?: boolean | Producto$variantesArgs<ExtArgs>
    movimientos?: boolean | Producto$movimientosArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoBarra?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    costo?: boolean
    categoria?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    tenantId?: boolean
    creadoPorId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    creadoPor?: boolean | Producto$creadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoBarra?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    costo?: boolean
    categoria?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    tenantId?: boolean
    creadoPorId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    creadoPor?: boolean | Producto$creadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectScalar = {
    id?: boolean
    codigoBarra?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    costo?: boolean
    categoria?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    tenantId?: boolean
    creadoPorId?: boolean
  }

  export type ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigoBarra" | "nombre" | "descripcion" | "precio" | "costo" | "categoria" | "fechaCreacion" | "fechaActualizacion" | "tenantId" | "creadoPorId", ExtArgs["result"]["producto"]>
  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    creadoPor?: boolean | Producto$creadoPorArgs<ExtArgs>
    variantes?: boolean | Producto$variantesArgs<ExtArgs>
    movimientos?: boolean | Producto$movimientosArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    creadoPor?: boolean | Producto$creadoPorArgs<ExtArgs>
  }
  export type ProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    creadoPor?: boolean | Producto$creadoPorArgs<ExtArgs>
  }

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      tenant: Prisma.$TenantPayload<ExtArgs>
      creadoPor: Prisma.$UserPayload<ExtArgs> | null
      variantes: Prisma.$VarianteProductoPayload<ExtArgs>[]
      movimientos: Prisma.$MovimientoStockPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoBarra: string | null
      nombre: string
      descripcion: string | null
      precio: number
      costo: number
      categoria: string | null
      fechaCreacion: Date
      fechaActualizacion: Date
      tenantId: number
      creadoPorId: number | null
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productoWithIdOnly = await prisma.producto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductoUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    creadoPor<T extends Producto$creadoPorArgs<ExtArgs> = {}>(args?: Subset<T, Producto$creadoPorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    variantes<T extends Producto$variantesArgs<ExtArgs> = {}>(args?: Subset<T, Producto$variantesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimientos<T extends Producto$movimientosArgs<ExtArgs> = {}>(args?: Subset<T, Producto$movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */
  interface ProductoFieldRefs {
    readonly id: FieldRef<"Producto", 'Int'>
    readonly codigoBarra: FieldRef<"Producto", 'String'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly descripcion: FieldRef<"Producto", 'String'>
    readonly precio: FieldRef<"Producto", 'Float'>
    readonly costo: FieldRef<"Producto", 'Float'>
    readonly categoria: FieldRef<"Producto", 'String'>
    readonly fechaCreacion: FieldRef<"Producto", 'DateTime'>
    readonly fechaActualizacion: FieldRef<"Producto", 'DateTime'>
    readonly tenantId: FieldRef<"Producto", 'Int'>
    readonly creadoPorId: FieldRef<"Producto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto createManyAndReturn
   */
  export type ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Producto updateManyAndReturn
   */
  export type ProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Producto.creadoPor
   */
  export type Producto$creadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Producto.variantes
   */
  export type Producto$variantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    where?: VarianteProductoWhereInput
    orderBy?: VarianteProductoOrderByWithRelationInput | VarianteProductoOrderByWithRelationInput[]
    cursor?: VarianteProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VarianteProductoScalarFieldEnum | VarianteProductoScalarFieldEnum[]
  }

  /**
   * Producto.movimientos
   */
  export type Producto$movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    where?: MovimientoStockWhereInput
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    cursor?: MovimientoStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model VarianteProducto
   */

  export type AggregateVarianteProducto = {
    _count: VarianteProductoCountAggregateOutputType | null
    _avg: VarianteProductoAvgAggregateOutputType | null
    _sum: VarianteProductoSumAggregateOutputType | null
    _min: VarianteProductoMinAggregateOutputType | null
    _max: VarianteProductoMaxAggregateOutputType | null
  }

  export type VarianteProductoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    stock: number | null
    tenantId: number | null
  }

  export type VarianteProductoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    stock: number | null
    tenantId: number | null
  }

  export type VarianteProductoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    color: string | null
    talla: string | null
    stock: number | null
    tenantId: number | null
  }

  export type VarianteProductoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    color: string | null
    talla: string | null
    stock: number | null
    tenantId: number | null
  }

  export type VarianteProductoCountAggregateOutputType = {
    id: number
    productoId: number
    color: number
    talla: number
    stock: number
    tenantId: number
    _all: number
  }


  export type VarianteProductoAvgAggregateInputType = {
    id?: true
    productoId?: true
    stock?: true
    tenantId?: true
  }

  export type VarianteProductoSumAggregateInputType = {
    id?: true
    productoId?: true
    stock?: true
    tenantId?: true
  }

  export type VarianteProductoMinAggregateInputType = {
    id?: true
    productoId?: true
    color?: true
    talla?: true
    stock?: true
    tenantId?: true
  }

  export type VarianteProductoMaxAggregateInputType = {
    id?: true
    productoId?: true
    color?: true
    talla?: true
    stock?: true
    tenantId?: true
  }

  export type VarianteProductoCountAggregateInputType = {
    id?: true
    productoId?: true
    color?: true
    talla?: true
    stock?: true
    tenantId?: true
    _all?: true
  }

  export type VarianteProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VarianteProducto to aggregate.
     */
    where?: VarianteProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VarianteProductos to fetch.
     */
    orderBy?: VarianteProductoOrderByWithRelationInput | VarianteProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VarianteProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VarianteProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VarianteProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VarianteProductos
    **/
    _count?: true | VarianteProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VarianteProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VarianteProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VarianteProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VarianteProductoMaxAggregateInputType
  }

  export type GetVarianteProductoAggregateType<T extends VarianteProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateVarianteProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVarianteProducto[P]>
      : GetScalarType<T[P], AggregateVarianteProducto[P]>
  }




  export type VarianteProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VarianteProductoWhereInput
    orderBy?: VarianteProductoOrderByWithAggregationInput | VarianteProductoOrderByWithAggregationInput[]
    by: VarianteProductoScalarFieldEnum[] | VarianteProductoScalarFieldEnum
    having?: VarianteProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VarianteProductoCountAggregateInputType | true
    _avg?: VarianteProductoAvgAggregateInputType
    _sum?: VarianteProductoSumAggregateInputType
    _min?: VarianteProductoMinAggregateInputType
    _max?: VarianteProductoMaxAggregateInputType
  }

  export type VarianteProductoGroupByOutputType = {
    id: number
    productoId: number
    color: string | null
    talla: string | null
    stock: number
    tenantId: number
    _count: VarianteProductoCountAggregateOutputType | null
    _avg: VarianteProductoAvgAggregateOutputType | null
    _sum: VarianteProductoSumAggregateOutputType | null
    _min: VarianteProductoMinAggregateOutputType | null
    _max: VarianteProductoMaxAggregateOutputType | null
  }

  type GetVarianteProductoGroupByPayload<T extends VarianteProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VarianteProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VarianteProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VarianteProductoGroupByOutputType[P]>
            : GetScalarType<T[P], VarianteProductoGroupByOutputType[P]>
        }
      >
    >


  export type VarianteProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    color?: boolean
    talla?: boolean
    stock?: boolean
    tenantId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    ventas?: boolean | VarianteProducto$ventasArgs<ExtArgs>
    movimientos?: boolean | VarianteProducto$movimientosArgs<ExtArgs>
    _count?: boolean | VarianteProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["varianteProducto"]>

  export type VarianteProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    color?: boolean
    talla?: boolean
    stock?: boolean
    tenantId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["varianteProducto"]>

  export type VarianteProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    color?: boolean
    talla?: boolean
    stock?: boolean
    tenantId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["varianteProducto"]>

  export type VarianteProductoSelectScalar = {
    id?: boolean
    productoId?: boolean
    color?: boolean
    talla?: boolean
    stock?: boolean
    tenantId?: boolean
  }

  export type VarianteProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productoId" | "color" | "talla" | "stock" | "tenantId", ExtArgs["result"]["varianteProducto"]>
  export type VarianteProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    ventas?: boolean | VarianteProducto$ventasArgs<ExtArgs>
    movimientos?: boolean | VarianteProducto$movimientosArgs<ExtArgs>
    _count?: boolean | VarianteProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VarianteProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type VarianteProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $VarianteProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VarianteProducto"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      tenant: Prisma.$TenantPayload<ExtArgs>
      ventas: Prisma.$VentaPayload<ExtArgs>[]
      movimientos: Prisma.$MovimientoStockPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      color: string | null
      talla: string | null
      stock: number
      tenantId: number
    }, ExtArgs["result"]["varianteProducto"]>
    composites: {}
  }

  type VarianteProductoGetPayload<S extends boolean | null | undefined | VarianteProductoDefaultArgs> = $Result.GetResult<Prisma.$VarianteProductoPayload, S>

  type VarianteProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VarianteProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VarianteProductoCountAggregateInputType | true
    }

  export interface VarianteProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VarianteProducto'], meta: { name: 'VarianteProducto' } }
    /**
     * Find zero or one VarianteProducto that matches the filter.
     * @param {VarianteProductoFindUniqueArgs} args - Arguments to find a VarianteProducto
     * @example
     * // Get one VarianteProducto
     * const varianteProducto = await prisma.varianteProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VarianteProductoFindUniqueArgs>(args: SelectSubset<T, VarianteProductoFindUniqueArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VarianteProducto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VarianteProductoFindUniqueOrThrowArgs} args - Arguments to find a VarianteProducto
     * @example
     * // Get one VarianteProducto
     * const varianteProducto = await prisma.varianteProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VarianteProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, VarianteProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VarianteProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoFindFirstArgs} args - Arguments to find a VarianteProducto
     * @example
     * // Get one VarianteProducto
     * const varianteProducto = await prisma.varianteProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VarianteProductoFindFirstArgs>(args?: SelectSubset<T, VarianteProductoFindFirstArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VarianteProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoFindFirstOrThrowArgs} args - Arguments to find a VarianteProducto
     * @example
     * // Get one VarianteProducto
     * const varianteProducto = await prisma.varianteProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VarianteProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, VarianteProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VarianteProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VarianteProductos
     * const varianteProductos = await prisma.varianteProducto.findMany()
     * 
     * // Get first 10 VarianteProductos
     * const varianteProductos = await prisma.varianteProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const varianteProductoWithIdOnly = await prisma.varianteProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VarianteProductoFindManyArgs>(args?: SelectSubset<T, VarianteProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VarianteProducto.
     * @param {VarianteProductoCreateArgs} args - Arguments to create a VarianteProducto.
     * @example
     * // Create one VarianteProducto
     * const VarianteProducto = await prisma.varianteProducto.create({
     *   data: {
     *     // ... data to create a VarianteProducto
     *   }
     * })
     * 
     */
    create<T extends VarianteProductoCreateArgs>(args: SelectSubset<T, VarianteProductoCreateArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VarianteProductos.
     * @param {VarianteProductoCreateManyArgs} args - Arguments to create many VarianteProductos.
     * @example
     * // Create many VarianteProductos
     * const varianteProducto = await prisma.varianteProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VarianteProductoCreateManyArgs>(args?: SelectSubset<T, VarianteProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VarianteProductos and returns the data saved in the database.
     * @param {VarianteProductoCreateManyAndReturnArgs} args - Arguments to create many VarianteProductos.
     * @example
     * // Create many VarianteProductos
     * const varianteProducto = await prisma.varianteProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VarianteProductos and only return the `id`
     * const varianteProductoWithIdOnly = await prisma.varianteProducto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VarianteProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, VarianteProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VarianteProducto.
     * @param {VarianteProductoDeleteArgs} args - Arguments to delete one VarianteProducto.
     * @example
     * // Delete one VarianteProducto
     * const VarianteProducto = await prisma.varianteProducto.delete({
     *   where: {
     *     // ... filter to delete one VarianteProducto
     *   }
     * })
     * 
     */
    delete<T extends VarianteProductoDeleteArgs>(args: SelectSubset<T, VarianteProductoDeleteArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VarianteProducto.
     * @param {VarianteProductoUpdateArgs} args - Arguments to update one VarianteProducto.
     * @example
     * // Update one VarianteProducto
     * const varianteProducto = await prisma.varianteProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VarianteProductoUpdateArgs>(args: SelectSubset<T, VarianteProductoUpdateArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VarianteProductos.
     * @param {VarianteProductoDeleteManyArgs} args - Arguments to filter VarianteProductos to delete.
     * @example
     * // Delete a few VarianteProductos
     * const { count } = await prisma.varianteProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VarianteProductoDeleteManyArgs>(args?: SelectSubset<T, VarianteProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VarianteProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VarianteProductos
     * const varianteProducto = await prisma.varianteProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VarianteProductoUpdateManyArgs>(args: SelectSubset<T, VarianteProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VarianteProductos and returns the data updated in the database.
     * @param {VarianteProductoUpdateManyAndReturnArgs} args - Arguments to update many VarianteProductos.
     * @example
     * // Update many VarianteProductos
     * const varianteProducto = await prisma.varianteProducto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VarianteProductos and only return the `id`
     * const varianteProductoWithIdOnly = await prisma.varianteProducto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VarianteProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, VarianteProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VarianteProducto.
     * @param {VarianteProductoUpsertArgs} args - Arguments to update or create a VarianteProducto.
     * @example
     * // Update or create a VarianteProducto
     * const varianteProducto = await prisma.varianteProducto.upsert({
     *   create: {
     *     // ... data to create a VarianteProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VarianteProducto we want to update
     *   }
     * })
     */
    upsert<T extends VarianteProductoUpsertArgs>(args: SelectSubset<T, VarianteProductoUpsertArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VarianteProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoCountArgs} args - Arguments to filter VarianteProductos to count.
     * @example
     * // Count the number of VarianteProductos
     * const count = await prisma.varianteProducto.count({
     *   where: {
     *     // ... the filter for the VarianteProductos we want to count
     *   }
     * })
    **/
    count<T extends VarianteProductoCountArgs>(
      args?: Subset<T, VarianteProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VarianteProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VarianteProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VarianteProductoAggregateArgs>(args: Subset<T, VarianteProductoAggregateArgs>): Prisma.PrismaPromise<GetVarianteProductoAggregateType<T>>

    /**
     * Group by VarianteProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VarianteProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VarianteProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VarianteProductoGroupByArgs['orderBy'] }
        : { orderBy?: VarianteProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VarianteProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVarianteProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VarianteProducto model
   */
  readonly fields: VarianteProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VarianteProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VarianteProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ventas<T extends VarianteProducto$ventasArgs<ExtArgs> = {}>(args?: Subset<T, VarianteProducto$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimientos<T extends VarianteProducto$movimientosArgs<ExtArgs> = {}>(args?: Subset<T, VarianteProducto$movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VarianteProducto model
   */
  interface VarianteProductoFieldRefs {
    readonly id: FieldRef<"VarianteProducto", 'Int'>
    readonly productoId: FieldRef<"VarianteProducto", 'Int'>
    readonly color: FieldRef<"VarianteProducto", 'String'>
    readonly talla: FieldRef<"VarianteProducto", 'String'>
    readonly stock: FieldRef<"VarianteProducto", 'Int'>
    readonly tenantId: FieldRef<"VarianteProducto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * VarianteProducto findUnique
   */
  export type VarianteProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * Filter, which VarianteProducto to fetch.
     */
    where: VarianteProductoWhereUniqueInput
  }

  /**
   * VarianteProducto findUniqueOrThrow
   */
  export type VarianteProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * Filter, which VarianteProducto to fetch.
     */
    where: VarianteProductoWhereUniqueInput
  }

  /**
   * VarianteProducto findFirst
   */
  export type VarianteProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * Filter, which VarianteProducto to fetch.
     */
    where?: VarianteProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VarianteProductos to fetch.
     */
    orderBy?: VarianteProductoOrderByWithRelationInput | VarianteProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VarianteProductos.
     */
    cursor?: VarianteProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VarianteProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VarianteProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VarianteProductos.
     */
    distinct?: VarianteProductoScalarFieldEnum | VarianteProductoScalarFieldEnum[]
  }

  /**
   * VarianteProducto findFirstOrThrow
   */
  export type VarianteProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * Filter, which VarianteProducto to fetch.
     */
    where?: VarianteProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VarianteProductos to fetch.
     */
    orderBy?: VarianteProductoOrderByWithRelationInput | VarianteProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VarianteProductos.
     */
    cursor?: VarianteProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VarianteProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VarianteProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VarianteProductos.
     */
    distinct?: VarianteProductoScalarFieldEnum | VarianteProductoScalarFieldEnum[]
  }

  /**
   * VarianteProducto findMany
   */
  export type VarianteProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * Filter, which VarianteProductos to fetch.
     */
    where?: VarianteProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VarianteProductos to fetch.
     */
    orderBy?: VarianteProductoOrderByWithRelationInput | VarianteProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VarianteProductos.
     */
    cursor?: VarianteProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VarianteProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VarianteProductos.
     */
    skip?: number
    distinct?: VarianteProductoScalarFieldEnum | VarianteProductoScalarFieldEnum[]
  }

  /**
   * VarianteProducto create
   */
  export type VarianteProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a VarianteProducto.
     */
    data: XOR<VarianteProductoCreateInput, VarianteProductoUncheckedCreateInput>
  }

  /**
   * VarianteProducto createMany
   */
  export type VarianteProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VarianteProductos.
     */
    data: VarianteProductoCreateManyInput | VarianteProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VarianteProducto createManyAndReturn
   */
  export type VarianteProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * The data used to create many VarianteProductos.
     */
    data: VarianteProductoCreateManyInput | VarianteProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VarianteProducto update
   */
  export type VarianteProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a VarianteProducto.
     */
    data: XOR<VarianteProductoUpdateInput, VarianteProductoUncheckedUpdateInput>
    /**
     * Choose, which VarianteProducto to update.
     */
    where: VarianteProductoWhereUniqueInput
  }

  /**
   * VarianteProducto updateMany
   */
  export type VarianteProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VarianteProductos.
     */
    data: XOR<VarianteProductoUpdateManyMutationInput, VarianteProductoUncheckedUpdateManyInput>
    /**
     * Filter which VarianteProductos to update
     */
    where?: VarianteProductoWhereInput
    /**
     * Limit how many VarianteProductos to update.
     */
    limit?: number
  }

  /**
   * VarianteProducto updateManyAndReturn
   */
  export type VarianteProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * The data used to update VarianteProductos.
     */
    data: XOR<VarianteProductoUpdateManyMutationInput, VarianteProductoUncheckedUpdateManyInput>
    /**
     * Filter which VarianteProductos to update
     */
    where?: VarianteProductoWhereInput
    /**
     * Limit how many VarianteProductos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VarianteProducto upsert
   */
  export type VarianteProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the VarianteProducto to update in case it exists.
     */
    where: VarianteProductoWhereUniqueInput
    /**
     * In case the VarianteProducto found by the `where` argument doesn't exist, create a new VarianteProducto with this data.
     */
    create: XOR<VarianteProductoCreateInput, VarianteProductoUncheckedCreateInput>
    /**
     * In case the VarianteProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VarianteProductoUpdateInput, VarianteProductoUncheckedUpdateInput>
  }

  /**
   * VarianteProducto delete
   */
  export type VarianteProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
    /**
     * Filter which VarianteProducto to delete.
     */
    where: VarianteProductoWhereUniqueInput
  }

  /**
   * VarianteProducto deleteMany
   */
  export type VarianteProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VarianteProductos to delete
     */
    where?: VarianteProductoWhereInput
    /**
     * Limit how many VarianteProductos to delete.
     */
    limit?: number
  }

  /**
   * VarianteProducto.ventas
   */
  export type VarianteProducto$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * VarianteProducto.movimientos
   */
  export type VarianteProducto$movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    where?: MovimientoStockWhereInput
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    cursor?: MovimientoStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * VarianteProducto without action
   */
  export type VarianteProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VarianteProducto
     */
    select?: VarianteProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VarianteProducto
     */
    omit?: VarianteProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VarianteProductoInclude<ExtArgs> | null
  }


  /**
   * Model MovimientoStock
   */

  export type AggregateMovimientoStock = {
    _count: MovimientoStockCountAggregateOutputType | null
    _avg: MovimientoStockAvgAggregateOutputType | null
    _sum: MovimientoStockSumAggregateOutputType | null
    _min: MovimientoStockMinAggregateOutputType | null
    _max: MovimientoStockMaxAggregateOutputType | null
  }

  export type MovimientoStockAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    varianteId: number | null
    cantidad: number | null
    usuarioId: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type MovimientoStockSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    varianteId: number | null
    cantidad: number | null
    usuarioId: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type MovimientoStockMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    varianteId: number | null
    cantidad: number | null
    tipoMovimiento: string | null
    motivo: string | null
    fecha: Date | null
    usuarioId: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type MovimientoStockMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    varianteId: number | null
    cantidad: number | null
    tipoMovimiento: string | null
    motivo: string | null
    fecha: Date | null
    usuarioId: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type MovimientoStockCountAggregateOutputType = {
    id: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: number
    motivo: number
    fecha: number
    usuarioId: number
    transaccionId: number
    tenantId: number
    _all: number
  }


  export type MovimientoStockAvgAggregateInputType = {
    id?: true
    productoId?: true
    varianteId?: true
    cantidad?: true
    usuarioId?: true
    transaccionId?: true
    tenantId?: true
  }

  export type MovimientoStockSumAggregateInputType = {
    id?: true
    productoId?: true
    varianteId?: true
    cantidad?: true
    usuarioId?: true
    transaccionId?: true
    tenantId?: true
  }

  export type MovimientoStockMinAggregateInputType = {
    id?: true
    productoId?: true
    varianteId?: true
    cantidad?: true
    tipoMovimiento?: true
    motivo?: true
    fecha?: true
    usuarioId?: true
    transaccionId?: true
    tenantId?: true
  }

  export type MovimientoStockMaxAggregateInputType = {
    id?: true
    productoId?: true
    varianteId?: true
    cantidad?: true
    tipoMovimiento?: true
    motivo?: true
    fecha?: true
    usuarioId?: true
    transaccionId?: true
    tenantId?: true
  }

  export type MovimientoStockCountAggregateInputType = {
    id?: true
    productoId?: true
    varianteId?: true
    cantidad?: true
    tipoMovimiento?: true
    motivo?: true
    fecha?: true
    usuarioId?: true
    transaccionId?: true
    tenantId?: true
    _all?: true
  }

  export type MovimientoStockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimientoStock to aggregate.
     */
    where?: MovimientoStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoStocks to fetch.
     */
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MovimientoStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MovimientoStocks
    **/
    _count?: true | MovimientoStockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MovimientoStockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MovimientoStockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovimientoStockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovimientoStockMaxAggregateInputType
  }

  export type GetMovimientoStockAggregateType<T extends MovimientoStockAggregateArgs> = {
        [P in keyof T & keyof AggregateMovimientoStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovimientoStock[P]>
      : GetScalarType<T[P], AggregateMovimientoStock[P]>
  }




  export type MovimientoStockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoStockWhereInput
    orderBy?: MovimientoStockOrderByWithAggregationInput | MovimientoStockOrderByWithAggregationInput[]
    by: MovimientoStockScalarFieldEnum[] | MovimientoStockScalarFieldEnum
    having?: MovimientoStockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovimientoStockCountAggregateInputType | true
    _avg?: MovimientoStockAvgAggregateInputType
    _sum?: MovimientoStockSumAggregateInputType
    _min?: MovimientoStockMinAggregateInputType
    _max?: MovimientoStockMaxAggregateInputType
  }

  export type MovimientoStockGroupByOutputType = {
    id: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo: string | null
    fecha: Date
    usuarioId: number | null
    transaccionId: number | null
    tenantId: number
    _count: MovimientoStockCountAggregateOutputType | null
    _avg: MovimientoStockAvgAggregateOutputType | null
    _sum: MovimientoStockSumAggregateOutputType | null
    _min: MovimientoStockMinAggregateOutputType | null
    _max: MovimientoStockMaxAggregateOutputType | null
  }

  type GetMovimientoStockGroupByPayload<T extends MovimientoStockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovimientoStockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovimientoStockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovimientoStockGroupByOutputType[P]>
            : GetScalarType<T[P], MovimientoStockGroupByOutputType[P]>
        }
      >
    >


  export type MovimientoStockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    varianteId?: boolean
    cantidad?: boolean
    tipoMovimiento?: boolean
    motivo?: boolean
    fecha?: boolean
    usuarioId?: boolean
    transaccionId?: boolean
    tenantId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    usuario?: boolean | MovimientoStock$usuarioArgs<ExtArgs>
    transaccion?: boolean | MovimientoStock$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimientoStock"]>

  export type MovimientoStockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    varianteId?: boolean
    cantidad?: boolean
    tipoMovimiento?: boolean
    motivo?: boolean
    fecha?: boolean
    usuarioId?: boolean
    transaccionId?: boolean
    tenantId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    usuario?: boolean | MovimientoStock$usuarioArgs<ExtArgs>
    transaccion?: boolean | MovimientoStock$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimientoStock"]>

  export type MovimientoStockSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    varianteId?: boolean
    cantidad?: boolean
    tipoMovimiento?: boolean
    motivo?: boolean
    fecha?: boolean
    usuarioId?: boolean
    transaccionId?: boolean
    tenantId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    usuario?: boolean | MovimientoStock$usuarioArgs<ExtArgs>
    transaccion?: boolean | MovimientoStock$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimientoStock"]>

  export type MovimientoStockSelectScalar = {
    id?: boolean
    productoId?: boolean
    varianteId?: boolean
    cantidad?: boolean
    tipoMovimiento?: boolean
    motivo?: boolean
    fecha?: boolean
    usuarioId?: boolean
    transaccionId?: boolean
    tenantId?: boolean
  }

  export type MovimientoStockOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productoId" | "varianteId" | "cantidad" | "tipoMovimiento" | "motivo" | "fecha" | "usuarioId" | "transaccionId" | "tenantId", ExtArgs["result"]["movimientoStock"]>
  export type MovimientoStockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    usuario?: boolean | MovimientoStock$usuarioArgs<ExtArgs>
    transaccion?: boolean | MovimientoStock$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type MovimientoStockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    usuario?: boolean | MovimientoStock$usuarioArgs<ExtArgs>
    transaccion?: boolean | MovimientoStock$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type MovimientoStockIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    usuario?: boolean | MovimientoStock$usuarioArgs<ExtArgs>
    transaccion?: boolean | MovimientoStock$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $MovimientoStockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MovimientoStock"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      variante: Prisma.$VarianteProductoPayload<ExtArgs>
      usuario: Prisma.$UserPayload<ExtArgs> | null
      transaccion: Prisma.$TransaccionPayload<ExtArgs> | null
      tenant: Prisma.$TenantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      varianteId: number
      cantidad: number
      tipoMovimiento: string
      motivo: string | null
      fecha: Date
      usuarioId: number | null
      transaccionId: number | null
      tenantId: number
    }, ExtArgs["result"]["movimientoStock"]>
    composites: {}
  }

  type MovimientoStockGetPayload<S extends boolean | null | undefined | MovimientoStockDefaultArgs> = $Result.GetResult<Prisma.$MovimientoStockPayload, S>

  type MovimientoStockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MovimientoStockFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MovimientoStockCountAggregateInputType | true
    }

  export interface MovimientoStockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MovimientoStock'], meta: { name: 'MovimientoStock' } }
    /**
     * Find zero or one MovimientoStock that matches the filter.
     * @param {MovimientoStockFindUniqueArgs} args - Arguments to find a MovimientoStock
     * @example
     * // Get one MovimientoStock
     * const movimientoStock = await prisma.movimientoStock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MovimientoStockFindUniqueArgs>(args: SelectSubset<T, MovimientoStockFindUniqueArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MovimientoStock that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MovimientoStockFindUniqueOrThrowArgs} args - Arguments to find a MovimientoStock
     * @example
     * // Get one MovimientoStock
     * const movimientoStock = await prisma.movimientoStock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MovimientoStockFindUniqueOrThrowArgs>(args: SelectSubset<T, MovimientoStockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MovimientoStock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockFindFirstArgs} args - Arguments to find a MovimientoStock
     * @example
     * // Get one MovimientoStock
     * const movimientoStock = await prisma.movimientoStock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MovimientoStockFindFirstArgs>(args?: SelectSubset<T, MovimientoStockFindFirstArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MovimientoStock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockFindFirstOrThrowArgs} args - Arguments to find a MovimientoStock
     * @example
     * // Get one MovimientoStock
     * const movimientoStock = await prisma.movimientoStock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MovimientoStockFindFirstOrThrowArgs>(args?: SelectSubset<T, MovimientoStockFindFirstOrThrowArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MovimientoStocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MovimientoStocks
     * const movimientoStocks = await prisma.movimientoStock.findMany()
     * 
     * // Get first 10 MovimientoStocks
     * const movimientoStocks = await prisma.movimientoStock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movimientoStockWithIdOnly = await prisma.movimientoStock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MovimientoStockFindManyArgs>(args?: SelectSubset<T, MovimientoStockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MovimientoStock.
     * @param {MovimientoStockCreateArgs} args - Arguments to create a MovimientoStock.
     * @example
     * // Create one MovimientoStock
     * const MovimientoStock = await prisma.movimientoStock.create({
     *   data: {
     *     // ... data to create a MovimientoStock
     *   }
     * })
     * 
     */
    create<T extends MovimientoStockCreateArgs>(args: SelectSubset<T, MovimientoStockCreateArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MovimientoStocks.
     * @param {MovimientoStockCreateManyArgs} args - Arguments to create many MovimientoStocks.
     * @example
     * // Create many MovimientoStocks
     * const movimientoStock = await prisma.movimientoStock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MovimientoStockCreateManyArgs>(args?: SelectSubset<T, MovimientoStockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MovimientoStocks and returns the data saved in the database.
     * @param {MovimientoStockCreateManyAndReturnArgs} args - Arguments to create many MovimientoStocks.
     * @example
     * // Create many MovimientoStocks
     * const movimientoStock = await prisma.movimientoStock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MovimientoStocks and only return the `id`
     * const movimientoStockWithIdOnly = await prisma.movimientoStock.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MovimientoStockCreateManyAndReturnArgs>(args?: SelectSubset<T, MovimientoStockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MovimientoStock.
     * @param {MovimientoStockDeleteArgs} args - Arguments to delete one MovimientoStock.
     * @example
     * // Delete one MovimientoStock
     * const MovimientoStock = await prisma.movimientoStock.delete({
     *   where: {
     *     // ... filter to delete one MovimientoStock
     *   }
     * })
     * 
     */
    delete<T extends MovimientoStockDeleteArgs>(args: SelectSubset<T, MovimientoStockDeleteArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MovimientoStock.
     * @param {MovimientoStockUpdateArgs} args - Arguments to update one MovimientoStock.
     * @example
     * // Update one MovimientoStock
     * const movimientoStock = await prisma.movimientoStock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MovimientoStockUpdateArgs>(args: SelectSubset<T, MovimientoStockUpdateArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MovimientoStocks.
     * @param {MovimientoStockDeleteManyArgs} args - Arguments to filter MovimientoStocks to delete.
     * @example
     * // Delete a few MovimientoStocks
     * const { count } = await prisma.movimientoStock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MovimientoStockDeleteManyArgs>(args?: SelectSubset<T, MovimientoStockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimientoStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MovimientoStocks
     * const movimientoStock = await prisma.movimientoStock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MovimientoStockUpdateManyArgs>(args: SelectSubset<T, MovimientoStockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimientoStocks and returns the data updated in the database.
     * @param {MovimientoStockUpdateManyAndReturnArgs} args - Arguments to update many MovimientoStocks.
     * @example
     * // Update many MovimientoStocks
     * const movimientoStock = await prisma.movimientoStock.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MovimientoStocks and only return the `id`
     * const movimientoStockWithIdOnly = await prisma.movimientoStock.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MovimientoStockUpdateManyAndReturnArgs>(args: SelectSubset<T, MovimientoStockUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MovimientoStock.
     * @param {MovimientoStockUpsertArgs} args - Arguments to update or create a MovimientoStock.
     * @example
     * // Update or create a MovimientoStock
     * const movimientoStock = await prisma.movimientoStock.upsert({
     *   create: {
     *     // ... data to create a MovimientoStock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MovimientoStock we want to update
     *   }
     * })
     */
    upsert<T extends MovimientoStockUpsertArgs>(args: SelectSubset<T, MovimientoStockUpsertArgs<ExtArgs>>): Prisma__MovimientoStockClient<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MovimientoStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockCountArgs} args - Arguments to filter MovimientoStocks to count.
     * @example
     * // Count the number of MovimientoStocks
     * const count = await prisma.movimientoStock.count({
     *   where: {
     *     // ... the filter for the MovimientoStocks we want to count
     *   }
     * })
    **/
    count<T extends MovimientoStockCountArgs>(
      args?: Subset<T, MovimientoStockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovimientoStockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MovimientoStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovimientoStockAggregateArgs>(args: Subset<T, MovimientoStockAggregateArgs>): Prisma.PrismaPromise<GetMovimientoStockAggregateType<T>>

    /**
     * Group by MovimientoStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoStockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MovimientoStockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MovimientoStockGroupByArgs['orderBy'] }
        : { orderBy?: MovimientoStockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MovimientoStockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimientoStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MovimientoStock model
   */
  readonly fields: MovimientoStockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MovimientoStock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MovimientoStockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variante<T extends VarianteProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VarianteProductoDefaultArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends MovimientoStock$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, MovimientoStock$usuarioArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    transaccion<T extends MovimientoStock$transaccionArgs<ExtArgs> = {}>(args?: Subset<T, MovimientoStock$transaccionArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MovimientoStock model
   */
  interface MovimientoStockFieldRefs {
    readonly id: FieldRef<"MovimientoStock", 'Int'>
    readonly productoId: FieldRef<"MovimientoStock", 'Int'>
    readonly varianteId: FieldRef<"MovimientoStock", 'Int'>
    readonly cantidad: FieldRef<"MovimientoStock", 'Int'>
    readonly tipoMovimiento: FieldRef<"MovimientoStock", 'String'>
    readonly motivo: FieldRef<"MovimientoStock", 'String'>
    readonly fecha: FieldRef<"MovimientoStock", 'DateTime'>
    readonly usuarioId: FieldRef<"MovimientoStock", 'Int'>
    readonly transaccionId: FieldRef<"MovimientoStock", 'Int'>
    readonly tenantId: FieldRef<"MovimientoStock", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MovimientoStock findUnique
   */
  export type MovimientoStockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoStock to fetch.
     */
    where: MovimientoStockWhereUniqueInput
  }

  /**
   * MovimientoStock findUniqueOrThrow
   */
  export type MovimientoStockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoStock to fetch.
     */
    where: MovimientoStockWhereUniqueInput
  }

  /**
   * MovimientoStock findFirst
   */
  export type MovimientoStockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoStock to fetch.
     */
    where?: MovimientoStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoStocks to fetch.
     */
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimientoStocks.
     */
    cursor?: MovimientoStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimientoStocks.
     */
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * MovimientoStock findFirstOrThrow
   */
  export type MovimientoStockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoStock to fetch.
     */
    where?: MovimientoStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoStocks to fetch.
     */
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimientoStocks.
     */
    cursor?: MovimientoStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimientoStocks.
     */
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * MovimientoStock findMany
   */
  export type MovimientoStockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoStocks to fetch.
     */
    where?: MovimientoStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoStocks to fetch.
     */
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MovimientoStocks.
     */
    cursor?: MovimientoStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoStocks.
     */
    skip?: number
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * MovimientoStock create
   */
  export type MovimientoStockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * The data needed to create a MovimientoStock.
     */
    data: XOR<MovimientoStockCreateInput, MovimientoStockUncheckedCreateInput>
  }

  /**
   * MovimientoStock createMany
   */
  export type MovimientoStockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MovimientoStocks.
     */
    data: MovimientoStockCreateManyInput | MovimientoStockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MovimientoStock createManyAndReturn
   */
  export type MovimientoStockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * The data used to create many MovimientoStocks.
     */
    data: MovimientoStockCreateManyInput | MovimientoStockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimientoStock update
   */
  export type MovimientoStockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * The data needed to update a MovimientoStock.
     */
    data: XOR<MovimientoStockUpdateInput, MovimientoStockUncheckedUpdateInput>
    /**
     * Choose, which MovimientoStock to update.
     */
    where: MovimientoStockWhereUniqueInput
  }

  /**
   * MovimientoStock updateMany
   */
  export type MovimientoStockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MovimientoStocks.
     */
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyInput>
    /**
     * Filter which MovimientoStocks to update
     */
    where?: MovimientoStockWhereInput
    /**
     * Limit how many MovimientoStocks to update.
     */
    limit?: number
  }

  /**
   * MovimientoStock updateManyAndReturn
   */
  export type MovimientoStockUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * The data used to update MovimientoStocks.
     */
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyInput>
    /**
     * Filter which MovimientoStocks to update
     */
    where?: MovimientoStockWhereInput
    /**
     * Limit how many MovimientoStocks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimientoStock upsert
   */
  export type MovimientoStockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * The filter to search for the MovimientoStock to update in case it exists.
     */
    where: MovimientoStockWhereUniqueInput
    /**
     * In case the MovimientoStock found by the `where` argument doesn't exist, create a new MovimientoStock with this data.
     */
    create: XOR<MovimientoStockCreateInput, MovimientoStockUncheckedCreateInput>
    /**
     * In case the MovimientoStock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MovimientoStockUpdateInput, MovimientoStockUncheckedUpdateInput>
  }

  /**
   * MovimientoStock delete
   */
  export type MovimientoStockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    /**
     * Filter which MovimientoStock to delete.
     */
    where: MovimientoStockWhereUniqueInput
  }

  /**
   * MovimientoStock deleteMany
   */
  export type MovimientoStockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimientoStocks to delete
     */
    where?: MovimientoStockWhereInput
    /**
     * Limit how many MovimientoStocks to delete.
     */
    limit?: number
  }

  /**
   * MovimientoStock.usuario
   */
  export type MovimientoStock$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MovimientoStock.transaccion
   */
  export type MovimientoStock$transaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
  }

  /**
   * MovimientoStock without action
   */
  export type MovimientoStockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
  }


  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id: number | null
    tenantId: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id: number | null
    tenantId: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    telefono: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    tenantId: number | null
  }

  export type ClienteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    telefono: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    tenantId: number | null
  }

  export type ClienteCountAggregateOutputType = {
    id: number
    nombre: number
    telefono: number
    email: number
    createdAt: number
    updatedAt: number
    tenantId: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id?: true
    tenantId?: true
  }

  export type ClienteSumAggregateInputType = {
    id?: true
    tenantId?: true
  }

  export type ClienteMinAggregateInputType = {
    id?: true
    nombre?: true
    telefono?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
  }

  export type ClienteMaxAggregateInputType = {
    id?: true
    nombre?: true
    telefono?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
  }

  export type ClienteCountAggregateInputType = {
    id?: true
    nombre?: true
    telefono?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id: number
    nombre: string
    telefono: string | null
    email: string | null
    createdAt: Date
    updatedAt: Date
    tenantId: number
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    ventas?: boolean | Cliente$ventasArgs<ExtArgs>
    transacciones?: boolean | Cliente$transaccionesArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
  }

  export type ClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "telefono" | "email" | "createdAt" | "updatedAt" | "tenantId", ExtArgs["result"]["cliente"]>
  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | Cliente$ventasArgs<ExtArgs>
    transacciones?: boolean | Cliente$transaccionesArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      ventas: Prisma.$VentaPayload<ExtArgs>[]
      transacciones: Prisma.$TransaccionPayload<ExtArgs>[]
      tenant: Prisma.$TenantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      telefono: string | null
      email: string | null
      createdAt: Date
      updatedAt: Date
      tenantId: number
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clienteWithIdOnly = await prisma.cliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id`
     * const clienteWithIdOnly = await prisma.cliente.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {ClienteUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `id`
     * const clienteWithIdOnly = await prisma.cliente.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClienteUpdateManyAndReturnArgs>(args: SelectSubset<T, ClienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ventas<T extends Cliente$ventasArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transacciones<T extends Cliente$transaccionesArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$transaccionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */
  interface ClienteFieldRefs {
    readonly id: FieldRef<"Cliente", 'Int'>
    readonly nombre: FieldRef<"Cliente", 'String'>
    readonly telefono: FieldRef<"Cliente", 'String'>
    readonly email: FieldRef<"Cliente", 'String'>
    readonly createdAt: FieldRef<"Cliente", 'DateTime'>
    readonly updatedAt: FieldRef<"Cliente", 'DateTime'>
    readonly tenantId: FieldRef<"Cliente", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente createManyAndReturn
   */
  export type ClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente updateManyAndReturn
   */
  export type ClienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Cliente.ventas
   */
  export type Cliente$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Cliente.transacciones
   */
  export type Cliente$transaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    cursor?: TransaccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id: number | null
    varianteId: number | null
    clienteId: number | null
    cantidad: number | null
    precioUnitario: number | null
    subtotal: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type VentaSumAggregateOutputType = {
    id: number | null
    varianteId: number | null
    clienteId: number | null
    cantidad: number | null
    precioUnitario: number | null
    subtotal: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type VentaMinAggregateOutputType = {
    id: number | null
    varianteId: number | null
    clienteId: number | null
    cantidad: number | null
    fecha: Date | null
    precioUnitario: number | null
    subtotal: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type VentaMaxAggregateOutputType = {
    id: number | null
    varianteId: number | null
    clienteId: number | null
    cantidad: number | null
    fecha: Date | null
    precioUnitario: number | null
    subtotal: number | null
    transaccionId: number | null
    tenantId: number | null
  }

  export type VentaCountAggregateOutputType = {
    id: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha: number
    precioUnitario: number
    subtotal: number
    transaccionId: number
    tenantId: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id?: true
    varianteId?: true
    clienteId?: true
    cantidad?: true
    precioUnitario?: true
    subtotal?: true
    transaccionId?: true
    tenantId?: true
  }

  export type VentaSumAggregateInputType = {
    id?: true
    varianteId?: true
    clienteId?: true
    cantidad?: true
    precioUnitario?: true
    subtotal?: true
    transaccionId?: true
    tenantId?: true
  }

  export type VentaMinAggregateInputType = {
    id?: true
    varianteId?: true
    clienteId?: true
    cantidad?: true
    fecha?: true
    precioUnitario?: true
    subtotal?: true
    transaccionId?: true
    tenantId?: true
  }

  export type VentaMaxAggregateInputType = {
    id?: true
    varianteId?: true
    clienteId?: true
    cantidad?: true
    fecha?: true
    precioUnitario?: true
    subtotal?: true
    transaccionId?: true
    tenantId?: true
  }

  export type VentaCountAggregateInputType = {
    id?: true
    varianteId?: true
    clienteId?: true
    cantidad?: true
    fecha?: true
    precioUnitario?: true
    subtotal?: true
    transaccionId?: true
    tenantId?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta to aggregate.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type VentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithAggregationInput | VentaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: VentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha: Date
    precioUnitario: number | null
    subtotal: number | null
    transaccionId: number | null
    tenantId: number
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends VentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type VentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    varianteId?: boolean
    clienteId?: boolean
    cantidad?: boolean
    fecha?: boolean
    precioUnitario?: boolean
    subtotal?: boolean
    transaccionId?: boolean
    tenantId?: boolean
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    transaccion?: boolean | Venta$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    varianteId?: boolean
    clienteId?: boolean
    cantidad?: boolean
    fecha?: boolean
    precioUnitario?: boolean
    subtotal?: boolean
    transaccionId?: boolean
    tenantId?: boolean
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    transaccion?: boolean | Venta$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    varianteId?: boolean
    clienteId?: boolean
    cantidad?: boolean
    fecha?: boolean
    precioUnitario?: boolean
    subtotal?: boolean
    transaccionId?: boolean
    tenantId?: boolean
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    transaccion?: boolean | Venta$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectScalar = {
    id?: boolean
    varianteId?: boolean
    clienteId?: boolean
    cantidad?: boolean
    fecha?: boolean
    precioUnitario?: boolean
    subtotal?: boolean
    transaccionId?: boolean
    tenantId?: boolean
  }

  export type VentaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "varianteId" | "clienteId" | "cantidad" | "fecha" | "precioUnitario" | "subtotal" | "transaccionId" | "tenantId", ExtArgs["result"]["venta"]>
  export type VentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    transaccion?: boolean | Venta$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type VentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    transaccion?: boolean | Venta$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type VentaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variante?: boolean | VarianteProductoDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    transaccion?: boolean | Venta$transaccionArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $VentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta"
    objects: {
      variante: Prisma.$VarianteProductoPayload<ExtArgs>
      cliente: Prisma.$ClientePayload<ExtArgs>
      transaccion: Prisma.$TransaccionPayload<ExtArgs> | null
      tenant: Prisma.$TenantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      varianteId: number
      clienteId: number
      cantidad: number
      fecha: Date
      precioUnitario: number | null
      subtotal: number | null
      transaccionId: number | null
      tenantId: number
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type VentaGetPayload<S extends boolean | null | undefined | VentaDefaultArgs> = $Result.GetResult<Prisma.$VentaPayload, S>

  type VentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VentaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface VentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta'], meta: { name: 'Venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {VentaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaFindUniqueArgs>(args: SelectSubset<T, VentaFindUniqueArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VentaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaFindFirstArgs>(args?: SelectSubset<T, VentaFindFirstArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaWithIdOnly = await prisma.venta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaFindManyArgs>(args?: SelectSubset<T, VentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Venta.
     * @param {VentaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends VentaCreateArgs>(args: SelectSubset<T, VentaCreateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ventas.
     * @param {VentaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCreateManyArgs>(args?: SelectSubset<T, VentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {VentaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Venta.
     * @param {VentaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends VentaDeleteArgs>(args: SelectSubset<T, VentaDeleteArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Venta.
     * @param {VentaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaUpdateArgs>(args: SelectSubset<T, VentaUpdateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ventas.
     * @param {VentaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaDeleteManyArgs>(args?: SelectSubset<T, VentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaUpdateManyArgs>(args: SelectSubset<T, VentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas and returns the data updated in the database.
     * @param {VentaUpdateManyAndReturnArgs} args - Arguments to update many Ventas.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VentaUpdateManyAndReturnArgs>(args: SelectSubset<T, VentaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Venta.
     * @param {VentaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends VentaUpsertArgs>(args: SelectSubset<T, VentaUpsertArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends VentaCountArgs>(
      args?: Subset<T, VentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaGroupByArgs['orderBy'] }
        : { orderBy?: VentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta model
   */
  readonly fields: VentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    variante<T extends VarianteProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VarianteProductoDefaultArgs<ExtArgs>>): Prisma__VarianteProductoClient<$Result.GetResult<Prisma.$VarianteProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transaccion<T extends Venta$transaccionArgs<ExtArgs> = {}>(args?: Subset<T, Venta$transaccionArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta model
   */
  interface VentaFieldRefs {
    readonly id: FieldRef<"Venta", 'Int'>
    readonly varianteId: FieldRef<"Venta", 'Int'>
    readonly clienteId: FieldRef<"Venta", 'Int'>
    readonly cantidad: FieldRef<"Venta", 'Int'>
    readonly fecha: FieldRef<"Venta", 'DateTime'>
    readonly precioUnitario: FieldRef<"Venta", 'Float'>
    readonly subtotal: FieldRef<"Venta", 'Float'>
    readonly transaccionId: FieldRef<"Venta", 'Int'>
    readonly tenantId: FieldRef<"Venta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Venta findUnique
   */
  export type VentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findUniqueOrThrow
   */
  export type VentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findFirst
   */
  export type VentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findFirstOrThrow
   */
  export type VentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findMany
   */
  export type VentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Ventas to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta create
   */
  export type VentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta.
     */
    data: XOR<VentaCreateInput, VentaUncheckedCreateInput>
  }

  /**
   * Venta createMany
   */
  export type VentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Venta createManyAndReturn
   */
  export type VentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta update
   */
  export type VentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta.
     */
    data: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
    /**
     * Choose, which Venta to update.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta updateMany
   */
  export type VentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
  }

  /**
   * Venta updateManyAndReturn
   */
  export type VentaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta upsert
   */
  export type VentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta to update in case it exists.
     */
    where: VentaWhereUniqueInput
    /**
     * In case the Venta found by the `where` argument doesn't exist, create a new Venta with this data.
     */
    create: XOR<VentaCreateInput, VentaUncheckedCreateInput>
    /**
     * In case the Venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
  }

  /**
   * Venta delete
   */
  export type VentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter which Venta to delete.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta deleteMany
   */
  export type VentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ventas to delete
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to delete.
     */
    limit?: number
  }

  /**
   * Venta.transaccion
   */
  export type Venta$transaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
  }

  /**
   * Venta without action
   */
  export type VentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
  }


  /**
   * Model Transaccion
   */

  export type AggregateTransaccion = {
    _count: TransaccionCountAggregateOutputType | null
    _avg: TransaccionAvgAggregateOutputType | null
    _sum: TransaccionSumAggregateOutputType | null
    _min: TransaccionMinAggregateOutputType | null
    _max: TransaccionMaxAggregateOutputType | null
  }

  export type TransaccionAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    total: number | null
    tenantId: number | null
  }

  export type TransaccionSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    total: number | null
    tenantId: number | null
  }

  export type TransaccionMinAggregateOutputType = {
    id: number | null
    tipo: $Enums.TipoTransaccion | null
    clienteId: number | null
    fecha: Date | null
    usuarioId: number | null
    total: number | null
    tenantId: number | null
  }

  export type TransaccionMaxAggregateOutputType = {
    id: number | null
    tipo: $Enums.TipoTransaccion | null
    clienteId: number | null
    fecha: Date | null
    usuarioId: number | null
    total: number | null
    tenantId: number | null
  }

  export type TransaccionCountAggregateOutputType = {
    id: number
    tipo: number
    clienteId: number
    fecha: number
    usuarioId: number
    total: number
    tenantId: number
    _all: number
  }


  export type TransaccionAvgAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    total?: true
    tenantId?: true
  }

  export type TransaccionSumAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    total?: true
    tenantId?: true
  }

  export type TransaccionMinAggregateInputType = {
    id?: true
    tipo?: true
    clienteId?: true
    fecha?: true
    usuarioId?: true
    total?: true
    tenantId?: true
  }

  export type TransaccionMaxAggregateInputType = {
    id?: true
    tipo?: true
    clienteId?: true
    fecha?: true
    usuarioId?: true
    total?: true
    tenantId?: true
  }

  export type TransaccionCountAggregateInputType = {
    id?: true
    tipo?: true
    clienteId?: true
    fecha?: true
    usuarioId?: true
    total?: true
    tenantId?: true
    _all?: true
  }

  export type TransaccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaccion to aggregate.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transaccions
    **/
    _count?: true | TransaccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransaccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransaccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaccionMaxAggregateInputType
  }

  export type GetTransaccionAggregateType<T extends TransaccionAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaccion[P]>
      : GetScalarType<T[P], AggregateTransaccion[P]>
  }




  export type TransaccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithAggregationInput | TransaccionOrderByWithAggregationInput[]
    by: TransaccionScalarFieldEnum[] | TransaccionScalarFieldEnum
    having?: TransaccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaccionCountAggregateInputType | true
    _avg?: TransaccionAvgAggregateInputType
    _sum?: TransaccionSumAggregateInputType
    _min?: TransaccionMinAggregateInputType
    _max?: TransaccionMaxAggregateInputType
  }

  export type TransaccionGroupByOutputType = {
    id: number
    tipo: $Enums.TipoTransaccion
    clienteId: number | null
    fecha: Date
    usuarioId: number | null
    total: number
    tenantId: number
    _count: TransaccionCountAggregateOutputType | null
    _avg: TransaccionAvgAggregateOutputType | null
    _sum: TransaccionSumAggregateOutputType | null
    _min: TransaccionMinAggregateOutputType | null
    _max: TransaccionMaxAggregateOutputType | null
  }

  type GetTransaccionGroupByPayload<T extends TransaccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaccionGroupByOutputType[P]>
            : GetScalarType<T[P], TransaccionGroupByOutputType[P]>
        }
      >
    >


  export type TransaccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    clienteId?: boolean
    fecha?: boolean
    usuarioId?: boolean
    total?: boolean
    tenantId?: boolean
    cliente?: boolean | Transaccion$clienteArgs<ExtArgs>
    usuario?: boolean | Transaccion$usuarioArgs<ExtArgs>
    ventas?: boolean | Transaccion$ventasArgs<ExtArgs>
    movimientos?: boolean | Transaccion$movimientosArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    _count?: boolean | TransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion"]>

  export type TransaccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    clienteId?: boolean
    fecha?: boolean
    usuarioId?: boolean
    total?: boolean
    tenantId?: boolean
    cliente?: boolean | Transaccion$clienteArgs<ExtArgs>
    usuario?: boolean | Transaccion$usuarioArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion"]>

  export type TransaccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    clienteId?: boolean
    fecha?: boolean
    usuarioId?: boolean
    total?: boolean
    tenantId?: boolean
    cliente?: boolean | Transaccion$clienteArgs<ExtArgs>
    usuario?: boolean | Transaccion$usuarioArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion"]>

  export type TransaccionSelectScalar = {
    id?: boolean
    tipo?: boolean
    clienteId?: boolean
    fecha?: boolean
    usuarioId?: boolean
    total?: boolean
    tenantId?: boolean
  }

  export type TransaccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipo" | "clienteId" | "fecha" | "usuarioId" | "total" | "tenantId", ExtArgs["result"]["transaccion"]>
  export type TransaccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Transaccion$clienteArgs<ExtArgs>
    usuario?: boolean | Transaccion$usuarioArgs<ExtArgs>
    ventas?: boolean | Transaccion$ventasArgs<ExtArgs>
    movimientos?: boolean | Transaccion$movimientosArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
    _count?: boolean | TransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TransaccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Transaccion$clienteArgs<ExtArgs>
    usuario?: boolean | Transaccion$usuarioArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type TransaccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Transaccion$clienteArgs<ExtArgs>
    usuario?: boolean | Transaccion$usuarioArgs<ExtArgs>
    tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $TransaccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaccion"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs> | null
      usuario: Prisma.$UserPayload<ExtArgs> | null
      ventas: Prisma.$VentaPayload<ExtArgs>[]
      movimientos: Prisma.$MovimientoStockPayload<ExtArgs>[]
      tenant: Prisma.$TenantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tipo: $Enums.TipoTransaccion
      clienteId: number | null
      fecha: Date
      usuarioId: number | null
      total: number
      tenantId: number
    }, ExtArgs["result"]["transaccion"]>
    composites: {}
  }

  type TransaccionGetPayload<S extends boolean | null | undefined | TransaccionDefaultArgs> = $Result.GetResult<Prisma.$TransaccionPayload, S>

  type TransaccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransaccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransaccionCountAggregateInputType | true
    }

  export interface TransaccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaccion'], meta: { name: 'Transaccion' } }
    /**
     * Find zero or one Transaccion that matches the filter.
     * @param {TransaccionFindUniqueArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransaccionFindUniqueArgs>(args: SelectSubset<T, TransaccionFindUniqueArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransaccionFindUniqueOrThrowArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransaccionFindUniqueOrThrowArgs>(args: SelectSubset<T, TransaccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionFindFirstArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransaccionFindFirstArgs>(args?: SelectSubset<T, TransaccionFindFirstArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionFindFirstOrThrowArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransaccionFindFirstOrThrowArgs>(args?: SelectSubset<T, TransaccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaccions
     * const transaccions = await prisma.transaccion.findMany()
     * 
     * // Get first 10 Transaccions
     * const transaccions = await prisma.transaccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaccionWithIdOnly = await prisma.transaccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransaccionFindManyArgs>(args?: SelectSubset<T, TransaccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaccion.
     * @param {TransaccionCreateArgs} args - Arguments to create a Transaccion.
     * @example
     * // Create one Transaccion
     * const Transaccion = await prisma.transaccion.create({
     *   data: {
     *     // ... data to create a Transaccion
     *   }
     * })
     * 
     */
    create<T extends TransaccionCreateArgs>(args: SelectSubset<T, TransaccionCreateArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaccions.
     * @param {TransaccionCreateManyArgs} args - Arguments to create many Transaccions.
     * @example
     * // Create many Transaccions
     * const transaccion = await prisma.transaccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransaccionCreateManyArgs>(args?: SelectSubset<T, TransaccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transaccions and returns the data saved in the database.
     * @param {TransaccionCreateManyAndReturnArgs} args - Arguments to create many Transaccions.
     * @example
     * // Create many Transaccions
     * const transaccion = await prisma.transaccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transaccions and only return the `id`
     * const transaccionWithIdOnly = await prisma.transaccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransaccionCreateManyAndReturnArgs>(args?: SelectSubset<T, TransaccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaccion.
     * @param {TransaccionDeleteArgs} args - Arguments to delete one Transaccion.
     * @example
     * // Delete one Transaccion
     * const Transaccion = await prisma.transaccion.delete({
     *   where: {
     *     // ... filter to delete one Transaccion
     *   }
     * })
     * 
     */
    delete<T extends TransaccionDeleteArgs>(args: SelectSubset<T, TransaccionDeleteArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaccion.
     * @param {TransaccionUpdateArgs} args - Arguments to update one Transaccion.
     * @example
     * // Update one Transaccion
     * const transaccion = await prisma.transaccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransaccionUpdateArgs>(args: SelectSubset<T, TransaccionUpdateArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaccions.
     * @param {TransaccionDeleteManyArgs} args - Arguments to filter Transaccions to delete.
     * @example
     * // Delete a few Transaccions
     * const { count } = await prisma.transaccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransaccionDeleteManyArgs>(args?: SelectSubset<T, TransaccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaccions
     * const transaccion = await prisma.transaccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransaccionUpdateManyArgs>(args: SelectSubset<T, TransaccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccions and returns the data updated in the database.
     * @param {TransaccionUpdateManyAndReturnArgs} args - Arguments to update many Transaccions.
     * @example
     * // Update many Transaccions
     * const transaccion = await prisma.transaccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transaccions and only return the `id`
     * const transaccionWithIdOnly = await prisma.transaccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransaccionUpdateManyAndReturnArgs>(args: SelectSubset<T, TransaccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaccion.
     * @param {TransaccionUpsertArgs} args - Arguments to update or create a Transaccion.
     * @example
     * // Update or create a Transaccion
     * const transaccion = await prisma.transaccion.upsert({
     *   create: {
     *     // ... data to create a Transaccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaccion we want to update
     *   }
     * })
     */
    upsert<T extends TransaccionUpsertArgs>(args: SelectSubset<T, TransaccionUpsertArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionCountArgs} args - Arguments to filter Transaccions to count.
     * @example
     * // Count the number of Transaccions
     * const count = await prisma.transaccion.count({
     *   where: {
     *     // ... the filter for the Transaccions we want to count
     *   }
     * })
    **/
    count<T extends TransaccionCountArgs>(
      args?: Subset<T, TransaccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaccionAggregateArgs>(args: Subset<T, TransaccionAggregateArgs>): Prisma.PrismaPromise<GetTransaccionAggregateType<T>>

    /**
     * Group by Transaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransaccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransaccionGroupByArgs['orderBy'] }
        : { orderBy?: TransaccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransaccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaccion model
   */
  readonly fields: TransaccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransaccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends Transaccion$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$clienteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuario<T extends Transaccion$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$usuarioArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ventas<T extends Transaccion$ventasArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimientos<T extends Transaccion$movimientosArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoStockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaccion model
   */
  interface TransaccionFieldRefs {
    readonly id: FieldRef<"Transaccion", 'Int'>
    readonly tipo: FieldRef<"Transaccion", 'TipoTransaccion'>
    readonly clienteId: FieldRef<"Transaccion", 'Int'>
    readonly fecha: FieldRef<"Transaccion", 'DateTime'>
    readonly usuarioId: FieldRef<"Transaccion", 'Int'>
    readonly total: FieldRef<"Transaccion", 'Float'>
    readonly tenantId: FieldRef<"Transaccion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Transaccion findUnique
   */
  export type TransaccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion findUniqueOrThrow
   */
  export type TransaccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion findFirst
   */
  export type TransaccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaccions.
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaccions.
     */
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Transaccion findFirstOrThrow
   */
  export type TransaccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaccions.
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaccions.
     */
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Transaccion findMany
   */
  export type TransaccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccions to fetch.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transaccions.
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Transaccion create
   */
  export type TransaccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaccion.
     */
    data: XOR<TransaccionCreateInput, TransaccionUncheckedCreateInput>
  }

  /**
   * Transaccion createMany
   */
  export type TransaccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transaccions.
     */
    data: TransaccionCreateManyInput | TransaccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaccion createManyAndReturn
   */
  export type TransaccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * The data used to create many Transaccions.
     */
    data: TransaccionCreateManyInput | TransaccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaccion update
   */
  export type TransaccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaccion.
     */
    data: XOR<TransaccionUpdateInput, TransaccionUncheckedUpdateInput>
    /**
     * Choose, which Transaccion to update.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion updateMany
   */
  export type TransaccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transaccions.
     */
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyInput>
    /**
     * Filter which Transaccions to update
     */
    where?: TransaccionWhereInput
    /**
     * Limit how many Transaccions to update.
     */
    limit?: number
  }

  /**
   * Transaccion updateManyAndReturn
   */
  export type TransaccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * The data used to update Transaccions.
     */
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyInput>
    /**
     * Filter which Transaccions to update
     */
    where?: TransaccionWhereInput
    /**
     * Limit how many Transaccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaccion upsert
   */
  export type TransaccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaccion to update in case it exists.
     */
    where: TransaccionWhereUniqueInput
    /**
     * In case the Transaccion found by the `where` argument doesn't exist, create a new Transaccion with this data.
     */
    create: XOR<TransaccionCreateInput, TransaccionUncheckedCreateInput>
    /**
     * In case the Transaccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransaccionUpdateInput, TransaccionUncheckedUpdateInput>
  }

  /**
   * Transaccion delete
   */
  export type TransaccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter which Transaccion to delete.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion deleteMany
   */
  export type TransaccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaccions to delete
     */
    where?: TransaccionWhereInput
    /**
     * Limit how many Transaccions to delete.
     */
    limit?: number
  }

  /**
   * Transaccion.cliente
   */
  export type Transaccion$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
  }

  /**
   * Transaccion.usuario
   */
  export type Transaccion$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Transaccion.ventas
   */
  export type Transaccion$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Transaccion.movimientos
   */
  export type Transaccion$movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoStock
     */
    select?: MovimientoStockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimientoStock
     */
    omit?: MovimientoStockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoStockInclude<ExtArgs> | null
    where?: MovimientoStockWhereInput
    orderBy?: MovimientoStockOrderByWithRelationInput | MovimientoStockOrderByWithRelationInput[]
    cursor?: MovimientoStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoStockScalarFieldEnum | MovimientoStockScalarFieldEnum[]
  }

  /**
   * Transaccion without action
   */
  export type TransaccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TenantScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    createdAt: 'createdAt'
  };

  export type TenantScalarFieldEnum = (typeof TenantScalarFieldEnum)[keyof typeof TenantScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    tenantId: 'tenantId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id: 'id',
    codigoBarra: 'codigoBarra',
    nombre: 'nombre',
    descripcion: 'descripcion',
    precio: 'precio',
    costo: 'costo',
    categoria: 'categoria',
    fechaCreacion: 'fechaCreacion',
    fechaActualizacion: 'fechaActualizacion',
    tenantId: 'tenantId',
    creadoPorId: 'creadoPorId'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const VarianteProductoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    color: 'color',
    talla: 'talla',
    stock: 'stock',
    tenantId: 'tenantId'
  };

  export type VarianteProductoScalarFieldEnum = (typeof VarianteProductoScalarFieldEnum)[keyof typeof VarianteProductoScalarFieldEnum]


  export const MovimientoStockScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    varianteId: 'varianteId',
    cantidad: 'cantidad',
    tipoMovimiento: 'tipoMovimiento',
    motivo: 'motivo',
    fecha: 'fecha',
    usuarioId: 'usuarioId',
    transaccionId: 'transaccionId',
    tenantId: 'tenantId'
  };

  export type MovimientoStockScalarFieldEnum = (typeof MovimientoStockScalarFieldEnum)[keyof typeof MovimientoStockScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    telefono: 'telefono',
    email: 'email',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    tenantId: 'tenantId'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id: 'id',
    varianteId: 'varianteId',
    clienteId: 'clienteId',
    cantidad: 'cantidad',
    fecha: 'fecha',
    precioUnitario: 'precioUnitario',
    subtotal: 'subtotal',
    transaccionId: 'transaccionId',
    tenantId: 'tenantId'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const TransaccionScalarFieldEnum: {
    id: 'id',
    tipo: 'tipo',
    clienteId: 'clienteId',
    fecha: 'fecha',
    usuarioId: 'usuarioId',
    total: 'total',
    tenantId: 'tenantId'
  };

  export type TransaccionScalarFieldEnum = (typeof TransaccionScalarFieldEnum)[keyof typeof TransaccionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'TipoTransaccion'
   */
  export type EnumTipoTransaccionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoTransaccion'>
    


  /**
   * Reference to a field of type 'TipoTransaccion[]'
   */
  export type ListEnumTipoTransaccionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoTransaccion[]'>
    
  /**
   * Deep Input Types
   */


  export type TenantWhereInput = {
    AND?: TenantWhereInput | TenantWhereInput[]
    OR?: TenantWhereInput[]
    NOT?: TenantWhereInput | TenantWhereInput[]
    id?: IntFilter<"Tenant"> | number
    nombre?: StringFilter<"Tenant"> | string
    createdAt?: DateTimeFilter<"Tenant"> | Date | string
    usuarios?: UserListRelationFilter
    productos?: ProductoListRelationFilter
    clientes?: ClienteListRelationFilter
    variantesProducto?: VarianteProductoListRelationFilter
    transacciones?: TransaccionListRelationFilter
    ventas?: VentaListRelationFilter
    movimientosStock?: MovimientoStockListRelationFilter
  }

  export type TenantOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
    usuarios?: UserOrderByRelationAggregateInput
    productos?: ProductoOrderByRelationAggregateInput
    clientes?: ClienteOrderByRelationAggregateInput
    variantesProducto?: VarianteProductoOrderByRelationAggregateInput
    transacciones?: TransaccionOrderByRelationAggregateInput
    ventas?: VentaOrderByRelationAggregateInput
    movimientosStock?: MovimientoStockOrderByRelationAggregateInput
  }

  export type TenantWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TenantWhereInput | TenantWhereInput[]
    OR?: TenantWhereInput[]
    NOT?: TenantWhereInput | TenantWhereInput[]
    nombre?: StringFilter<"Tenant"> | string
    createdAt?: DateTimeFilter<"Tenant"> | Date | string
    usuarios?: UserListRelationFilter
    productos?: ProductoListRelationFilter
    clientes?: ClienteListRelationFilter
    variantesProducto?: VarianteProductoListRelationFilter
    transacciones?: TransaccionListRelationFilter
    ventas?: VentaListRelationFilter
    movimientosStock?: MovimientoStockListRelationFilter
  }, "id">

  export type TenantOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
    _count?: TenantCountOrderByAggregateInput
    _avg?: TenantAvgOrderByAggregateInput
    _max?: TenantMaxOrderByAggregateInput
    _min?: TenantMinOrderByAggregateInput
    _sum?: TenantSumOrderByAggregateInput
  }

  export type TenantScalarWhereWithAggregatesInput = {
    AND?: TenantScalarWhereWithAggregatesInput | TenantScalarWhereWithAggregatesInput[]
    OR?: TenantScalarWhereWithAggregatesInput[]
    NOT?: TenantScalarWhereWithAggregatesInput | TenantScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Tenant"> | number
    nombre?: StringWithAggregatesFilter<"Tenant"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Tenant"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    tenantId?: IntFilter<"User"> | number
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    productos?: ProductoListRelationFilter
    transacciones?: TransaccionListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    tenant?: TenantOrderByWithRelationInput
    productos?: ProductoOrderByRelationAggregateInput
    transacciones?: TransaccionOrderByRelationAggregateInput
    movimientos?: MovimientoStockOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    tenantId?: IntFilter<"User"> | number
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    productos?: ProductoListRelationFilter
    transacciones?: TransaccionListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    tenantId?: IntWithAggregatesFilter<"User"> | number
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id?: IntFilter<"Producto"> | number
    codigoBarra?: StringNullableFilter<"Producto"> | string | null
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: FloatFilter<"Producto"> | number
    costo?: FloatFilter<"Producto"> | number
    categoria?: StringNullableFilter<"Producto"> | string | null
    fechaCreacion?: DateTimeFilter<"Producto"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Producto"> | Date | string
    tenantId?: IntFilter<"Producto"> | number
    creadoPorId?: IntNullableFilter<"Producto"> | number | null
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    creadoPor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    variantes?: VarianteProductoListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
  }

  export type ProductoOrderByWithRelationInput = {
    id?: SortOrder
    codigoBarra?: SortOrderInput | SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    costo?: SortOrder
    categoria?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrderInput | SortOrder
    tenant?: TenantOrderByWithRelationInput
    creadoPor?: UserOrderByWithRelationInput
    variantes?: VarianteProductoOrderByRelationAggregateInput
    movimientos?: MovimientoStockOrderByRelationAggregateInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoBarra?: string
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: FloatFilter<"Producto"> | number
    costo?: FloatFilter<"Producto"> | number
    categoria?: StringNullableFilter<"Producto"> | string | null
    fechaCreacion?: DateTimeFilter<"Producto"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Producto"> | Date | string
    tenantId?: IntFilter<"Producto"> | number
    creadoPorId?: IntNullableFilter<"Producto"> | number | null
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    creadoPor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    variantes?: VarianteProductoListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
  }, "id" | "codigoBarra">

  export type ProductoOrderByWithAggregationInput = {
    id?: SortOrder
    codigoBarra?: SortOrderInput | SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    costo?: SortOrder
    categoria?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrderInput | SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Producto"> | number
    codigoBarra?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    precio?: FloatWithAggregatesFilter<"Producto"> | number
    costo?: FloatWithAggregatesFilter<"Producto"> | number
    categoria?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    fechaActualizacion?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    tenantId?: IntWithAggregatesFilter<"Producto"> | number
    creadoPorId?: IntNullableWithAggregatesFilter<"Producto"> | number | null
  }

  export type VarianteProductoWhereInput = {
    AND?: VarianteProductoWhereInput | VarianteProductoWhereInput[]
    OR?: VarianteProductoWhereInput[]
    NOT?: VarianteProductoWhereInput | VarianteProductoWhereInput[]
    id?: IntFilter<"VarianteProducto"> | number
    productoId?: IntFilter<"VarianteProducto"> | number
    color?: StringNullableFilter<"VarianteProducto"> | string | null
    talla?: StringNullableFilter<"VarianteProducto"> | string | null
    stock?: IntFilter<"VarianteProducto"> | number
    tenantId?: IntFilter<"VarianteProducto"> | number
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    ventas?: VentaListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
  }

  export type VarianteProductoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    color?: SortOrderInput | SortOrder
    talla?: SortOrderInput | SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
    producto?: ProductoOrderByWithRelationInput
    tenant?: TenantOrderByWithRelationInput
    ventas?: VentaOrderByRelationAggregateInput
    movimientos?: MovimientoStockOrderByRelationAggregateInput
  }

  export type VarianteProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VarianteProductoWhereInput | VarianteProductoWhereInput[]
    OR?: VarianteProductoWhereInput[]
    NOT?: VarianteProductoWhereInput | VarianteProductoWhereInput[]
    productoId?: IntFilter<"VarianteProducto"> | number
    color?: StringNullableFilter<"VarianteProducto"> | string | null
    talla?: StringNullableFilter<"VarianteProducto"> | string | null
    stock?: IntFilter<"VarianteProducto"> | number
    tenantId?: IntFilter<"VarianteProducto"> | number
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    ventas?: VentaListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
  }, "id">

  export type VarianteProductoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    color?: SortOrderInput | SortOrder
    talla?: SortOrderInput | SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
    _count?: VarianteProductoCountOrderByAggregateInput
    _avg?: VarianteProductoAvgOrderByAggregateInput
    _max?: VarianteProductoMaxOrderByAggregateInput
    _min?: VarianteProductoMinOrderByAggregateInput
    _sum?: VarianteProductoSumOrderByAggregateInput
  }

  export type VarianteProductoScalarWhereWithAggregatesInput = {
    AND?: VarianteProductoScalarWhereWithAggregatesInput | VarianteProductoScalarWhereWithAggregatesInput[]
    OR?: VarianteProductoScalarWhereWithAggregatesInput[]
    NOT?: VarianteProductoScalarWhereWithAggregatesInput | VarianteProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VarianteProducto"> | number
    productoId?: IntWithAggregatesFilter<"VarianteProducto"> | number
    color?: StringNullableWithAggregatesFilter<"VarianteProducto"> | string | null
    talla?: StringNullableWithAggregatesFilter<"VarianteProducto"> | string | null
    stock?: IntWithAggregatesFilter<"VarianteProducto"> | number
    tenantId?: IntWithAggregatesFilter<"VarianteProducto"> | number
  }

  export type MovimientoStockWhereInput = {
    AND?: MovimientoStockWhereInput | MovimientoStockWhereInput[]
    OR?: MovimientoStockWhereInput[]
    NOT?: MovimientoStockWhereInput | MovimientoStockWhereInput[]
    id?: IntFilter<"MovimientoStock"> | number
    productoId?: IntFilter<"MovimientoStock"> | number
    varianteId?: IntFilter<"MovimientoStock"> | number
    cantidad?: IntFilter<"MovimientoStock"> | number
    tipoMovimiento?: StringFilter<"MovimientoStock"> | string
    motivo?: StringNullableFilter<"MovimientoStock"> | string | null
    fecha?: DateTimeFilter<"MovimientoStock"> | Date | string
    usuarioId?: IntNullableFilter<"MovimientoStock"> | number | null
    transaccionId?: IntNullableFilter<"MovimientoStock"> | number | null
    tenantId?: IntFilter<"MovimientoStock"> | number
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    variante?: XOR<VarianteProductoScalarRelationFilter, VarianteProductoWhereInput>
    usuario?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    transaccion?: XOR<TransaccionNullableScalarRelationFilter, TransaccionWhereInput> | null
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }

  export type MovimientoStockOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    tipoMovimiento?: SortOrder
    motivo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    transaccionId?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    producto?: ProductoOrderByWithRelationInput
    variante?: VarianteProductoOrderByWithRelationInput
    usuario?: UserOrderByWithRelationInput
    transaccion?: TransaccionOrderByWithRelationInput
    tenant?: TenantOrderByWithRelationInput
  }

  export type MovimientoStockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MovimientoStockWhereInput | MovimientoStockWhereInput[]
    OR?: MovimientoStockWhereInput[]
    NOT?: MovimientoStockWhereInput | MovimientoStockWhereInput[]
    productoId?: IntFilter<"MovimientoStock"> | number
    varianteId?: IntFilter<"MovimientoStock"> | number
    cantidad?: IntFilter<"MovimientoStock"> | number
    tipoMovimiento?: StringFilter<"MovimientoStock"> | string
    motivo?: StringNullableFilter<"MovimientoStock"> | string | null
    fecha?: DateTimeFilter<"MovimientoStock"> | Date | string
    usuarioId?: IntNullableFilter<"MovimientoStock"> | number | null
    transaccionId?: IntNullableFilter<"MovimientoStock"> | number | null
    tenantId?: IntFilter<"MovimientoStock"> | number
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    variante?: XOR<VarianteProductoScalarRelationFilter, VarianteProductoWhereInput>
    usuario?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    transaccion?: XOR<TransaccionNullableScalarRelationFilter, TransaccionWhereInput> | null
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }, "id">

  export type MovimientoStockOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    tipoMovimiento?: SortOrder
    motivo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    transaccionId?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    _count?: MovimientoStockCountOrderByAggregateInput
    _avg?: MovimientoStockAvgOrderByAggregateInput
    _max?: MovimientoStockMaxOrderByAggregateInput
    _min?: MovimientoStockMinOrderByAggregateInput
    _sum?: MovimientoStockSumOrderByAggregateInput
  }

  export type MovimientoStockScalarWhereWithAggregatesInput = {
    AND?: MovimientoStockScalarWhereWithAggregatesInput | MovimientoStockScalarWhereWithAggregatesInput[]
    OR?: MovimientoStockScalarWhereWithAggregatesInput[]
    NOT?: MovimientoStockScalarWhereWithAggregatesInput | MovimientoStockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MovimientoStock"> | number
    productoId?: IntWithAggregatesFilter<"MovimientoStock"> | number
    varianteId?: IntWithAggregatesFilter<"MovimientoStock"> | number
    cantidad?: IntWithAggregatesFilter<"MovimientoStock"> | number
    tipoMovimiento?: StringWithAggregatesFilter<"MovimientoStock"> | string
    motivo?: StringNullableWithAggregatesFilter<"MovimientoStock"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"MovimientoStock"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"MovimientoStock"> | number | null
    transaccionId?: IntNullableWithAggregatesFilter<"MovimientoStock"> | number | null
    tenantId?: IntWithAggregatesFilter<"MovimientoStock"> | number
  }

  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    email?: StringNullableFilter<"Cliente"> | string | null
    createdAt?: DateTimeFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeFilter<"Cliente"> | Date | string
    tenantId?: IntFilter<"Cliente"> | number
    ventas?: VentaListRelationFilter
    transacciones?: TransaccionListRelationFilter
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }

  export type ClienteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    ventas?: VentaOrderByRelationAggregateInput
    transacciones?: TransaccionOrderByRelationAggregateInput
    tenant?: TenantOrderByWithRelationInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    email?: StringNullableFilter<"Cliente"> | string | null
    createdAt?: DateTimeFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeFilter<"Cliente"> | Date | string
    tenantId?: IntFilter<"Cliente"> | number
    ventas?: VentaListRelationFilter
    transacciones?: TransaccionListRelationFilter
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }, "id">

  export type ClienteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cliente"> | number
    nombre?: StringWithAggregatesFilter<"Cliente"> | string
    telefono?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    email?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
    tenantId?: IntWithAggregatesFilter<"Cliente"> | number
  }

  export type VentaWhereInput = {
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    id?: IntFilter<"Venta"> | number
    varianteId?: IntFilter<"Venta"> | number
    clienteId?: IntFilter<"Venta"> | number
    cantidad?: IntFilter<"Venta"> | number
    fecha?: DateTimeFilter<"Venta"> | Date | string
    precioUnitario?: FloatNullableFilter<"Venta"> | number | null
    subtotal?: FloatNullableFilter<"Venta"> | number | null
    transaccionId?: IntNullableFilter<"Venta"> | number | null
    tenantId?: IntFilter<"Venta"> | number
    variante?: XOR<VarianteProductoScalarRelationFilter, VarianteProductoWhereInput>
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    transaccion?: XOR<TransaccionNullableScalarRelationFilter, TransaccionWhereInput> | null
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }

  export type VentaOrderByWithRelationInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    precioUnitario?: SortOrderInput | SortOrder
    subtotal?: SortOrderInput | SortOrder
    transaccionId?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    variante?: VarianteProductoOrderByWithRelationInput
    cliente?: ClienteOrderByWithRelationInput
    transaccion?: TransaccionOrderByWithRelationInput
    tenant?: TenantOrderByWithRelationInput
  }

  export type VentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    varianteId?: IntFilter<"Venta"> | number
    clienteId?: IntFilter<"Venta"> | number
    cantidad?: IntFilter<"Venta"> | number
    fecha?: DateTimeFilter<"Venta"> | Date | string
    precioUnitario?: FloatNullableFilter<"Venta"> | number | null
    subtotal?: FloatNullableFilter<"Venta"> | number | null
    transaccionId?: IntNullableFilter<"Venta"> | number | null
    tenantId?: IntFilter<"Venta"> | number
    variante?: XOR<VarianteProductoScalarRelationFilter, VarianteProductoWhereInput>
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    transaccion?: XOR<TransaccionNullableScalarRelationFilter, TransaccionWhereInput> | null
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }, "id">

  export type VentaOrderByWithAggregationInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    precioUnitario?: SortOrderInput | SortOrder
    subtotal?: SortOrderInput | SortOrder
    transaccionId?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    _count?: VentaCountOrderByAggregateInput
    _avg?: VentaAvgOrderByAggregateInput
    _max?: VentaMaxOrderByAggregateInput
    _min?: VentaMinOrderByAggregateInput
    _sum?: VentaSumOrderByAggregateInput
  }

  export type VentaScalarWhereWithAggregatesInput = {
    AND?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    OR?: VentaScalarWhereWithAggregatesInput[]
    NOT?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Venta"> | number
    varianteId?: IntWithAggregatesFilter<"Venta"> | number
    clienteId?: IntWithAggregatesFilter<"Venta"> | number
    cantidad?: IntWithAggregatesFilter<"Venta"> | number
    fecha?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    precioUnitario?: FloatNullableWithAggregatesFilter<"Venta"> | number | null
    subtotal?: FloatNullableWithAggregatesFilter<"Venta"> | number | null
    transaccionId?: IntNullableWithAggregatesFilter<"Venta"> | number | null
    tenantId?: IntWithAggregatesFilter<"Venta"> | number
  }

  export type TransaccionWhereInput = {
    AND?: TransaccionWhereInput | TransaccionWhereInput[]
    OR?: TransaccionWhereInput[]
    NOT?: TransaccionWhereInput | TransaccionWhereInput[]
    id?: IntFilter<"Transaccion"> | number
    tipo?: EnumTipoTransaccionFilter<"Transaccion"> | $Enums.TipoTransaccion
    clienteId?: IntNullableFilter<"Transaccion"> | number | null
    fecha?: DateTimeFilter<"Transaccion"> | Date | string
    usuarioId?: IntNullableFilter<"Transaccion"> | number | null
    total?: FloatFilter<"Transaccion"> | number
    tenantId?: IntFilter<"Transaccion"> | number
    cliente?: XOR<ClienteNullableScalarRelationFilter, ClienteWhereInput> | null
    usuario?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ventas?: VentaListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }

  export type TransaccionOrderByWithRelationInput = {
    id?: SortOrder
    tipo?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    total?: SortOrder
    tenantId?: SortOrder
    cliente?: ClienteOrderByWithRelationInput
    usuario?: UserOrderByWithRelationInput
    ventas?: VentaOrderByRelationAggregateInput
    movimientos?: MovimientoStockOrderByRelationAggregateInput
    tenant?: TenantOrderByWithRelationInput
  }

  export type TransaccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransaccionWhereInput | TransaccionWhereInput[]
    OR?: TransaccionWhereInput[]
    NOT?: TransaccionWhereInput | TransaccionWhereInput[]
    tipo?: EnumTipoTransaccionFilter<"Transaccion"> | $Enums.TipoTransaccion
    clienteId?: IntNullableFilter<"Transaccion"> | number | null
    fecha?: DateTimeFilter<"Transaccion"> | Date | string
    usuarioId?: IntNullableFilter<"Transaccion"> | number | null
    total?: FloatFilter<"Transaccion"> | number
    tenantId?: IntFilter<"Transaccion"> | number
    cliente?: XOR<ClienteNullableScalarRelationFilter, ClienteWhereInput> | null
    usuario?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ventas?: VentaListRelationFilter
    movimientos?: MovimientoStockListRelationFilter
    tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }, "id">

  export type TransaccionOrderByWithAggregationInput = {
    id?: SortOrder
    tipo?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    total?: SortOrder
    tenantId?: SortOrder
    _count?: TransaccionCountOrderByAggregateInput
    _avg?: TransaccionAvgOrderByAggregateInput
    _max?: TransaccionMaxOrderByAggregateInput
    _min?: TransaccionMinOrderByAggregateInput
    _sum?: TransaccionSumOrderByAggregateInput
  }

  export type TransaccionScalarWhereWithAggregatesInput = {
    AND?: TransaccionScalarWhereWithAggregatesInput | TransaccionScalarWhereWithAggregatesInput[]
    OR?: TransaccionScalarWhereWithAggregatesInput[]
    NOT?: TransaccionScalarWhereWithAggregatesInput | TransaccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transaccion"> | number
    tipo?: EnumTipoTransaccionWithAggregatesFilter<"Transaccion"> | $Enums.TipoTransaccion
    clienteId?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    fecha?: DateTimeWithAggregatesFilter<"Transaccion"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    total?: FloatWithAggregatesFilter<"Transaccion"> | number
    tenantId?: IntWithAggregatesFilter<"Transaccion"> | number
  }

  export type TenantCreateInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    productos?: ProductoCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TenantCreateManyInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
  }

  export type TenantUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TenantUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenant: TenantCreateNestedOneWithoutUsuariosInput
    productos?: ProductoCreateNestedManyWithoutCreadoPorInput
    transacciones?: TransaccionCreateNestedManyWithoutUsuarioInput
    movimientos?: MovimientoStockCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    productos?: ProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutUsuarioInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutUsuariosNestedInput
    productos?: ProductoUpdateManyWithoutCreadoPorNestedInput
    transacciones?: TransaccionUpdateManyWithoutUsuarioNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    productos?: ProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutUsuarioNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
  }

  export type UserUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoCreateInput = {
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenant: TenantCreateNestedOneWithoutProductosInput
    creadoPor?: UserCreateNestedOneWithoutProductosInput
    variantes?: VarianteProductoCreateNestedManyWithoutProductoInput
    movimientos?: MovimientoStockCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenantId: number
    creadoPorId?: number | null
    variantes?: VarianteProductoUncheckedCreateNestedManyWithoutProductoInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoUpdateInput = {
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutProductosNestedInput
    creadoPor?: UserUpdateOneWithoutProductosNestedInput
    variantes?: VarianteProductoUpdateManyWithoutProductoNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    variantes?: VarianteProductoUncheckedUpdateManyWithoutProductoNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateManyInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenantId: number
    creadoPorId?: number | null
  }

  export type ProductoUpdateManyMutationInput = {
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VarianteProductoCreateInput = {
    color?: string | null
    talla?: string | null
    stock?: number
    producto: ProductoCreateNestedOneWithoutVariantesInput
    tenant: TenantCreateNestedOneWithoutVariantesProductoInput
    ventas?: VentaCreateNestedManyWithoutVarianteInput
    movimientos?: MovimientoStockCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoUncheckedCreateInput = {
    id?: number
    productoId: number
    color?: string | null
    talla?: string | null
    stock?: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutVarianteInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoUpdateInput = {
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutVariantesNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVariantesProductoNestedInput
    ventas?: VentaUpdateManyWithoutVarianteNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutVarianteNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoCreateManyInput = {
    id?: number
    productoId: number
    color?: string | null
    talla?: string | null
    stock?: number
    tenantId: number
  }

  export type VarianteProductoUpdateManyMutationInput = {
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
  }

  export type VarianteProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockCreateInput = {
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    producto: ProductoCreateNestedOneWithoutMovimientosInput
    variante: VarianteProductoCreateNestedOneWithoutMovimientosInput
    usuario?: UserCreateNestedOneWithoutMovimientosInput
    transaccion?: TransaccionCreateNestedOneWithoutMovimientosInput
    tenant: TenantCreateNestedOneWithoutMovimientosStockInput
  }

  export type MovimientoStockUncheckedCreateInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type MovimientoStockUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutMovimientosNestedInput
    variante?: VarianteProductoUpdateOneRequiredWithoutMovimientosNestedInput
    usuario?: UserUpdateOneWithoutMovimientosNestedInput
    transaccion?: TransaccionUpdateOneWithoutMovimientosNestedInput
    tenant?: TenantUpdateOneRequiredWithoutMovimientosStockNestedInput
  }

  export type MovimientoStockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockCreateManyInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type MovimientoStockUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoStockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteCreateInput = {
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    ventas?: VentaCreateNestedManyWithoutClienteInput
    transacciones?: TransaccionCreateNestedManyWithoutClienteInput
    tenant: TenantCreateNestedOneWithoutClientesInput
  }

  export type ClienteUncheckedCreateInput = {
    id?: number
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutClienteInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ventas?: VentaUpdateManyWithoutClienteNestedInput
    transacciones?: TransaccionUpdateManyWithoutClienteNestedInput
    tenant?: TenantUpdateOneRequiredWithoutClientesNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id?: number
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
  }

  export type ClienteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateInput = {
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    variante: VarianteProductoCreateNestedOneWithoutVentasInput
    cliente: ClienteCreateNestedOneWithoutVentasInput
    transaccion?: TransaccionCreateNestedOneWithoutVentasInput
    tenant: TenantCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateInput = {
    id?: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type VentaUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    variante?: VarianteProductoUpdateOneRequiredWithoutVentasNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutVentasNestedInput
    transaccion?: TransaccionUpdateOneWithoutVentasNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManyInput = {
    id?: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type VentaUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type VentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionCreateInput = {
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    total: number
    cliente?: ClienteCreateNestedOneWithoutTransaccionesInput
    usuario?: UserCreateNestedOneWithoutTransaccionesInput
    ventas?: VentaCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockCreateNestedManyWithoutTransaccionInput
    tenant: TenantCreateNestedOneWithoutTransaccionesInput
  }

  export type TransaccionUncheckedCreateInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionUpdateInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneWithoutTransaccionesNestedInput
    usuario?: UserUpdateOneWithoutTransaccionesNestedInput
    ventas?: VentaUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutTransaccionNestedInput
    tenant?: TenantUpdateOneRequiredWithoutTransaccionesNestedInput
  }

  export type TransaccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionCreateManyInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    tenantId: number
  }

  export type TransaccionUpdateManyMutationInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type TransaccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type ClienteListRelationFilter = {
    every?: ClienteWhereInput
    some?: ClienteWhereInput
    none?: ClienteWhereInput
  }

  export type VarianteProductoListRelationFilter = {
    every?: VarianteProductoWhereInput
    some?: VarianteProductoWhereInput
    none?: VarianteProductoWhereInput
  }

  export type TransaccionListRelationFilter = {
    every?: TransaccionWhereInput
    some?: TransaccionWhereInput
    none?: TransaccionWhereInput
  }

  export type VentaListRelationFilter = {
    every?: VentaWhereInput
    some?: VentaWhereInput
    none?: VentaWhereInput
  }

  export type MovimientoStockListRelationFilter = {
    every?: MovimientoStockWhereInput
    some?: MovimientoStockWhereInput
    none?: MovimientoStockWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VarianteProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransaccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MovimientoStockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TenantCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type TenantAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TenantMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type TenantMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    createdAt?: SortOrder
  }

  export type TenantSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type TenantScalarRelationFilter = {
    is?: TenantWhereInput
    isNot?: TenantWhereInput
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProductoCountOrderByAggregateInput = {
    id?: SortOrder
    codigoBarra?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    costo?: SortOrder
    categoria?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    costo?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoBarra?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    costo?: SortOrder
    categoria?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id?: SortOrder
    codigoBarra?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    costo?: SortOrder
    categoria?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    costo?: SortOrder
    tenantId?: SortOrder
    creadoPorId?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type ProductoScalarRelationFilter = {
    is?: ProductoWhereInput
    isNot?: ProductoWhereInput
  }

  export type VarianteProductoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    color?: SortOrder
    talla?: SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
  }

  export type VarianteProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
  }

  export type VarianteProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    color?: SortOrder
    talla?: SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
  }

  export type VarianteProductoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    color?: SortOrder
    talla?: SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
  }

  export type VarianteProductoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stock?: SortOrder
    tenantId?: SortOrder
  }

  export type VarianteProductoScalarRelationFilter = {
    is?: VarianteProductoWhereInput
    isNot?: VarianteProductoWhereInput
  }

  export type TransaccionNullableScalarRelationFilter = {
    is?: TransaccionWhereInput | null
    isNot?: TransaccionWhereInput | null
  }

  export type MovimientoStockCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    tipoMovimiento?: SortOrder
    motivo?: SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type MovimientoStockAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    usuarioId?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type MovimientoStockMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    tipoMovimiento?: SortOrder
    motivo?: SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type MovimientoStockMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    tipoMovimiento?: SortOrder
    motivo?: SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type MovimientoStockSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    varianteId?: SortOrder
    cantidad?: SortOrder
    usuarioId?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type ClienteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ClienteScalarRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type VentaCountOrderByAggregateInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    precioUnitario?: SortOrder
    subtotal?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type VentaAvgOrderByAggregateInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
    subtotal?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type VentaMaxOrderByAggregateInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    precioUnitario?: SortOrder
    subtotal?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type VentaMinOrderByAggregateInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    precioUnitario?: SortOrder
    subtotal?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type VentaSumOrderByAggregateInput = {
    id?: SortOrder
    varianteId?: SortOrder
    clienteId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
    subtotal?: SortOrder
    transaccionId?: SortOrder
    tenantId?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumTipoTransaccionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTransaccion | EnumTipoTransaccionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTransaccionFilter<$PrismaModel> | $Enums.TipoTransaccion
  }

  export type ClienteNullableScalarRelationFilter = {
    is?: ClienteWhereInput | null
    isNot?: ClienteWhereInput | null
  }

  export type TransaccionCountOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    clienteId?: SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrder
    total?: SortOrder
    tenantId?: SortOrder
  }

  export type TransaccionAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    total?: SortOrder
    tenantId?: SortOrder
  }

  export type TransaccionMaxOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    clienteId?: SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrder
    total?: SortOrder
    tenantId?: SortOrder
  }

  export type TransaccionMinOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    clienteId?: SortOrder
    fecha?: SortOrder
    usuarioId?: SortOrder
    total?: SortOrder
    tenantId?: SortOrder
  }

  export type TransaccionSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    total?: SortOrder
    tenantId?: SortOrder
  }

  export type EnumTipoTransaccionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTransaccion | EnumTipoTransaccionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTransaccionWithAggregatesFilter<$PrismaModel> | $Enums.TipoTransaccion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoTransaccionFilter<$PrismaModel>
    _max?: NestedEnumTipoTransaccionFilter<$PrismaModel>
  }

  export type UserCreateNestedManyWithoutTenantInput = {
    create?: XOR<UserCreateWithoutTenantInput, UserUncheckedCreateWithoutTenantInput> | UserCreateWithoutTenantInput[] | UserUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTenantInput | UserCreateOrConnectWithoutTenantInput[]
    createMany?: UserCreateManyTenantInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ProductoCreateNestedManyWithoutTenantInput = {
    create?: XOR<ProductoCreateWithoutTenantInput, ProductoUncheckedCreateWithoutTenantInput> | ProductoCreateWithoutTenantInput[] | ProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutTenantInput | ProductoCreateOrConnectWithoutTenantInput[]
    createMany?: ProductoCreateManyTenantInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ClienteCreateNestedManyWithoutTenantInput = {
    create?: XOR<ClienteCreateWithoutTenantInput, ClienteUncheckedCreateWithoutTenantInput> | ClienteCreateWithoutTenantInput[] | ClienteUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutTenantInput | ClienteCreateOrConnectWithoutTenantInput[]
    createMany?: ClienteCreateManyTenantInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type VarianteProductoCreateNestedManyWithoutTenantInput = {
    create?: XOR<VarianteProductoCreateWithoutTenantInput, VarianteProductoUncheckedCreateWithoutTenantInput> | VarianteProductoCreateWithoutTenantInput[] | VarianteProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutTenantInput | VarianteProductoCreateOrConnectWithoutTenantInput[]
    createMany?: VarianteProductoCreateManyTenantInputEnvelope
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
  }

  export type TransaccionCreateNestedManyWithoutTenantInput = {
    create?: XOR<TransaccionCreateWithoutTenantInput, TransaccionUncheckedCreateWithoutTenantInput> | TransaccionCreateWithoutTenantInput[] | TransaccionUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutTenantInput | TransaccionCreateOrConnectWithoutTenantInput[]
    createMany?: TransaccionCreateManyTenantInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type VentaCreateNestedManyWithoutTenantInput = {
    create?: XOR<VentaCreateWithoutTenantInput, VentaUncheckedCreateWithoutTenantInput> | VentaCreateWithoutTenantInput[] | VentaUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTenantInput | VentaCreateOrConnectWithoutTenantInput[]
    createMany?: VentaCreateManyTenantInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MovimientoStockCreateNestedManyWithoutTenantInput = {
    create?: XOR<MovimientoStockCreateWithoutTenantInput, MovimientoStockUncheckedCreateWithoutTenantInput> | MovimientoStockCreateWithoutTenantInput[] | MovimientoStockUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTenantInput | MovimientoStockCreateOrConnectWithoutTenantInput[]
    createMany?: MovimientoStockCreateManyTenantInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<UserCreateWithoutTenantInput, UserUncheckedCreateWithoutTenantInput> | UserCreateWithoutTenantInput[] | UserUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTenantInput | UserCreateOrConnectWithoutTenantInput[]
    createMany?: UserCreateManyTenantInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<ProductoCreateWithoutTenantInput, ProductoUncheckedCreateWithoutTenantInput> | ProductoCreateWithoutTenantInput[] | ProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutTenantInput | ProductoCreateOrConnectWithoutTenantInput[]
    createMany?: ProductoCreateManyTenantInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<ClienteCreateWithoutTenantInput, ClienteUncheckedCreateWithoutTenantInput> | ClienteCreateWithoutTenantInput[] | ClienteUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutTenantInput | ClienteCreateOrConnectWithoutTenantInput[]
    createMany?: ClienteCreateManyTenantInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type VarianteProductoUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<VarianteProductoCreateWithoutTenantInput, VarianteProductoUncheckedCreateWithoutTenantInput> | VarianteProductoCreateWithoutTenantInput[] | VarianteProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutTenantInput | VarianteProductoCreateOrConnectWithoutTenantInput[]
    createMany?: VarianteProductoCreateManyTenantInputEnvelope
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
  }

  export type TransaccionUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<TransaccionCreateWithoutTenantInput, TransaccionUncheckedCreateWithoutTenantInput> | TransaccionCreateWithoutTenantInput[] | TransaccionUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutTenantInput | TransaccionCreateOrConnectWithoutTenantInput[]
    createMany?: TransaccionCreateManyTenantInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<VentaCreateWithoutTenantInput, VentaUncheckedCreateWithoutTenantInput> | VentaCreateWithoutTenantInput[] | VentaUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTenantInput | VentaCreateOrConnectWithoutTenantInput[]
    createMany?: VentaCreateManyTenantInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MovimientoStockUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<MovimientoStockCreateWithoutTenantInput, MovimientoStockUncheckedCreateWithoutTenantInput> | MovimientoStockCreateWithoutTenantInput[] | MovimientoStockUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTenantInput | MovimientoStockCreateOrConnectWithoutTenantInput[]
    createMany?: MovimientoStockCreateManyTenantInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateManyWithoutTenantNestedInput = {
    create?: XOR<UserCreateWithoutTenantInput, UserUncheckedCreateWithoutTenantInput> | UserCreateWithoutTenantInput[] | UserUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTenantInput | UserCreateOrConnectWithoutTenantInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutTenantInput | UserUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: UserCreateManyTenantInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutTenantInput | UserUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: UserUpdateManyWithWhereWithoutTenantInput | UserUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProductoUpdateManyWithoutTenantNestedInput = {
    create?: XOR<ProductoCreateWithoutTenantInput, ProductoUncheckedCreateWithoutTenantInput> | ProductoCreateWithoutTenantInput[] | ProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutTenantInput | ProductoCreateOrConnectWithoutTenantInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutTenantInput | ProductoUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: ProductoCreateManyTenantInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutTenantInput | ProductoUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutTenantInput | ProductoUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ClienteUpdateManyWithoutTenantNestedInput = {
    create?: XOR<ClienteCreateWithoutTenantInput, ClienteUncheckedCreateWithoutTenantInput> | ClienteCreateWithoutTenantInput[] | ClienteUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutTenantInput | ClienteCreateOrConnectWithoutTenantInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutTenantInput | ClienteUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: ClienteCreateManyTenantInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutTenantInput | ClienteUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutTenantInput | ClienteUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type VarianteProductoUpdateManyWithoutTenantNestedInput = {
    create?: XOR<VarianteProductoCreateWithoutTenantInput, VarianteProductoUncheckedCreateWithoutTenantInput> | VarianteProductoCreateWithoutTenantInput[] | VarianteProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutTenantInput | VarianteProductoCreateOrConnectWithoutTenantInput[]
    upsert?: VarianteProductoUpsertWithWhereUniqueWithoutTenantInput | VarianteProductoUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: VarianteProductoCreateManyTenantInputEnvelope
    set?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    disconnect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    delete?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    update?: VarianteProductoUpdateWithWhereUniqueWithoutTenantInput | VarianteProductoUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: VarianteProductoUpdateManyWithWhereWithoutTenantInput | VarianteProductoUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: VarianteProductoScalarWhereInput | VarianteProductoScalarWhereInput[]
  }

  export type TransaccionUpdateManyWithoutTenantNestedInput = {
    create?: XOR<TransaccionCreateWithoutTenantInput, TransaccionUncheckedCreateWithoutTenantInput> | TransaccionCreateWithoutTenantInput[] | TransaccionUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutTenantInput | TransaccionCreateOrConnectWithoutTenantInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutTenantInput | TransaccionUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: TransaccionCreateManyTenantInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutTenantInput | TransaccionUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutTenantInput | TransaccionUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type VentaUpdateManyWithoutTenantNestedInput = {
    create?: XOR<VentaCreateWithoutTenantInput, VentaUncheckedCreateWithoutTenantInput> | VentaCreateWithoutTenantInput[] | VentaUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTenantInput | VentaCreateOrConnectWithoutTenantInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutTenantInput | VentaUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: VentaCreateManyTenantInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutTenantInput | VentaUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutTenantInput | VentaUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MovimientoStockUpdateManyWithoutTenantNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutTenantInput, MovimientoStockUncheckedCreateWithoutTenantInput> | MovimientoStockCreateWithoutTenantInput[] | MovimientoStockUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTenantInput | MovimientoStockCreateOrConnectWithoutTenantInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutTenantInput | MovimientoStockUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: MovimientoStockCreateManyTenantInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutTenantInput | MovimientoStockUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutTenantInput | MovimientoStockUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<UserCreateWithoutTenantInput, UserUncheckedCreateWithoutTenantInput> | UserCreateWithoutTenantInput[] | UserUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTenantInput | UserCreateOrConnectWithoutTenantInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutTenantInput | UserUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: UserCreateManyTenantInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutTenantInput | UserUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: UserUpdateManyWithWhereWithoutTenantInput | UserUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<ProductoCreateWithoutTenantInput, ProductoUncheckedCreateWithoutTenantInput> | ProductoCreateWithoutTenantInput[] | ProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutTenantInput | ProductoCreateOrConnectWithoutTenantInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutTenantInput | ProductoUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: ProductoCreateManyTenantInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutTenantInput | ProductoUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutTenantInput | ProductoUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<ClienteCreateWithoutTenantInput, ClienteUncheckedCreateWithoutTenantInput> | ClienteCreateWithoutTenantInput[] | ClienteUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutTenantInput | ClienteCreateOrConnectWithoutTenantInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutTenantInput | ClienteUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: ClienteCreateManyTenantInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutTenantInput | ClienteUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutTenantInput | ClienteUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<VarianteProductoCreateWithoutTenantInput, VarianteProductoUncheckedCreateWithoutTenantInput> | VarianteProductoCreateWithoutTenantInput[] | VarianteProductoUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutTenantInput | VarianteProductoCreateOrConnectWithoutTenantInput[]
    upsert?: VarianteProductoUpsertWithWhereUniqueWithoutTenantInput | VarianteProductoUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: VarianteProductoCreateManyTenantInputEnvelope
    set?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    disconnect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    delete?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    update?: VarianteProductoUpdateWithWhereUniqueWithoutTenantInput | VarianteProductoUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: VarianteProductoUpdateManyWithWhereWithoutTenantInput | VarianteProductoUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: VarianteProductoScalarWhereInput | VarianteProductoScalarWhereInput[]
  }

  export type TransaccionUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<TransaccionCreateWithoutTenantInput, TransaccionUncheckedCreateWithoutTenantInput> | TransaccionCreateWithoutTenantInput[] | TransaccionUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutTenantInput | TransaccionCreateOrConnectWithoutTenantInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutTenantInput | TransaccionUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: TransaccionCreateManyTenantInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutTenantInput | TransaccionUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutTenantInput | TransaccionUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<VentaCreateWithoutTenantInput, VentaUncheckedCreateWithoutTenantInput> | VentaCreateWithoutTenantInput[] | VentaUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTenantInput | VentaCreateOrConnectWithoutTenantInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutTenantInput | VentaUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: VentaCreateManyTenantInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutTenantInput | VentaUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutTenantInput | VentaUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutTenantInput, MovimientoStockUncheckedCreateWithoutTenantInput> | MovimientoStockCreateWithoutTenantInput[] | MovimientoStockUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTenantInput | MovimientoStockCreateOrConnectWithoutTenantInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutTenantInput | MovimientoStockUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: MovimientoStockCreateManyTenantInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutTenantInput | MovimientoStockUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutTenantInput | MovimientoStockUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type TenantCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<TenantCreateWithoutUsuariosInput, TenantUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: TenantCreateOrConnectWithoutUsuariosInput
    connect?: TenantWhereUniqueInput
  }

  export type ProductoCreateNestedManyWithoutCreadoPorInput = {
    create?: XOR<ProductoCreateWithoutCreadoPorInput, ProductoUncheckedCreateWithoutCreadoPorInput> | ProductoCreateWithoutCreadoPorInput[] | ProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCreadoPorInput | ProductoCreateOrConnectWithoutCreadoPorInput[]
    createMany?: ProductoCreateManyCreadoPorInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type TransaccionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<TransaccionCreateWithoutUsuarioInput, TransaccionUncheckedCreateWithoutUsuarioInput> | TransaccionCreateWithoutUsuarioInput[] | TransaccionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutUsuarioInput | TransaccionCreateOrConnectWithoutUsuarioInput[]
    createMany?: TransaccionCreateManyUsuarioInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type MovimientoStockCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MovimientoStockCreateWithoutUsuarioInput, MovimientoStockUncheckedCreateWithoutUsuarioInput> | MovimientoStockCreateWithoutUsuarioInput[] | MovimientoStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutUsuarioInput | MovimientoStockCreateOrConnectWithoutUsuarioInput[]
    createMany?: MovimientoStockCreateManyUsuarioInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutCreadoPorInput = {
    create?: XOR<ProductoCreateWithoutCreadoPorInput, ProductoUncheckedCreateWithoutCreadoPorInput> | ProductoCreateWithoutCreadoPorInput[] | ProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCreadoPorInput | ProductoCreateOrConnectWithoutCreadoPorInput[]
    createMany?: ProductoCreateManyCreadoPorInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type TransaccionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<TransaccionCreateWithoutUsuarioInput, TransaccionUncheckedCreateWithoutUsuarioInput> | TransaccionCreateWithoutUsuarioInput[] | TransaccionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutUsuarioInput | TransaccionCreateOrConnectWithoutUsuarioInput[]
    createMany?: TransaccionCreateManyUsuarioInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type MovimientoStockUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MovimientoStockCreateWithoutUsuarioInput, MovimientoStockUncheckedCreateWithoutUsuarioInput> | MovimientoStockCreateWithoutUsuarioInput[] | MovimientoStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutUsuarioInput | MovimientoStockCreateOrConnectWithoutUsuarioInput[]
    createMany?: MovimientoStockCreateManyUsuarioInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type TenantUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<TenantCreateWithoutUsuariosInput, TenantUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: TenantCreateOrConnectWithoutUsuariosInput
    upsert?: TenantUpsertWithoutUsuariosInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutUsuariosInput, TenantUpdateWithoutUsuariosInput>, TenantUncheckedUpdateWithoutUsuariosInput>
  }

  export type ProductoUpdateManyWithoutCreadoPorNestedInput = {
    create?: XOR<ProductoCreateWithoutCreadoPorInput, ProductoUncheckedCreateWithoutCreadoPorInput> | ProductoCreateWithoutCreadoPorInput[] | ProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCreadoPorInput | ProductoCreateOrConnectWithoutCreadoPorInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCreadoPorInput | ProductoUpsertWithWhereUniqueWithoutCreadoPorInput[]
    createMany?: ProductoCreateManyCreadoPorInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCreadoPorInput | ProductoUpdateWithWhereUniqueWithoutCreadoPorInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCreadoPorInput | ProductoUpdateManyWithWhereWithoutCreadoPorInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type TransaccionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<TransaccionCreateWithoutUsuarioInput, TransaccionUncheckedCreateWithoutUsuarioInput> | TransaccionCreateWithoutUsuarioInput[] | TransaccionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutUsuarioInput | TransaccionCreateOrConnectWithoutUsuarioInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutUsuarioInput | TransaccionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: TransaccionCreateManyUsuarioInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutUsuarioInput | TransaccionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutUsuarioInput | TransaccionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type MovimientoStockUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutUsuarioInput, MovimientoStockUncheckedCreateWithoutUsuarioInput> | MovimientoStockCreateWithoutUsuarioInput[] | MovimientoStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutUsuarioInput | MovimientoStockCreateOrConnectWithoutUsuarioInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutUsuarioInput | MovimientoStockUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MovimientoStockCreateManyUsuarioInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutUsuarioInput | MovimientoStockUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutUsuarioInput | MovimientoStockUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutCreadoPorNestedInput = {
    create?: XOR<ProductoCreateWithoutCreadoPorInput, ProductoUncheckedCreateWithoutCreadoPorInput> | ProductoCreateWithoutCreadoPorInput[] | ProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCreadoPorInput | ProductoCreateOrConnectWithoutCreadoPorInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCreadoPorInput | ProductoUpsertWithWhereUniqueWithoutCreadoPorInput[]
    createMany?: ProductoCreateManyCreadoPorInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCreadoPorInput | ProductoUpdateWithWhereUniqueWithoutCreadoPorInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCreadoPorInput | ProductoUpdateManyWithWhereWithoutCreadoPorInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type TransaccionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<TransaccionCreateWithoutUsuarioInput, TransaccionUncheckedCreateWithoutUsuarioInput> | TransaccionCreateWithoutUsuarioInput[] | TransaccionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutUsuarioInput | TransaccionCreateOrConnectWithoutUsuarioInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutUsuarioInput | TransaccionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: TransaccionCreateManyUsuarioInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutUsuarioInput | TransaccionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutUsuarioInput | TransaccionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type MovimientoStockUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutUsuarioInput, MovimientoStockUncheckedCreateWithoutUsuarioInput> | MovimientoStockCreateWithoutUsuarioInput[] | MovimientoStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutUsuarioInput | MovimientoStockCreateOrConnectWithoutUsuarioInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutUsuarioInput | MovimientoStockUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MovimientoStockCreateManyUsuarioInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutUsuarioInput | MovimientoStockUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutUsuarioInput | MovimientoStockUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type TenantCreateNestedOneWithoutProductosInput = {
    create?: XOR<TenantCreateWithoutProductosInput, TenantUncheckedCreateWithoutProductosInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProductosInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProductosInput = {
    create?: XOR<UserCreateWithoutProductosInput, UserUncheckedCreateWithoutProductosInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductosInput
    connect?: UserWhereUniqueInput
  }

  export type VarianteProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<VarianteProductoCreateWithoutProductoInput, VarianteProductoUncheckedCreateWithoutProductoInput> | VarianteProductoCreateWithoutProductoInput[] | VarianteProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutProductoInput | VarianteProductoCreateOrConnectWithoutProductoInput[]
    createMany?: VarianteProductoCreateManyProductoInputEnvelope
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
  }

  export type MovimientoStockCreateNestedManyWithoutProductoInput = {
    create?: XOR<MovimientoStockCreateWithoutProductoInput, MovimientoStockUncheckedCreateWithoutProductoInput> | MovimientoStockCreateWithoutProductoInput[] | MovimientoStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutProductoInput | MovimientoStockCreateOrConnectWithoutProductoInput[]
    createMany?: MovimientoStockCreateManyProductoInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type VarianteProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<VarianteProductoCreateWithoutProductoInput, VarianteProductoUncheckedCreateWithoutProductoInput> | VarianteProductoCreateWithoutProductoInput[] | VarianteProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutProductoInput | VarianteProductoCreateOrConnectWithoutProductoInput[]
    createMany?: VarianteProductoCreateManyProductoInputEnvelope
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
  }

  export type MovimientoStockUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<MovimientoStockCreateWithoutProductoInput, MovimientoStockUncheckedCreateWithoutProductoInput> | MovimientoStockCreateWithoutProductoInput[] | MovimientoStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutProductoInput | MovimientoStockCreateOrConnectWithoutProductoInput[]
    createMany?: MovimientoStockCreateManyProductoInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TenantUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<TenantCreateWithoutProductosInput, TenantUncheckedCreateWithoutProductosInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProductosInput
    upsert?: TenantUpsertWithoutProductosInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutProductosInput, TenantUpdateWithoutProductosInput>, TenantUncheckedUpdateWithoutProductosInput>
  }

  export type UserUpdateOneWithoutProductosNestedInput = {
    create?: XOR<UserCreateWithoutProductosInput, UserUncheckedCreateWithoutProductosInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductosInput
    upsert?: UserUpsertWithoutProductosInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductosInput, UserUpdateWithoutProductosInput>, UserUncheckedUpdateWithoutProductosInput>
  }

  export type VarianteProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<VarianteProductoCreateWithoutProductoInput, VarianteProductoUncheckedCreateWithoutProductoInput> | VarianteProductoCreateWithoutProductoInput[] | VarianteProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutProductoInput | VarianteProductoCreateOrConnectWithoutProductoInput[]
    upsert?: VarianteProductoUpsertWithWhereUniqueWithoutProductoInput | VarianteProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: VarianteProductoCreateManyProductoInputEnvelope
    set?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    disconnect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    delete?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    update?: VarianteProductoUpdateWithWhereUniqueWithoutProductoInput | VarianteProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: VarianteProductoUpdateManyWithWhereWithoutProductoInput | VarianteProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: VarianteProductoScalarWhereInput | VarianteProductoScalarWhereInput[]
  }

  export type MovimientoStockUpdateManyWithoutProductoNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutProductoInput, MovimientoStockUncheckedCreateWithoutProductoInput> | MovimientoStockCreateWithoutProductoInput[] | MovimientoStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutProductoInput | MovimientoStockCreateOrConnectWithoutProductoInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutProductoInput | MovimientoStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: MovimientoStockCreateManyProductoInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutProductoInput | MovimientoStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutProductoInput | MovimientoStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type VarianteProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<VarianteProductoCreateWithoutProductoInput, VarianteProductoUncheckedCreateWithoutProductoInput> | VarianteProductoCreateWithoutProductoInput[] | VarianteProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutProductoInput | VarianteProductoCreateOrConnectWithoutProductoInput[]
    upsert?: VarianteProductoUpsertWithWhereUniqueWithoutProductoInput | VarianteProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: VarianteProductoCreateManyProductoInputEnvelope
    set?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    disconnect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    delete?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    connect?: VarianteProductoWhereUniqueInput | VarianteProductoWhereUniqueInput[]
    update?: VarianteProductoUpdateWithWhereUniqueWithoutProductoInput | VarianteProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: VarianteProductoUpdateManyWithWhereWithoutProductoInput | VarianteProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: VarianteProductoScalarWhereInput | VarianteProductoScalarWhereInput[]
  }

  export type MovimientoStockUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutProductoInput, MovimientoStockUncheckedCreateWithoutProductoInput> | MovimientoStockCreateWithoutProductoInput[] | MovimientoStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutProductoInput | MovimientoStockCreateOrConnectWithoutProductoInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutProductoInput | MovimientoStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: MovimientoStockCreateManyProductoInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutProductoInput | MovimientoStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutProductoInput | MovimientoStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type ProductoCreateNestedOneWithoutVariantesInput = {
    create?: XOR<ProductoCreateWithoutVariantesInput, ProductoUncheckedCreateWithoutVariantesInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutVariantesInput
    connect?: ProductoWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutVariantesProductoInput = {
    create?: XOR<TenantCreateWithoutVariantesProductoInput, TenantUncheckedCreateWithoutVariantesProductoInput>
    connectOrCreate?: TenantCreateOrConnectWithoutVariantesProductoInput
    connect?: TenantWhereUniqueInput
  }

  export type VentaCreateNestedManyWithoutVarianteInput = {
    create?: XOR<VentaCreateWithoutVarianteInput, VentaUncheckedCreateWithoutVarianteInput> | VentaCreateWithoutVarianteInput[] | VentaUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutVarianteInput | VentaCreateOrConnectWithoutVarianteInput[]
    createMany?: VentaCreateManyVarianteInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MovimientoStockCreateNestedManyWithoutVarianteInput = {
    create?: XOR<MovimientoStockCreateWithoutVarianteInput, MovimientoStockUncheckedCreateWithoutVarianteInput> | MovimientoStockCreateWithoutVarianteInput[] | MovimientoStockUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutVarianteInput | MovimientoStockCreateOrConnectWithoutVarianteInput[]
    createMany?: MovimientoStockCreateManyVarianteInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutVarianteInput = {
    create?: XOR<VentaCreateWithoutVarianteInput, VentaUncheckedCreateWithoutVarianteInput> | VentaCreateWithoutVarianteInput[] | VentaUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutVarianteInput | VentaCreateOrConnectWithoutVarianteInput[]
    createMany?: VentaCreateManyVarianteInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MovimientoStockUncheckedCreateNestedManyWithoutVarianteInput = {
    create?: XOR<MovimientoStockCreateWithoutVarianteInput, MovimientoStockUncheckedCreateWithoutVarianteInput> | MovimientoStockCreateWithoutVarianteInput[] | MovimientoStockUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutVarianteInput | MovimientoStockCreateOrConnectWithoutVarianteInput[]
    createMany?: MovimientoStockCreateManyVarianteInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type ProductoUpdateOneRequiredWithoutVariantesNestedInput = {
    create?: XOR<ProductoCreateWithoutVariantesInput, ProductoUncheckedCreateWithoutVariantesInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutVariantesInput
    upsert?: ProductoUpsertWithoutVariantesInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutVariantesInput, ProductoUpdateWithoutVariantesInput>, ProductoUncheckedUpdateWithoutVariantesInput>
  }

  export type TenantUpdateOneRequiredWithoutVariantesProductoNestedInput = {
    create?: XOR<TenantCreateWithoutVariantesProductoInput, TenantUncheckedCreateWithoutVariantesProductoInput>
    connectOrCreate?: TenantCreateOrConnectWithoutVariantesProductoInput
    upsert?: TenantUpsertWithoutVariantesProductoInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutVariantesProductoInput, TenantUpdateWithoutVariantesProductoInput>, TenantUncheckedUpdateWithoutVariantesProductoInput>
  }

  export type VentaUpdateManyWithoutVarianteNestedInput = {
    create?: XOR<VentaCreateWithoutVarianteInput, VentaUncheckedCreateWithoutVarianteInput> | VentaCreateWithoutVarianteInput[] | VentaUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutVarianteInput | VentaCreateOrConnectWithoutVarianteInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutVarianteInput | VentaUpsertWithWhereUniqueWithoutVarianteInput[]
    createMany?: VentaCreateManyVarianteInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutVarianteInput | VentaUpdateWithWhereUniqueWithoutVarianteInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutVarianteInput | VentaUpdateManyWithWhereWithoutVarianteInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MovimientoStockUpdateManyWithoutVarianteNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutVarianteInput, MovimientoStockUncheckedCreateWithoutVarianteInput> | MovimientoStockCreateWithoutVarianteInput[] | MovimientoStockUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutVarianteInput | MovimientoStockCreateOrConnectWithoutVarianteInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutVarianteInput | MovimientoStockUpsertWithWhereUniqueWithoutVarianteInput[]
    createMany?: MovimientoStockCreateManyVarianteInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutVarianteInput | MovimientoStockUpdateWithWhereUniqueWithoutVarianteInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutVarianteInput | MovimientoStockUpdateManyWithWhereWithoutVarianteInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutVarianteNestedInput = {
    create?: XOR<VentaCreateWithoutVarianteInput, VentaUncheckedCreateWithoutVarianteInput> | VentaCreateWithoutVarianteInput[] | VentaUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutVarianteInput | VentaCreateOrConnectWithoutVarianteInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutVarianteInput | VentaUpsertWithWhereUniqueWithoutVarianteInput[]
    createMany?: VentaCreateManyVarianteInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutVarianteInput | VentaUpdateWithWhereUniqueWithoutVarianteInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutVarianteInput | VentaUpdateManyWithWhereWithoutVarianteInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MovimientoStockUncheckedUpdateManyWithoutVarianteNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutVarianteInput, MovimientoStockUncheckedCreateWithoutVarianteInput> | MovimientoStockCreateWithoutVarianteInput[] | MovimientoStockUncheckedCreateWithoutVarianteInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutVarianteInput | MovimientoStockCreateOrConnectWithoutVarianteInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutVarianteInput | MovimientoStockUpsertWithWhereUniqueWithoutVarianteInput[]
    createMany?: MovimientoStockCreateManyVarianteInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutVarianteInput | MovimientoStockUpdateWithWhereUniqueWithoutVarianteInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutVarianteInput | MovimientoStockUpdateManyWithWhereWithoutVarianteInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type ProductoCreateNestedOneWithoutMovimientosInput = {
    create?: XOR<ProductoCreateWithoutMovimientosInput, ProductoUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutMovimientosInput
    connect?: ProductoWhereUniqueInput
  }

  export type VarianteProductoCreateNestedOneWithoutMovimientosInput = {
    create?: XOR<VarianteProductoCreateWithoutMovimientosInput, VarianteProductoUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutMovimientosInput
    connect?: VarianteProductoWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMovimientosInput = {
    create?: XOR<UserCreateWithoutMovimientosInput, UserUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: UserCreateOrConnectWithoutMovimientosInput
    connect?: UserWhereUniqueInput
  }

  export type TransaccionCreateNestedOneWithoutMovimientosInput = {
    create?: XOR<TransaccionCreateWithoutMovimientosInput, TransaccionUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutMovimientosInput
    connect?: TransaccionWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutMovimientosStockInput = {
    create?: XOR<TenantCreateWithoutMovimientosStockInput, TenantUncheckedCreateWithoutMovimientosStockInput>
    connectOrCreate?: TenantCreateOrConnectWithoutMovimientosStockInput
    connect?: TenantWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutMovimientosNestedInput = {
    create?: XOR<ProductoCreateWithoutMovimientosInput, ProductoUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutMovimientosInput
    upsert?: ProductoUpsertWithoutMovimientosInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutMovimientosInput, ProductoUpdateWithoutMovimientosInput>, ProductoUncheckedUpdateWithoutMovimientosInput>
  }

  export type VarianteProductoUpdateOneRequiredWithoutMovimientosNestedInput = {
    create?: XOR<VarianteProductoCreateWithoutMovimientosInput, VarianteProductoUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutMovimientosInput
    upsert?: VarianteProductoUpsertWithoutMovimientosInput
    connect?: VarianteProductoWhereUniqueInput
    update?: XOR<XOR<VarianteProductoUpdateToOneWithWhereWithoutMovimientosInput, VarianteProductoUpdateWithoutMovimientosInput>, VarianteProductoUncheckedUpdateWithoutMovimientosInput>
  }

  export type UserUpdateOneWithoutMovimientosNestedInput = {
    create?: XOR<UserCreateWithoutMovimientosInput, UserUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: UserCreateOrConnectWithoutMovimientosInput
    upsert?: UserUpsertWithoutMovimientosInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMovimientosInput, UserUpdateWithoutMovimientosInput>, UserUncheckedUpdateWithoutMovimientosInput>
  }

  export type TransaccionUpdateOneWithoutMovimientosNestedInput = {
    create?: XOR<TransaccionCreateWithoutMovimientosInput, TransaccionUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutMovimientosInput
    upsert?: TransaccionUpsertWithoutMovimientosInput
    disconnect?: TransaccionWhereInput | boolean
    delete?: TransaccionWhereInput | boolean
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutMovimientosInput, TransaccionUpdateWithoutMovimientosInput>, TransaccionUncheckedUpdateWithoutMovimientosInput>
  }

  export type TenantUpdateOneRequiredWithoutMovimientosStockNestedInput = {
    create?: XOR<TenantCreateWithoutMovimientosStockInput, TenantUncheckedCreateWithoutMovimientosStockInput>
    connectOrCreate?: TenantCreateOrConnectWithoutMovimientosStockInput
    upsert?: TenantUpsertWithoutMovimientosStockInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutMovimientosStockInput, TenantUpdateWithoutMovimientosStockInput>, TenantUncheckedUpdateWithoutMovimientosStockInput>
  }

  export type VentaCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type TransaccionCreateNestedManyWithoutClienteInput = {
    create?: XOR<TransaccionCreateWithoutClienteInput, TransaccionUncheckedCreateWithoutClienteInput> | TransaccionCreateWithoutClienteInput[] | TransaccionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutClienteInput | TransaccionCreateOrConnectWithoutClienteInput[]
    createMany?: TransaccionCreateManyClienteInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type TenantCreateNestedOneWithoutClientesInput = {
    create?: XOR<TenantCreateWithoutClientesInput, TenantUncheckedCreateWithoutClientesInput>
    connectOrCreate?: TenantCreateOrConnectWithoutClientesInput
    connect?: TenantWhereUniqueInput
  }

  export type VentaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type TransaccionUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<TransaccionCreateWithoutClienteInput, TransaccionUncheckedCreateWithoutClienteInput> | TransaccionCreateWithoutClienteInput[] | TransaccionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutClienteInput | TransaccionCreateOrConnectWithoutClienteInput[]
    createMany?: TransaccionCreateManyClienteInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type VentaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutClienteInput | VentaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutClienteInput | VentaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutClienteInput | VentaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type TransaccionUpdateManyWithoutClienteNestedInput = {
    create?: XOR<TransaccionCreateWithoutClienteInput, TransaccionUncheckedCreateWithoutClienteInput> | TransaccionCreateWithoutClienteInput[] | TransaccionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutClienteInput | TransaccionCreateOrConnectWithoutClienteInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutClienteInput | TransaccionUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: TransaccionCreateManyClienteInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutClienteInput | TransaccionUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutClienteInput | TransaccionUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type TenantUpdateOneRequiredWithoutClientesNestedInput = {
    create?: XOR<TenantCreateWithoutClientesInput, TenantUncheckedCreateWithoutClientesInput>
    connectOrCreate?: TenantCreateOrConnectWithoutClientesInput
    upsert?: TenantUpsertWithoutClientesInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutClientesInput, TenantUpdateWithoutClientesInput>, TenantUncheckedUpdateWithoutClientesInput>
  }

  export type VentaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutClienteInput | VentaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutClienteInput | VentaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutClienteInput | VentaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type TransaccionUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<TransaccionCreateWithoutClienteInput, TransaccionUncheckedCreateWithoutClienteInput> | TransaccionCreateWithoutClienteInput[] | TransaccionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutClienteInput | TransaccionCreateOrConnectWithoutClienteInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutClienteInput | TransaccionUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: TransaccionCreateManyClienteInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutClienteInput | TransaccionUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutClienteInput | TransaccionUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type VarianteProductoCreateNestedOneWithoutVentasInput = {
    create?: XOR<VarianteProductoCreateWithoutVentasInput, VarianteProductoUncheckedCreateWithoutVentasInput>
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutVentasInput
    connect?: VarianteProductoWhereUniqueInput
  }

  export type ClienteCreateNestedOneWithoutVentasInput = {
    create?: XOR<ClienteCreateWithoutVentasInput, ClienteUncheckedCreateWithoutVentasInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutVentasInput
    connect?: ClienteWhereUniqueInput
  }

  export type TransaccionCreateNestedOneWithoutVentasInput = {
    create?: XOR<TransaccionCreateWithoutVentasInput, TransaccionUncheckedCreateWithoutVentasInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutVentasInput
    connect?: TransaccionWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutVentasInput = {
    create?: XOR<TenantCreateWithoutVentasInput, TenantUncheckedCreateWithoutVentasInput>
    connectOrCreate?: TenantCreateOrConnectWithoutVentasInput
    connect?: TenantWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type VarianteProductoUpdateOneRequiredWithoutVentasNestedInput = {
    create?: XOR<VarianteProductoCreateWithoutVentasInput, VarianteProductoUncheckedCreateWithoutVentasInput>
    connectOrCreate?: VarianteProductoCreateOrConnectWithoutVentasInput
    upsert?: VarianteProductoUpsertWithoutVentasInput
    connect?: VarianteProductoWhereUniqueInput
    update?: XOR<XOR<VarianteProductoUpdateToOneWithWhereWithoutVentasInput, VarianteProductoUpdateWithoutVentasInput>, VarianteProductoUncheckedUpdateWithoutVentasInput>
  }

  export type ClienteUpdateOneRequiredWithoutVentasNestedInput = {
    create?: XOR<ClienteCreateWithoutVentasInput, ClienteUncheckedCreateWithoutVentasInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutVentasInput
    upsert?: ClienteUpsertWithoutVentasInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutVentasInput, ClienteUpdateWithoutVentasInput>, ClienteUncheckedUpdateWithoutVentasInput>
  }

  export type TransaccionUpdateOneWithoutVentasNestedInput = {
    create?: XOR<TransaccionCreateWithoutVentasInput, TransaccionUncheckedCreateWithoutVentasInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutVentasInput
    upsert?: TransaccionUpsertWithoutVentasInput
    disconnect?: TransaccionWhereInput | boolean
    delete?: TransaccionWhereInput | boolean
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutVentasInput, TransaccionUpdateWithoutVentasInput>, TransaccionUncheckedUpdateWithoutVentasInput>
  }

  export type TenantUpdateOneRequiredWithoutVentasNestedInput = {
    create?: XOR<TenantCreateWithoutVentasInput, TenantUncheckedCreateWithoutVentasInput>
    connectOrCreate?: TenantCreateOrConnectWithoutVentasInput
    upsert?: TenantUpsertWithoutVentasInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutVentasInput, TenantUpdateWithoutVentasInput>, TenantUncheckedUpdateWithoutVentasInput>
  }

  export type ClienteCreateNestedOneWithoutTransaccionesInput = {
    create?: XOR<ClienteCreateWithoutTransaccionesInput, ClienteUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutTransaccionesInput
    connect?: ClienteWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTransaccionesInput = {
    create?: XOR<UserCreateWithoutTransaccionesInput, UserUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransaccionesInput
    connect?: UserWhereUniqueInput
  }

  export type VentaCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput> | VentaCreateWithoutTransaccionInput[] | VentaUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput | VentaCreateOrConnectWithoutTransaccionInput[]
    createMany?: VentaCreateManyTransaccionInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MovimientoStockCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<MovimientoStockCreateWithoutTransaccionInput, MovimientoStockUncheckedCreateWithoutTransaccionInput> | MovimientoStockCreateWithoutTransaccionInput[] | MovimientoStockUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTransaccionInput | MovimientoStockCreateOrConnectWithoutTransaccionInput[]
    createMany?: MovimientoStockCreateManyTransaccionInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type TenantCreateNestedOneWithoutTransaccionesInput = {
    create?: XOR<TenantCreateWithoutTransaccionesInput, TenantUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTransaccionesInput
    connect?: TenantWhereUniqueInput
  }

  export type VentaUncheckedCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput> | VentaCreateWithoutTransaccionInput[] | VentaUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput | VentaCreateOrConnectWithoutTransaccionInput[]
    createMany?: VentaCreateManyTransaccionInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MovimientoStockUncheckedCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<MovimientoStockCreateWithoutTransaccionInput, MovimientoStockUncheckedCreateWithoutTransaccionInput> | MovimientoStockCreateWithoutTransaccionInput[] | MovimientoStockUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTransaccionInput | MovimientoStockCreateOrConnectWithoutTransaccionInput[]
    createMany?: MovimientoStockCreateManyTransaccionInputEnvelope
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
  }

  export type EnumTipoTransaccionFieldUpdateOperationsInput = {
    set?: $Enums.TipoTransaccion
  }

  export type ClienteUpdateOneWithoutTransaccionesNestedInput = {
    create?: XOR<ClienteCreateWithoutTransaccionesInput, ClienteUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutTransaccionesInput
    upsert?: ClienteUpsertWithoutTransaccionesInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutTransaccionesInput, ClienteUpdateWithoutTransaccionesInput>, ClienteUncheckedUpdateWithoutTransaccionesInput>
  }

  export type UserUpdateOneWithoutTransaccionesNestedInput = {
    create?: XOR<UserCreateWithoutTransaccionesInput, UserUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransaccionesInput
    upsert?: UserUpsertWithoutTransaccionesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTransaccionesInput, UserUpdateWithoutTransaccionesInput>, UserUncheckedUpdateWithoutTransaccionesInput>
  }

  export type VentaUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput> | VentaCreateWithoutTransaccionInput[] | VentaUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput | VentaCreateOrConnectWithoutTransaccionInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutTransaccionInput | VentaUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: VentaCreateManyTransaccionInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutTransaccionInput | VentaUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutTransaccionInput | VentaUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MovimientoStockUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutTransaccionInput, MovimientoStockUncheckedCreateWithoutTransaccionInput> | MovimientoStockCreateWithoutTransaccionInput[] | MovimientoStockUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTransaccionInput | MovimientoStockCreateOrConnectWithoutTransaccionInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutTransaccionInput | MovimientoStockUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: MovimientoStockCreateManyTransaccionInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutTransaccionInput | MovimientoStockUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutTransaccionInput | MovimientoStockUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type TenantUpdateOneRequiredWithoutTransaccionesNestedInput = {
    create?: XOR<TenantCreateWithoutTransaccionesInput, TenantUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTransaccionesInput
    upsert?: TenantUpsertWithoutTransaccionesInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutTransaccionesInput, TenantUpdateWithoutTransaccionesInput>, TenantUncheckedUpdateWithoutTransaccionesInput>
  }

  export type VentaUncheckedUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput> | VentaCreateWithoutTransaccionInput[] | VentaUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput | VentaCreateOrConnectWithoutTransaccionInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutTransaccionInput | VentaUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: VentaCreateManyTransaccionInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutTransaccionInput | VentaUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutTransaccionInput | VentaUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MovimientoStockUncheckedUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<MovimientoStockCreateWithoutTransaccionInput, MovimientoStockUncheckedCreateWithoutTransaccionInput> | MovimientoStockCreateWithoutTransaccionInput[] | MovimientoStockUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: MovimientoStockCreateOrConnectWithoutTransaccionInput | MovimientoStockCreateOrConnectWithoutTransaccionInput[]
    upsert?: MovimientoStockUpsertWithWhereUniqueWithoutTransaccionInput | MovimientoStockUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: MovimientoStockCreateManyTransaccionInputEnvelope
    set?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    disconnect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    delete?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    connect?: MovimientoStockWhereUniqueInput | MovimientoStockWhereUniqueInput[]
    update?: MovimientoStockUpdateWithWhereUniqueWithoutTransaccionInput | MovimientoStockUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: MovimientoStockUpdateManyWithWhereWithoutTransaccionInput | MovimientoStockUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumTipoTransaccionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTransaccion | EnumTipoTransaccionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTransaccionFilter<$PrismaModel> | $Enums.TipoTransaccion
  }

  export type NestedEnumTipoTransaccionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTransaccion | EnumTipoTransaccionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTransaccion[] | ListEnumTipoTransaccionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTransaccionWithAggregatesFilter<$PrismaModel> | $Enums.TipoTransaccion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoTransaccionFilter<$PrismaModel>
    _max?: NestedEnumTipoTransaccionFilter<$PrismaModel>
  }

  export type UserCreateWithoutTenantInput = {
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    productos?: ProductoCreateNestedManyWithoutCreadoPorInput
    transacciones?: TransaccionCreateNestedManyWithoutUsuarioInput
    movimientos?: MovimientoStockCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutTenantInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    productos?: ProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutUsuarioInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutTenantInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTenantInput, UserUncheckedCreateWithoutTenantInput>
  }

  export type UserCreateManyTenantInputEnvelope = {
    data: UserCreateManyTenantInput | UserCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type ProductoCreateWithoutTenantInput = {
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    creadoPor?: UserCreateNestedOneWithoutProductosInput
    variantes?: VarianteProductoCreateNestedManyWithoutProductoInput
    movimientos?: MovimientoStockCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutTenantInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    creadoPorId?: number | null
    variantes?: VarianteProductoUncheckedCreateNestedManyWithoutProductoInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutTenantInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutTenantInput, ProductoUncheckedCreateWithoutTenantInput>
  }

  export type ProductoCreateManyTenantInputEnvelope = {
    data: ProductoCreateManyTenantInput | ProductoCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type ClienteCreateWithoutTenantInput = {
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    ventas?: VentaCreateNestedManyWithoutClienteInput
    transacciones?: TransaccionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutTenantInput = {
    id?: number
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    ventas?: VentaUncheckedCreateNestedManyWithoutClienteInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutTenantInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutTenantInput, ClienteUncheckedCreateWithoutTenantInput>
  }

  export type ClienteCreateManyTenantInputEnvelope = {
    data: ClienteCreateManyTenantInput | ClienteCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type VarianteProductoCreateWithoutTenantInput = {
    color?: string | null
    talla?: string | null
    stock?: number
    producto: ProductoCreateNestedOneWithoutVariantesInput
    ventas?: VentaCreateNestedManyWithoutVarianteInput
    movimientos?: MovimientoStockCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoUncheckedCreateWithoutTenantInput = {
    id?: number
    productoId: number
    color?: string | null
    talla?: string | null
    stock?: number
    ventas?: VentaUncheckedCreateNestedManyWithoutVarianteInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoCreateOrConnectWithoutTenantInput = {
    where: VarianteProductoWhereUniqueInput
    create: XOR<VarianteProductoCreateWithoutTenantInput, VarianteProductoUncheckedCreateWithoutTenantInput>
  }

  export type VarianteProductoCreateManyTenantInputEnvelope = {
    data: VarianteProductoCreateManyTenantInput | VarianteProductoCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionCreateWithoutTenantInput = {
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    total: number
    cliente?: ClienteCreateNestedOneWithoutTransaccionesInput
    usuario?: UserCreateNestedOneWithoutTransaccionesInput
    ventas?: VentaCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutTenantInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    ventas?: VentaUncheckedCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutTenantInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutTenantInput, TransaccionUncheckedCreateWithoutTenantInput>
  }

  export type TransaccionCreateManyTenantInputEnvelope = {
    data: TransaccionCreateManyTenantInput | TransaccionCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type VentaCreateWithoutTenantInput = {
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    variante: VarianteProductoCreateNestedOneWithoutVentasInput
    cliente: ClienteCreateNestedOneWithoutVentasInput
    transaccion?: TransaccionCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateWithoutTenantInput = {
    id?: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
  }

  export type VentaCreateOrConnectWithoutTenantInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutTenantInput, VentaUncheckedCreateWithoutTenantInput>
  }

  export type VentaCreateManyTenantInputEnvelope = {
    data: VentaCreateManyTenantInput | VentaCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type MovimientoStockCreateWithoutTenantInput = {
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    producto: ProductoCreateNestedOneWithoutMovimientosInput
    variante: VarianteProductoCreateNestedOneWithoutMovimientosInput
    usuario?: UserCreateNestedOneWithoutMovimientosInput
    transaccion?: TransaccionCreateNestedOneWithoutMovimientosInput
  }

  export type MovimientoStockUncheckedCreateWithoutTenantInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
  }

  export type MovimientoStockCreateOrConnectWithoutTenantInput = {
    where: MovimientoStockWhereUniqueInput
    create: XOR<MovimientoStockCreateWithoutTenantInput, MovimientoStockUncheckedCreateWithoutTenantInput>
  }

  export type MovimientoStockCreateManyTenantInputEnvelope = {
    data: MovimientoStockCreateManyTenantInput | MovimientoStockCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutTenantInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutTenantInput, UserUncheckedUpdateWithoutTenantInput>
    create: XOR<UserCreateWithoutTenantInput, UserUncheckedCreateWithoutTenantInput>
  }

  export type UserUpdateWithWhereUniqueWithoutTenantInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutTenantInput, UserUncheckedUpdateWithoutTenantInput>
  }

  export type UserUpdateManyWithWhereWithoutTenantInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutTenantInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    tenantId?: IntFilter<"User"> | number
  }

  export type ProductoUpsertWithWhereUniqueWithoutTenantInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutTenantInput, ProductoUncheckedUpdateWithoutTenantInput>
    create: XOR<ProductoCreateWithoutTenantInput, ProductoUncheckedCreateWithoutTenantInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutTenantInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutTenantInput, ProductoUncheckedUpdateWithoutTenantInput>
  }

  export type ProductoUpdateManyWithWhereWithoutTenantInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutTenantInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id?: IntFilter<"Producto"> | number
    codigoBarra?: StringNullableFilter<"Producto"> | string | null
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: FloatFilter<"Producto"> | number
    costo?: FloatFilter<"Producto"> | number
    categoria?: StringNullableFilter<"Producto"> | string | null
    fechaCreacion?: DateTimeFilter<"Producto"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Producto"> | Date | string
    tenantId?: IntFilter<"Producto"> | number
    creadoPorId?: IntNullableFilter<"Producto"> | number | null
  }

  export type ClienteUpsertWithWhereUniqueWithoutTenantInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutTenantInput, ClienteUncheckedUpdateWithoutTenantInput>
    create: XOR<ClienteCreateWithoutTenantInput, ClienteUncheckedCreateWithoutTenantInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutTenantInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutTenantInput, ClienteUncheckedUpdateWithoutTenantInput>
  }

  export type ClienteUpdateManyWithWhereWithoutTenantInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutTenantInput>
  }

  export type ClienteScalarWhereInput = {
    AND?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    OR?: ClienteScalarWhereInput[]
    NOT?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    id?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    email?: StringNullableFilter<"Cliente"> | string | null
    createdAt?: DateTimeFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeFilter<"Cliente"> | Date | string
    tenantId?: IntFilter<"Cliente"> | number
  }

  export type VarianteProductoUpsertWithWhereUniqueWithoutTenantInput = {
    where: VarianteProductoWhereUniqueInput
    update: XOR<VarianteProductoUpdateWithoutTenantInput, VarianteProductoUncheckedUpdateWithoutTenantInput>
    create: XOR<VarianteProductoCreateWithoutTenantInput, VarianteProductoUncheckedCreateWithoutTenantInput>
  }

  export type VarianteProductoUpdateWithWhereUniqueWithoutTenantInput = {
    where: VarianteProductoWhereUniqueInput
    data: XOR<VarianteProductoUpdateWithoutTenantInput, VarianteProductoUncheckedUpdateWithoutTenantInput>
  }

  export type VarianteProductoUpdateManyWithWhereWithoutTenantInput = {
    where: VarianteProductoScalarWhereInput
    data: XOR<VarianteProductoUpdateManyMutationInput, VarianteProductoUncheckedUpdateManyWithoutTenantInput>
  }

  export type VarianteProductoScalarWhereInput = {
    AND?: VarianteProductoScalarWhereInput | VarianteProductoScalarWhereInput[]
    OR?: VarianteProductoScalarWhereInput[]
    NOT?: VarianteProductoScalarWhereInput | VarianteProductoScalarWhereInput[]
    id?: IntFilter<"VarianteProducto"> | number
    productoId?: IntFilter<"VarianteProducto"> | number
    color?: StringNullableFilter<"VarianteProducto"> | string | null
    talla?: StringNullableFilter<"VarianteProducto"> | string | null
    stock?: IntFilter<"VarianteProducto"> | number
    tenantId?: IntFilter<"VarianteProducto"> | number
  }

  export type TransaccionUpsertWithWhereUniqueWithoutTenantInput = {
    where: TransaccionWhereUniqueInput
    update: XOR<TransaccionUpdateWithoutTenantInput, TransaccionUncheckedUpdateWithoutTenantInput>
    create: XOR<TransaccionCreateWithoutTenantInput, TransaccionUncheckedCreateWithoutTenantInput>
  }

  export type TransaccionUpdateWithWhereUniqueWithoutTenantInput = {
    where: TransaccionWhereUniqueInput
    data: XOR<TransaccionUpdateWithoutTenantInput, TransaccionUncheckedUpdateWithoutTenantInput>
  }

  export type TransaccionUpdateManyWithWhereWithoutTenantInput = {
    where: TransaccionScalarWhereInput
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyWithoutTenantInput>
  }

  export type TransaccionScalarWhereInput = {
    AND?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
    OR?: TransaccionScalarWhereInput[]
    NOT?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
    id?: IntFilter<"Transaccion"> | number
    tipo?: EnumTipoTransaccionFilter<"Transaccion"> | $Enums.TipoTransaccion
    clienteId?: IntNullableFilter<"Transaccion"> | number | null
    fecha?: DateTimeFilter<"Transaccion"> | Date | string
    usuarioId?: IntNullableFilter<"Transaccion"> | number | null
    total?: FloatFilter<"Transaccion"> | number
    tenantId?: IntFilter<"Transaccion"> | number
  }

  export type VentaUpsertWithWhereUniqueWithoutTenantInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutTenantInput, VentaUncheckedUpdateWithoutTenantInput>
    create: XOR<VentaCreateWithoutTenantInput, VentaUncheckedCreateWithoutTenantInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutTenantInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutTenantInput, VentaUncheckedUpdateWithoutTenantInput>
  }

  export type VentaUpdateManyWithWhereWithoutTenantInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutTenantInput>
  }

  export type VentaScalarWhereInput = {
    AND?: VentaScalarWhereInput | VentaScalarWhereInput[]
    OR?: VentaScalarWhereInput[]
    NOT?: VentaScalarWhereInput | VentaScalarWhereInput[]
    id?: IntFilter<"Venta"> | number
    varianteId?: IntFilter<"Venta"> | number
    clienteId?: IntFilter<"Venta"> | number
    cantidad?: IntFilter<"Venta"> | number
    fecha?: DateTimeFilter<"Venta"> | Date | string
    precioUnitario?: FloatNullableFilter<"Venta"> | number | null
    subtotal?: FloatNullableFilter<"Venta"> | number | null
    transaccionId?: IntNullableFilter<"Venta"> | number | null
    tenantId?: IntFilter<"Venta"> | number
  }

  export type MovimientoStockUpsertWithWhereUniqueWithoutTenantInput = {
    where: MovimientoStockWhereUniqueInput
    update: XOR<MovimientoStockUpdateWithoutTenantInput, MovimientoStockUncheckedUpdateWithoutTenantInput>
    create: XOR<MovimientoStockCreateWithoutTenantInput, MovimientoStockUncheckedCreateWithoutTenantInput>
  }

  export type MovimientoStockUpdateWithWhereUniqueWithoutTenantInput = {
    where: MovimientoStockWhereUniqueInput
    data: XOR<MovimientoStockUpdateWithoutTenantInput, MovimientoStockUncheckedUpdateWithoutTenantInput>
  }

  export type MovimientoStockUpdateManyWithWhereWithoutTenantInput = {
    where: MovimientoStockScalarWhereInput
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyWithoutTenantInput>
  }

  export type MovimientoStockScalarWhereInput = {
    AND?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
    OR?: MovimientoStockScalarWhereInput[]
    NOT?: MovimientoStockScalarWhereInput | MovimientoStockScalarWhereInput[]
    id?: IntFilter<"MovimientoStock"> | number
    productoId?: IntFilter<"MovimientoStock"> | number
    varianteId?: IntFilter<"MovimientoStock"> | number
    cantidad?: IntFilter<"MovimientoStock"> | number
    tipoMovimiento?: StringFilter<"MovimientoStock"> | string
    motivo?: StringNullableFilter<"MovimientoStock"> | string | null
    fecha?: DateTimeFilter<"MovimientoStock"> | Date | string
    usuarioId?: IntNullableFilter<"MovimientoStock"> | number | null
    transaccionId?: IntNullableFilter<"MovimientoStock"> | number | null
    tenantId?: IntFilter<"MovimientoStock"> | number
  }

  export type TenantCreateWithoutUsuariosInput = {
    nombre: string
    createdAt?: Date | string
    productos?: ProductoCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutUsuariosInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutUsuariosInput, TenantUncheckedCreateWithoutUsuariosInput>
  }

  export type ProductoCreateWithoutCreadoPorInput = {
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenant: TenantCreateNestedOneWithoutProductosInput
    variantes?: VarianteProductoCreateNestedManyWithoutProductoInput
    movimientos?: MovimientoStockCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutCreadoPorInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenantId: number
    variantes?: VarianteProductoUncheckedCreateNestedManyWithoutProductoInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutCreadoPorInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutCreadoPorInput, ProductoUncheckedCreateWithoutCreadoPorInput>
  }

  export type ProductoCreateManyCreadoPorInputEnvelope = {
    data: ProductoCreateManyCreadoPorInput | ProductoCreateManyCreadoPorInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionCreateWithoutUsuarioInput = {
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    total: number
    cliente?: ClienteCreateNestedOneWithoutTransaccionesInput
    ventas?: VentaCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockCreateNestedManyWithoutTransaccionInput
    tenant: TenantCreateNestedOneWithoutTransaccionesInput
  }

  export type TransaccionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    total: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutUsuarioInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutUsuarioInput, TransaccionUncheckedCreateWithoutUsuarioInput>
  }

  export type TransaccionCreateManyUsuarioInputEnvelope = {
    data: TransaccionCreateManyUsuarioInput | TransaccionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type MovimientoStockCreateWithoutUsuarioInput = {
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    producto: ProductoCreateNestedOneWithoutMovimientosInput
    variante: VarianteProductoCreateNestedOneWithoutMovimientosInput
    transaccion?: TransaccionCreateNestedOneWithoutMovimientosInput
    tenant: TenantCreateNestedOneWithoutMovimientosStockInput
  }

  export type MovimientoStockUncheckedCreateWithoutUsuarioInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    transaccionId?: number | null
    tenantId: number
  }

  export type MovimientoStockCreateOrConnectWithoutUsuarioInput = {
    where: MovimientoStockWhereUniqueInput
    create: XOR<MovimientoStockCreateWithoutUsuarioInput, MovimientoStockUncheckedCreateWithoutUsuarioInput>
  }

  export type MovimientoStockCreateManyUsuarioInputEnvelope = {
    data: MovimientoStockCreateManyUsuarioInput | MovimientoStockCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type TenantUpsertWithoutUsuariosInput = {
    update: XOR<TenantUpdateWithoutUsuariosInput, TenantUncheckedUpdateWithoutUsuariosInput>
    create: XOR<TenantCreateWithoutUsuariosInput, TenantUncheckedCreateWithoutUsuariosInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutUsuariosInput, TenantUncheckedUpdateWithoutUsuariosInput>
  }

  export type TenantUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ProductoUpsertWithWhereUniqueWithoutCreadoPorInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutCreadoPorInput, ProductoUncheckedUpdateWithoutCreadoPorInput>
    create: XOR<ProductoCreateWithoutCreadoPorInput, ProductoUncheckedCreateWithoutCreadoPorInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutCreadoPorInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutCreadoPorInput, ProductoUncheckedUpdateWithoutCreadoPorInput>
  }

  export type ProductoUpdateManyWithWhereWithoutCreadoPorInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutCreadoPorInput>
  }

  export type TransaccionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: TransaccionWhereUniqueInput
    update: XOR<TransaccionUpdateWithoutUsuarioInput, TransaccionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<TransaccionCreateWithoutUsuarioInput, TransaccionUncheckedCreateWithoutUsuarioInput>
  }

  export type TransaccionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: TransaccionWhereUniqueInput
    data: XOR<TransaccionUpdateWithoutUsuarioInput, TransaccionUncheckedUpdateWithoutUsuarioInput>
  }

  export type TransaccionUpdateManyWithWhereWithoutUsuarioInput = {
    where: TransaccionScalarWhereInput
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type MovimientoStockUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: MovimientoStockWhereUniqueInput
    update: XOR<MovimientoStockUpdateWithoutUsuarioInput, MovimientoStockUncheckedUpdateWithoutUsuarioInput>
    create: XOR<MovimientoStockCreateWithoutUsuarioInput, MovimientoStockUncheckedCreateWithoutUsuarioInput>
  }

  export type MovimientoStockUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: MovimientoStockWhereUniqueInput
    data: XOR<MovimientoStockUpdateWithoutUsuarioInput, MovimientoStockUncheckedUpdateWithoutUsuarioInput>
  }

  export type MovimientoStockUpdateManyWithWhereWithoutUsuarioInput = {
    where: MovimientoStockScalarWhereInput
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type TenantCreateWithoutProductosInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutProductosInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutProductosInput, TenantUncheckedCreateWithoutProductosInput>
  }

  export type UserCreateWithoutProductosInput = {
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenant: TenantCreateNestedOneWithoutUsuariosInput
    transacciones?: TransaccionCreateNestedManyWithoutUsuarioInput
    movimientos?: MovimientoStockCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutProductosInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutUsuarioInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutProductosInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductosInput, UserUncheckedCreateWithoutProductosInput>
  }

  export type VarianteProductoCreateWithoutProductoInput = {
    color?: string | null
    talla?: string | null
    stock?: number
    tenant: TenantCreateNestedOneWithoutVariantesProductoInput
    ventas?: VentaCreateNestedManyWithoutVarianteInput
    movimientos?: MovimientoStockCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    color?: string | null
    talla?: string | null
    stock?: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutVarianteInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoCreateOrConnectWithoutProductoInput = {
    where: VarianteProductoWhereUniqueInput
    create: XOR<VarianteProductoCreateWithoutProductoInput, VarianteProductoUncheckedCreateWithoutProductoInput>
  }

  export type VarianteProductoCreateManyProductoInputEnvelope = {
    data: VarianteProductoCreateManyProductoInput | VarianteProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type MovimientoStockCreateWithoutProductoInput = {
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    variante: VarianteProductoCreateNestedOneWithoutMovimientosInput
    usuario?: UserCreateNestedOneWithoutMovimientosInput
    transaccion?: TransaccionCreateNestedOneWithoutMovimientosInput
    tenant: TenantCreateNestedOneWithoutMovimientosStockInput
  }

  export type MovimientoStockUncheckedCreateWithoutProductoInput = {
    id?: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type MovimientoStockCreateOrConnectWithoutProductoInput = {
    where: MovimientoStockWhereUniqueInput
    create: XOR<MovimientoStockCreateWithoutProductoInput, MovimientoStockUncheckedCreateWithoutProductoInput>
  }

  export type MovimientoStockCreateManyProductoInputEnvelope = {
    data: MovimientoStockCreateManyProductoInput | MovimientoStockCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type TenantUpsertWithoutProductosInput = {
    update: XOR<TenantUpdateWithoutProductosInput, TenantUncheckedUpdateWithoutProductosInput>
    create: XOR<TenantCreateWithoutProductosInput, TenantUncheckedCreateWithoutProductosInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutProductosInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutProductosInput, TenantUncheckedUpdateWithoutProductosInput>
  }

  export type TenantUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutProductosInput = {
    update: XOR<UserUpdateWithoutProductosInput, UserUncheckedUpdateWithoutProductosInput>
    create: XOR<UserCreateWithoutProductosInput, UserUncheckedCreateWithoutProductosInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductosInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductosInput, UserUncheckedUpdateWithoutProductosInput>
  }

  export type UserUpdateWithoutProductosInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutUsuariosNestedInput
    transacciones?: TransaccionUpdateManyWithoutUsuarioNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionUncheckedUpdateManyWithoutUsuarioNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type VarianteProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: VarianteProductoWhereUniqueInput
    update: XOR<VarianteProductoUpdateWithoutProductoInput, VarianteProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<VarianteProductoCreateWithoutProductoInput, VarianteProductoUncheckedCreateWithoutProductoInput>
  }

  export type VarianteProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: VarianteProductoWhereUniqueInput
    data: XOR<VarianteProductoUpdateWithoutProductoInput, VarianteProductoUncheckedUpdateWithoutProductoInput>
  }

  export type VarianteProductoUpdateManyWithWhereWithoutProductoInput = {
    where: VarianteProductoScalarWhereInput
    data: XOR<VarianteProductoUpdateManyMutationInput, VarianteProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type MovimientoStockUpsertWithWhereUniqueWithoutProductoInput = {
    where: MovimientoStockWhereUniqueInput
    update: XOR<MovimientoStockUpdateWithoutProductoInput, MovimientoStockUncheckedUpdateWithoutProductoInput>
    create: XOR<MovimientoStockCreateWithoutProductoInput, MovimientoStockUncheckedCreateWithoutProductoInput>
  }

  export type MovimientoStockUpdateWithWhereUniqueWithoutProductoInput = {
    where: MovimientoStockWhereUniqueInput
    data: XOR<MovimientoStockUpdateWithoutProductoInput, MovimientoStockUncheckedUpdateWithoutProductoInput>
  }

  export type MovimientoStockUpdateManyWithWhereWithoutProductoInput = {
    where: MovimientoStockScalarWhereInput
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyWithoutProductoInput>
  }

  export type ProductoCreateWithoutVariantesInput = {
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenant: TenantCreateNestedOneWithoutProductosInput
    creadoPor?: UserCreateNestedOneWithoutProductosInput
    movimientos?: MovimientoStockCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutVariantesInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenantId: number
    creadoPorId?: number | null
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutVariantesInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutVariantesInput, ProductoUncheckedCreateWithoutVariantesInput>
  }

  export type TenantCreateWithoutVariantesProductoInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    productos?: ProductoCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutVariantesProductoInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutVariantesProductoInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutVariantesProductoInput, TenantUncheckedCreateWithoutVariantesProductoInput>
  }

  export type VentaCreateWithoutVarianteInput = {
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    cliente: ClienteCreateNestedOneWithoutVentasInput
    transaccion?: TransaccionCreateNestedOneWithoutVentasInput
    tenant: TenantCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateWithoutVarianteInput = {
    id?: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type VentaCreateOrConnectWithoutVarianteInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutVarianteInput, VentaUncheckedCreateWithoutVarianteInput>
  }

  export type VentaCreateManyVarianteInputEnvelope = {
    data: VentaCreateManyVarianteInput | VentaCreateManyVarianteInput[]
    skipDuplicates?: boolean
  }

  export type MovimientoStockCreateWithoutVarianteInput = {
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    producto: ProductoCreateNestedOneWithoutMovimientosInput
    usuario?: UserCreateNestedOneWithoutMovimientosInput
    transaccion?: TransaccionCreateNestedOneWithoutMovimientosInput
    tenant: TenantCreateNestedOneWithoutMovimientosStockInput
  }

  export type MovimientoStockUncheckedCreateWithoutVarianteInput = {
    id?: number
    productoId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type MovimientoStockCreateOrConnectWithoutVarianteInput = {
    where: MovimientoStockWhereUniqueInput
    create: XOR<MovimientoStockCreateWithoutVarianteInput, MovimientoStockUncheckedCreateWithoutVarianteInput>
  }

  export type MovimientoStockCreateManyVarianteInputEnvelope = {
    data: MovimientoStockCreateManyVarianteInput | MovimientoStockCreateManyVarianteInput[]
    skipDuplicates?: boolean
  }

  export type ProductoUpsertWithoutVariantesInput = {
    update: XOR<ProductoUpdateWithoutVariantesInput, ProductoUncheckedUpdateWithoutVariantesInput>
    create: XOR<ProductoCreateWithoutVariantesInput, ProductoUncheckedCreateWithoutVariantesInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutVariantesInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutVariantesInput, ProductoUncheckedUpdateWithoutVariantesInput>
  }

  export type ProductoUpdateWithoutVariantesInput = {
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutProductosNestedInput
    creadoPor?: UserUpdateOneWithoutProductosNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutVariantesInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type TenantUpsertWithoutVariantesProductoInput = {
    update: XOR<TenantUpdateWithoutVariantesProductoInput, TenantUncheckedUpdateWithoutVariantesProductoInput>
    create: XOR<TenantCreateWithoutVariantesProductoInput, TenantUncheckedCreateWithoutVariantesProductoInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutVariantesProductoInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutVariantesProductoInput, TenantUncheckedUpdateWithoutVariantesProductoInput>
  }

  export type TenantUpdateWithoutVariantesProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutVariantesProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type VentaUpsertWithWhereUniqueWithoutVarianteInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutVarianteInput, VentaUncheckedUpdateWithoutVarianteInput>
    create: XOR<VentaCreateWithoutVarianteInput, VentaUncheckedCreateWithoutVarianteInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutVarianteInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutVarianteInput, VentaUncheckedUpdateWithoutVarianteInput>
  }

  export type VentaUpdateManyWithWhereWithoutVarianteInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutVarianteInput>
  }

  export type MovimientoStockUpsertWithWhereUniqueWithoutVarianteInput = {
    where: MovimientoStockWhereUniqueInput
    update: XOR<MovimientoStockUpdateWithoutVarianteInput, MovimientoStockUncheckedUpdateWithoutVarianteInput>
    create: XOR<MovimientoStockCreateWithoutVarianteInput, MovimientoStockUncheckedCreateWithoutVarianteInput>
  }

  export type MovimientoStockUpdateWithWhereUniqueWithoutVarianteInput = {
    where: MovimientoStockWhereUniqueInput
    data: XOR<MovimientoStockUpdateWithoutVarianteInput, MovimientoStockUncheckedUpdateWithoutVarianteInput>
  }

  export type MovimientoStockUpdateManyWithWhereWithoutVarianteInput = {
    where: MovimientoStockScalarWhereInput
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyWithoutVarianteInput>
  }

  export type ProductoCreateWithoutMovimientosInput = {
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenant: TenantCreateNestedOneWithoutProductosInput
    creadoPor?: UserCreateNestedOneWithoutProductosInput
    variantes?: VarianteProductoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutMovimientosInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenantId: number
    creadoPorId?: number | null
    variantes?: VarianteProductoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutMovimientosInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutMovimientosInput, ProductoUncheckedCreateWithoutMovimientosInput>
  }

  export type VarianteProductoCreateWithoutMovimientosInput = {
    color?: string | null
    talla?: string | null
    stock?: number
    producto: ProductoCreateNestedOneWithoutVariantesInput
    tenant: TenantCreateNestedOneWithoutVariantesProductoInput
    ventas?: VentaCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoUncheckedCreateWithoutMovimientosInput = {
    id?: number
    productoId: number
    color?: string | null
    talla?: string | null
    stock?: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoCreateOrConnectWithoutMovimientosInput = {
    where: VarianteProductoWhereUniqueInput
    create: XOR<VarianteProductoCreateWithoutMovimientosInput, VarianteProductoUncheckedCreateWithoutMovimientosInput>
  }

  export type UserCreateWithoutMovimientosInput = {
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenant: TenantCreateNestedOneWithoutUsuariosInput
    productos?: ProductoCreateNestedManyWithoutCreadoPorInput
    transacciones?: TransaccionCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutMovimientosInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    productos?: ProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutMovimientosInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMovimientosInput, UserUncheckedCreateWithoutMovimientosInput>
  }

  export type TransaccionCreateWithoutMovimientosInput = {
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    total: number
    cliente?: ClienteCreateNestedOneWithoutTransaccionesInput
    usuario?: UserCreateNestedOneWithoutTransaccionesInput
    ventas?: VentaCreateNestedManyWithoutTransaccionInput
    tenant: TenantCreateNestedOneWithoutTransaccionesInput
  }

  export type TransaccionUncheckedCreateWithoutMovimientosInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutMovimientosInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutMovimientosInput, TransaccionUncheckedCreateWithoutMovimientosInput>
  }

  export type TenantCreateWithoutMovimientosStockInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    productos?: ProductoCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutMovimientosStockInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutMovimientosStockInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutMovimientosStockInput, TenantUncheckedCreateWithoutMovimientosStockInput>
  }

  export type ProductoUpsertWithoutMovimientosInput = {
    update: XOR<ProductoUpdateWithoutMovimientosInput, ProductoUncheckedUpdateWithoutMovimientosInput>
    create: XOR<ProductoCreateWithoutMovimientosInput, ProductoUncheckedCreateWithoutMovimientosInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutMovimientosInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutMovimientosInput, ProductoUncheckedUpdateWithoutMovimientosInput>
  }

  export type ProductoUpdateWithoutMovimientosInput = {
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutProductosNestedInput
    creadoPor?: UserUpdateOneWithoutProductosNestedInput
    variantes?: VarianteProductoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutMovimientosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    variantes?: VarianteProductoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type VarianteProductoUpsertWithoutMovimientosInput = {
    update: XOR<VarianteProductoUpdateWithoutMovimientosInput, VarianteProductoUncheckedUpdateWithoutMovimientosInput>
    create: XOR<VarianteProductoCreateWithoutMovimientosInput, VarianteProductoUncheckedCreateWithoutMovimientosInput>
    where?: VarianteProductoWhereInput
  }

  export type VarianteProductoUpdateToOneWithWhereWithoutMovimientosInput = {
    where?: VarianteProductoWhereInput
    data: XOR<VarianteProductoUpdateWithoutMovimientosInput, VarianteProductoUncheckedUpdateWithoutMovimientosInput>
  }

  export type VarianteProductoUpdateWithoutMovimientosInput = {
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutVariantesNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVariantesProductoNestedInput
    ventas?: VentaUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateWithoutMovimientosInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutVarianteNestedInput
  }

  export type UserUpsertWithoutMovimientosInput = {
    update: XOR<UserUpdateWithoutMovimientosInput, UserUncheckedUpdateWithoutMovimientosInput>
    create: XOR<UserCreateWithoutMovimientosInput, UserUncheckedCreateWithoutMovimientosInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMovimientosInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMovimientosInput, UserUncheckedUpdateWithoutMovimientosInput>
  }

  export type UserUpdateWithoutMovimientosInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutUsuariosNestedInput
    productos?: ProductoUpdateManyWithoutCreadoPorNestedInput
    transacciones?: TransaccionUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutMovimientosInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    productos?: ProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TransaccionUpsertWithoutMovimientosInput = {
    update: XOR<TransaccionUpdateWithoutMovimientosInput, TransaccionUncheckedUpdateWithoutMovimientosInput>
    create: XOR<TransaccionCreateWithoutMovimientosInput, TransaccionUncheckedCreateWithoutMovimientosInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutMovimientosInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutMovimientosInput, TransaccionUncheckedUpdateWithoutMovimientosInput>
  }

  export type TransaccionUpdateWithoutMovimientosInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneWithoutTransaccionesNestedInput
    usuario?: UserUpdateOneWithoutTransaccionesNestedInput
    ventas?: VentaUpdateManyWithoutTransaccionNestedInput
    tenant?: TenantUpdateOneRequiredWithoutTransaccionesNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutMovimientosInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TenantUpsertWithoutMovimientosStockInput = {
    update: XOR<TenantUpdateWithoutMovimientosStockInput, TenantUncheckedUpdateWithoutMovimientosStockInput>
    create: XOR<TenantCreateWithoutMovimientosStockInput, TenantUncheckedCreateWithoutMovimientosStockInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutMovimientosStockInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutMovimientosStockInput, TenantUncheckedUpdateWithoutMovimientosStockInput>
  }

  export type TenantUpdateWithoutMovimientosStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutMovimientosStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type VentaCreateWithoutClienteInput = {
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    variante: VarianteProductoCreateNestedOneWithoutVentasInput
    transaccion?: TransaccionCreateNestedOneWithoutVentasInput
    tenant: TenantCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateWithoutClienteInput = {
    id?: number
    varianteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type VentaCreateOrConnectWithoutClienteInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput>
  }

  export type VentaCreateManyClienteInputEnvelope = {
    data: VentaCreateManyClienteInput | VentaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionCreateWithoutClienteInput = {
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    total: number
    usuario?: UserCreateNestedOneWithoutTransaccionesInput
    ventas?: VentaCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockCreateNestedManyWithoutTransaccionInput
    tenant: TenantCreateNestedOneWithoutTransaccionesInput
  }

  export type TransaccionUncheckedCreateWithoutClienteInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutTransaccionInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutClienteInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutClienteInput, TransaccionUncheckedCreateWithoutClienteInput>
  }

  export type TransaccionCreateManyClienteInputEnvelope = {
    data: TransaccionCreateManyClienteInput | TransaccionCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type TenantCreateWithoutClientesInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    productos?: ProductoCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutClientesInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutClientesInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutClientesInput, TenantUncheckedCreateWithoutClientesInput>
  }

  export type VentaUpsertWithWhereUniqueWithoutClienteInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutClienteInput, VentaUncheckedUpdateWithoutClienteInput>
    create: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutClienteInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutClienteInput, VentaUncheckedUpdateWithoutClienteInput>
  }

  export type VentaUpdateManyWithWhereWithoutClienteInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutClienteInput>
  }

  export type TransaccionUpsertWithWhereUniqueWithoutClienteInput = {
    where: TransaccionWhereUniqueInput
    update: XOR<TransaccionUpdateWithoutClienteInput, TransaccionUncheckedUpdateWithoutClienteInput>
    create: XOR<TransaccionCreateWithoutClienteInput, TransaccionUncheckedCreateWithoutClienteInput>
  }

  export type TransaccionUpdateWithWhereUniqueWithoutClienteInput = {
    where: TransaccionWhereUniqueInput
    data: XOR<TransaccionUpdateWithoutClienteInput, TransaccionUncheckedUpdateWithoutClienteInput>
  }

  export type TransaccionUpdateManyWithWhereWithoutClienteInput = {
    where: TransaccionScalarWhereInput
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyWithoutClienteInput>
  }

  export type TenantUpsertWithoutClientesInput = {
    update: XOR<TenantUpdateWithoutClientesInput, TenantUncheckedUpdateWithoutClientesInput>
    create: XOR<TenantCreateWithoutClientesInput, TenantUncheckedCreateWithoutClientesInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutClientesInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutClientesInput, TenantUncheckedUpdateWithoutClientesInput>
  }

  export type TenantUpdateWithoutClientesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutClientesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type VarianteProductoCreateWithoutVentasInput = {
    color?: string | null
    talla?: string | null
    stock?: number
    producto: ProductoCreateNestedOneWithoutVariantesInput
    tenant: TenantCreateNestedOneWithoutVariantesProductoInput
    movimientos?: MovimientoStockCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoUncheckedCreateWithoutVentasInput = {
    id?: number
    productoId: number
    color?: string | null
    talla?: string | null
    stock?: number
    tenantId: number
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutVarianteInput
  }

  export type VarianteProductoCreateOrConnectWithoutVentasInput = {
    where: VarianteProductoWhereUniqueInput
    create: XOR<VarianteProductoCreateWithoutVentasInput, VarianteProductoUncheckedCreateWithoutVentasInput>
  }

  export type ClienteCreateWithoutVentasInput = {
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transacciones?: TransaccionCreateNestedManyWithoutClienteInput
    tenant: TenantCreateNestedOneWithoutClientesInput
  }

  export type ClienteUncheckedCreateWithoutVentasInput = {
    id?: number
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutVentasInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutVentasInput, ClienteUncheckedCreateWithoutVentasInput>
  }

  export type TransaccionCreateWithoutVentasInput = {
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    total: number
    cliente?: ClienteCreateNestedOneWithoutTransaccionesInput
    usuario?: UserCreateNestedOneWithoutTransaccionesInput
    movimientos?: MovimientoStockCreateNestedManyWithoutTransaccionInput
    tenant: TenantCreateNestedOneWithoutTransaccionesInput
  }

  export type TransaccionUncheckedCreateWithoutVentasInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    tenantId: number
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutVentasInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutVentasInput, TransaccionUncheckedCreateWithoutVentasInput>
  }

  export type TenantCreateWithoutVentasInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    productos?: ProductoCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutVentasInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    transacciones?: TransaccionUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutVentasInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutVentasInput, TenantUncheckedCreateWithoutVentasInput>
  }

  export type VarianteProductoUpsertWithoutVentasInput = {
    update: XOR<VarianteProductoUpdateWithoutVentasInput, VarianteProductoUncheckedUpdateWithoutVentasInput>
    create: XOR<VarianteProductoCreateWithoutVentasInput, VarianteProductoUncheckedCreateWithoutVentasInput>
    where?: VarianteProductoWhereInput
  }

  export type VarianteProductoUpdateToOneWithWhereWithoutVentasInput = {
    where?: VarianteProductoWhereInput
    data: XOR<VarianteProductoUpdateWithoutVentasInput, VarianteProductoUncheckedUpdateWithoutVentasInput>
  }

  export type VarianteProductoUpdateWithoutVentasInput = {
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutVariantesNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVariantesProductoNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutVarianteNestedInput
  }

  export type ClienteUpsertWithoutVentasInput = {
    update: XOR<ClienteUpdateWithoutVentasInput, ClienteUncheckedUpdateWithoutVentasInput>
    create: XOR<ClienteCreateWithoutVentasInput, ClienteUncheckedCreateWithoutVentasInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutVentasInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutVentasInput, ClienteUncheckedUpdateWithoutVentasInput>
  }

  export type ClienteUpdateWithoutVentasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transacciones?: TransaccionUpdateManyWithoutClienteNestedInput
    tenant?: TenantUpdateOneRequiredWithoutClientesNestedInput
  }

  export type ClienteUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type TransaccionUpsertWithoutVentasInput = {
    update: XOR<TransaccionUpdateWithoutVentasInput, TransaccionUncheckedUpdateWithoutVentasInput>
    create: XOR<TransaccionCreateWithoutVentasInput, TransaccionUncheckedCreateWithoutVentasInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutVentasInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutVentasInput, TransaccionUncheckedUpdateWithoutVentasInput>
  }

  export type TransaccionUpdateWithoutVentasInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneWithoutTransaccionesNestedInput
    usuario?: UserUpdateOneWithoutTransaccionesNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutTransaccionNestedInput
    tenant?: TenantUpdateOneRequiredWithoutTransaccionesNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TenantUpsertWithoutVentasInput = {
    update: XOR<TenantUpdateWithoutVentasInput, TenantUncheckedUpdateWithoutVentasInput>
    create: XOR<TenantCreateWithoutVentasInput, TenantUncheckedCreateWithoutVentasInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutVentasInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutVentasInput, TenantUncheckedUpdateWithoutVentasInput>
  }

  export type TenantUpdateWithoutVentasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ClienteCreateWithoutTransaccionesInput = {
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    ventas?: VentaCreateNestedManyWithoutClienteInput
    tenant: TenantCreateNestedOneWithoutClientesInput
  }

  export type ClienteUncheckedCreateWithoutTransaccionesInput = {
    id?: number
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    ventas?: VentaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutTransaccionesInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutTransaccionesInput, ClienteUncheckedCreateWithoutTransaccionesInput>
  }

  export type UserCreateWithoutTransaccionesInput = {
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenant: TenantCreateNestedOneWithoutUsuariosInput
    productos?: ProductoCreateNestedManyWithoutCreadoPorInput
    movimientos?: MovimientoStockCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutTransaccionesInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    tenantId: number
    productos?: ProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    movimientos?: MovimientoStockUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutTransaccionesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTransaccionesInput, UserUncheckedCreateWithoutTransaccionesInput>
  }

  export type VentaCreateWithoutTransaccionInput = {
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    variante: VarianteProductoCreateNestedOneWithoutVentasInput
    cliente: ClienteCreateNestedOneWithoutVentasInput
    tenant: TenantCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateWithoutTransaccionInput = {
    id?: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    tenantId: number
  }

  export type VentaCreateOrConnectWithoutTransaccionInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
  }

  export type VentaCreateManyTransaccionInputEnvelope = {
    data: VentaCreateManyTransaccionInput | VentaCreateManyTransaccionInput[]
    skipDuplicates?: boolean
  }

  export type MovimientoStockCreateWithoutTransaccionInput = {
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    producto: ProductoCreateNestedOneWithoutMovimientosInput
    variante: VarianteProductoCreateNestedOneWithoutMovimientosInput
    usuario?: UserCreateNestedOneWithoutMovimientosInput
    tenant: TenantCreateNestedOneWithoutMovimientosStockInput
  }

  export type MovimientoStockUncheckedCreateWithoutTransaccionInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    tenantId: number
  }

  export type MovimientoStockCreateOrConnectWithoutTransaccionInput = {
    where: MovimientoStockWhereUniqueInput
    create: XOR<MovimientoStockCreateWithoutTransaccionInput, MovimientoStockUncheckedCreateWithoutTransaccionInput>
  }

  export type MovimientoStockCreateManyTransaccionInputEnvelope = {
    data: MovimientoStockCreateManyTransaccionInput | MovimientoStockCreateManyTransaccionInput[]
    skipDuplicates?: boolean
  }

  export type TenantCreateWithoutTransaccionesInput = {
    nombre: string
    createdAt?: Date | string
    usuarios?: UserCreateNestedManyWithoutTenantInput
    productos?: ProductoCreateNestedManyWithoutTenantInput
    clientes?: ClienteCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoCreateNestedManyWithoutTenantInput
    ventas?: VentaCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTransaccionesInput = {
    id?: number
    nombre: string
    createdAt?: Date | string
    usuarios?: UserUncheckedCreateNestedManyWithoutTenantInput
    productos?: ProductoUncheckedCreateNestedManyWithoutTenantInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutTenantInput
    variantesProducto?: VarianteProductoUncheckedCreateNestedManyWithoutTenantInput
    ventas?: VentaUncheckedCreateNestedManyWithoutTenantInput
    movimientosStock?: MovimientoStockUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTransaccionesInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTransaccionesInput, TenantUncheckedCreateWithoutTransaccionesInput>
  }

  export type ClienteUpsertWithoutTransaccionesInput = {
    update: XOR<ClienteUpdateWithoutTransaccionesInput, ClienteUncheckedUpdateWithoutTransaccionesInput>
    create: XOR<ClienteCreateWithoutTransaccionesInput, ClienteUncheckedCreateWithoutTransaccionesInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutTransaccionesInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutTransaccionesInput, ClienteUncheckedUpdateWithoutTransaccionesInput>
  }

  export type ClienteUpdateWithoutTransaccionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ventas?: VentaUpdateManyWithoutClienteNestedInput
    tenant?: TenantUpdateOneRequiredWithoutClientesNestedInput
  }

  export type ClienteUncheckedUpdateWithoutTransaccionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type UserUpsertWithoutTransaccionesInput = {
    update: XOR<UserUpdateWithoutTransaccionesInput, UserUncheckedUpdateWithoutTransaccionesInput>
    create: XOR<UserCreateWithoutTransaccionesInput, UserUncheckedCreateWithoutTransaccionesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTransaccionesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTransaccionesInput, UserUncheckedUpdateWithoutTransaccionesInput>
  }

  export type UserUpdateWithoutTransaccionesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutUsuariosNestedInput
    productos?: ProductoUpdateManyWithoutCreadoPorNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutTransaccionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    productos?: ProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type VentaUpsertWithWhereUniqueWithoutTransaccionInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutTransaccionInput, VentaUncheckedUpdateWithoutTransaccionInput>
    create: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutTransaccionInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutTransaccionInput, VentaUncheckedUpdateWithoutTransaccionInput>
  }

  export type VentaUpdateManyWithWhereWithoutTransaccionInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutTransaccionInput>
  }

  export type MovimientoStockUpsertWithWhereUniqueWithoutTransaccionInput = {
    where: MovimientoStockWhereUniqueInput
    update: XOR<MovimientoStockUpdateWithoutTransaccionInput, MovimientoStockUncheckedUpdateWithoutTransaccionInput>
    create: XOR<MovimientoStockCreateWithoutTransaccionInput, MovimientoStockUncheckedCreateWithoutTransaccionInput>
  }

  export type MovimientoStockUpdateWithWhereUniqueWithoutTransaccionInput = {
    where: MovimientoStockWhereUniqueInput
    data: XOR<MovimientoStockUpdateWithoutTransaccionInput, MovimientoStockUncheckedUpdateWithoutTransaccionInput>
  }

  export type MovimientoStockUpdateManyWithWhereWithoutTransaccionInput = {
    where: MovimientoStockScalarWhereInput
    data: XOR<MovimientoStockUpdateManyMutationInput, MovimientoStockUncheckedUpdateManyWithoutTransaccionInput>
  }

  export type TenantUpsertWithoutTransaccionesInput = {
    update: XOR<TenantUpdateWithoutTransaccionesInput, TenantUncheckedUpdateWithoutTransaccionesInput>
    create: XOR<TenantCreateWithoutTransaccionesInput, TenantUncheckedCreateWithoutTransaccionesInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutTransaccionesInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutTransaccionesInput, TenantUncheckedUpdateWithoutTransaccionesInput>
  }

  export type TenantUpdateWithoutTransaccionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUpdateManyWithoutTenantNestedInput
    productos?: ProductoUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUpdateManyWithoutTenantNestedInput
    ventas?: VentaUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTransaccionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UserUncheckedUpdateManyWithoutTenantNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutTenantNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutTenantNestedInput
    variantesProducto?: VarianteProductoUncheckedUpdateManyWithoutTenantNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutTenantNestedInput
    movimientosStock?: MovimientoStockUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserCreateManyTenantInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductoCreateManyTenantInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    creadoPorId?: number | null
  }

  export type ClienteCreateManyTenantInput = {
    id?: number
    nombre: string
    telefono?: string | null
    email?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VarianteProductoCreateManyTenantInput = {
    id?: number
    productoId: number
    color?: string | null
    talla?: string | null
    stock?: number
  }

  export type TransaccionCreateManyTenantInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    usuarioId?: number | null
    total: number
  }

  export type VentaCreateManyTenantInput = {
    id?: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
  }

  export type MovimientoStockCreateManyTenantInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
  }

  export type UserUpdateWithoutTenantInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: ProductoUpdateManyWithoutCreadoPorNestedInput
    transacciones?: TransaccionUpdateManyWithoutUsuarioNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: ProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutUsuarioNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoUpdateWithoutTenantInput = {
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creadoPor?: UserUpdateOneWithoutProductosNestedInput
    variantes?: VarianteProductoUpdateManyWithoutProductoNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    variantes?: VarianteProductoUncheckedUpdateManyWithoutProductoNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClienteUpdateWithoutTenantInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ventas?: VentaUpdateManyWithoutClienteNestedInput
    transacciones?: TransaccionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ventas?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    transacciones?: TransaccionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VarianteProductoUpdateWithoutTenantInput = {
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutVariantesNestedInput
    ventas?: VentaUpdateManyWithoutVarianteNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutVarianteNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionUpdateWithoutTenantInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneWithoutTransaccionesNestedInput
    usuario?: UserUpdateOneWithoutTransaccionesNestedInput
    ventas?: VentaUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type VentaUpdateWithoutTenantInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    variante?: VarianteProductoUpdateOneRequiredWithoutVentasNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutVentasNestedInput
    transaccion?: TransaccionUpdateOneWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MovimientoStockUpdateWithoutTenantInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutMovimientosNestedInput
    variante?: VarianteProductoUpdateOneRequiredWithoutMovimientosNestedInput
    usuario?: UserUpdateOneWithoutMovimientosNestedInput
    transaccion?: TransaccionUpdateOneWithoutMovimientosNestedInput
  }

  export type MovimientoStockUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MovimientoStockUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProductoCreateManyCreadoPorInput = {
    id?: number
    codigoBarra?: string | null
    nombre: string
    descripcion?: string | null
    precio: number
    costo: number
    categoria?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    tenantId: number
  }

  export type TransaccionCreateManyUsuarioInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    clienteId?: number | null
    fecha?: Date | string
    total: number
    tenantId: number
  }

  export type MovimientoStockCreateManyUsuarioInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    transaccionId?: number | null
    tenantId: number
  }

  export type ProductoUpdateWithoutCreadoPorInput = {
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant?: TenantUpdateOneRequiredWithoutProductosNestedInput
    variantes?: VarianteProductoUpdateManyWithoutProductoNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutCreadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
    variantes?: VarianteProductoUncheckedUpdateManyWithoutProductoNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutCreadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoBarra?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: FloatFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionUpdateWithoutUsuarioInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneWithoutTransaccionesNestedInput
    ventas?: VentaUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutTransaccionNestedInput
    tenant?: TenantUpdateOneRequiredWithoutTransaccionesNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUpdateWithoutUsuarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutMovimientosNestedInput
    variante?: VarianteProductoUpdateOneRequiredWithoutMovimientosNestedInput
    transaccion?: TransaccionUpdateOneWithoutMovimientosNestedInput
    tenant?: TenantUpdateOneRequiredWithoutMovimientosStockNestedInput
  }

  export type MovimientoStockUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VarianteProductoCreateManyProductoInput = {
    id?: number
    color?: string | null
    talla?: string | null
    stock?: number
    tenantId: number
  }

  export type MovimientoStockCreateManyProductoInput = {
    id?: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type VarianteProductoUpdateWithoutProductoInput = {
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenant?: TenantUpdateOneRequiredWithoutVariantesProductoNestedInput
    ventas?: VentaUpdateManyWithoutVarianteNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutVarianteNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutVarianteNestedInput
  }

  export type VarianteProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    talla?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    variante?: VarianteProductoUpdateOneRequiredWithoutMovimientosNestedInput
    usuario?: UserUpdateOneWithoutMovimientosNestedInput
    transaccion?: TransaccionUpdateOneWithoutMovimientosNestedInput
    tenant?: TenantUpdateOneRequiredWithoutMovimientosStockNestedInput
  }

  export type MovimientoStockUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManyVarianteInput = {
    id?: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type MovimientoStockCreateManyVarianteInput = {
    id?: number
    productoId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type VentaUpdateWithoutVarianteInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    cliente?: ClienteUpdateOneRequiredWithoutVentasNestedInput
    transaccion?: TransaccionUpdateOneWithoutVentasNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateWithoutVarianteInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaUncheckedUpdateManyWithoutVarianteInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUpdateWithoutVarianteInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutMovimientosNestedInput
    usuario?: UserUpdateOneWithoutMovimientosNestedInput
    transaccion?: TransaccionUpdateOneWithoutMovimientosNestedInput
    tenant?: TenantUpdateOneRequiredWithoutMovimientosStockNestedInput
  }

  export type MovimientoStockUncheckedUpdateWithoutVarianteInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUncheckedUpdateManyWithoutVarianteInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManyClienteInput = {
    id?: number
    varianteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    transaccionId?: number | null
    tenantId: number
  }

  export type TransaccionCreateManyClienteInput = {
    id?: number
    tipo: $Enums.TipoTransaccion
    fecha?: Date | string
    usuarioId?: number | null
    total: number
    tenantId: number
  }

  export type VentaUpdateWithoutClienteInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    variante?: VarianteProductoUpdateOneRequiredWithoutVentasNestedInput
    transaccion?: TransaccionUpdateOneWithoutVentasNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    transaccionId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionUpdateWithoutClienteInput = {
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    usuario?: UserUpdateOneWithoutTransaccionesNestedInput
    ventas?: VentaUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUpdateManyWithoutTransaccionNestedInput
    tenant?: TenantUpdateOneRequiredWithoutTransaccionesNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
    ventas?: VentaUncheckedUpdateManyWithoutTransaccionNestedInput
    movimientos?: MovimientoStockUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoTransaccionFieldUpdateOperationsInput | $Enums.TipoTransaccion
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: FloatFieldUpdateOperationsInput | number
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManyTransaccionInput = {
    id?: number
    varianteId: number
    clienteId: number
    cantidad: number
    fecha?: Date | string
    precioUnitario?: number | null
    subtotal?: number | null
    tenantId: number
  }

  export type MovimientoStockCreateManyTransaccionInput = {
    id?: number
    productoId: number
    varianteId: number
    cantidad: number
    tipoMovimiento: string
    motivo?: string | null
    fecha?: Date | string
    usuarioId?: number | null
    tenantId: number
  }

  export type VentaUpdateWithoutTransaccionInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    variante?: VarianteProductoUpdateOneRequiredWithoutVentasNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutVentasNestedInput
    tenant?: TenantUpdateOneRequiredWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaUncheckedUpdateManyWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    precioUnitario?: NullableFloatFieldUpdateOperationsInput | number | null
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUpdateWithoutTransaccionInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutMovimientosNestedInput
    variante?: VarianteProductoUpdateOneRequiredWithoutMovimientosNestedInput
    usuario?: UserUpdateOneWithoutMovimientosNestedInput
    tenant?: TenantUpdateOneRequiredWithoutMovimientosStockNestedInput
  }

  export type MovimientoStockUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }

  export type MovimientoStockUncheckedUpdateManyWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    varianteId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    tipoMovimiento?: StringFieldUpdateOperationsInput | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}