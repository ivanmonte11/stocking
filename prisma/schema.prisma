generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")

  @@map("usuarios")
}

model Producto {
  id                  Int                @id @default(autoincrement())
  codigo_barra        String?            @unique
  nombre              String
  descripcion         String?
  precio              Float
  costo               Float
  categoria           String?
  fecha_creacion      DateTime           @default(now())
  fecha_actualizacion DateTime           @updatedAt
  variantes           VarianteProducto[]
  movimientos         MovimientoStock[]
}

model VarianteProducto {
  id          Int                @id @default(autoincrement())
  producto    Producto           @relation(fields: [productoId], references: [id])
  productoId  Int
  color       String?
  talla       String?
  stock       Int                @default(0)
  ventas      Venta[]
  movimientos MovimientoStock[]
}

enum TipoMovimiento {
  ENTRADA
  SALIDA
}

enum TipoTransaccion {
  VENTA
  COMPRA
  AJUSTE
}

model MovimientoStock {
  id              Int              @id @default(autoincrement())
  producto        Producto         @relation(fields: [producto_id], references: [id])
  producto_id     Int
  variante        VarianteProducto @relation(fields: [varianteId], references: [id])
  varianteId      Int
  cantidad        Int
  tipo_movimiento TipoMovimiento
  motivo          String?
  fecha           DateTime         @default(now())
  usuario_id      Int?
  usuario         String?

  transaccion     Transaccion?     @relation(fields: [transaccionId], references: [id])
  transaccionId   Int?
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  telefono  String?
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ventas    Venta[]
  transacciones Transaccion[]
}

model Venta {
  id             Int              @id @default(autoincrement())
  variante       VarianteProducto @relation(fields: [varianteId], references: [id])
  varianteId     Int
  cliente        Cliente          @relation(fields: [clienteId], references: [id])
  clienteId      Int
  cantidad       Int
  fecha          DateTime         @default(now())

  // Nuevos campos sin afectar datos anteriores
  precio_unitario Float?          // opcional, para nuevos tickets
  subtotal        Float?          // cantidad * precio

  transaccion     Transaccion?    @relation(fields: [transaccionId], references: [id])
  transaccionId   Int?
}

model Transaccion {
  id         Int       @id @default(autoincrement())
  tipo       TipoTransaccion
  cliente    Cliente?  @relation(fields: [clienteId], references: [id])
  clienteId  Int?
  fecha      DateTime  @default(now())
  usuarioId  Int?
  total      Float

  ventas     Venta[]
  movimientos MovimientoStock[]
}
